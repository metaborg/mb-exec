Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl(
              "Var"
            , FunType(
                [ConstType(Sort("String", []))]
              , ConstType(Sort("Exp", []))
              )
            )
          , OpDecl("Int", ConstType(Sort("Type", [])))
          , OpDecl("Float", ConstType(Sort("Type", [])))
          , OpDecl("Failure", ConstType(Sort("Result", [])))
          , OpDecl("Success", ConstType(Sort("Result", [])))
          , OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "test22_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("22: set a currently existing property"), Op("Nil", [])))
            , CallT(
                SVar("set_prop_2_0")
              , [ Build(Anno(Str("type"), Op("Nil", [])))
                , Build(Anno(Op("Float", []), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test21_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("21: set a currently non-existing property"), Op("Nil", [])))
            , CallT(
                SVar("set_prop_2_0")
              , [ Build(Anno(Str("type"), Op("Nil", [])))
                , Build(Anno(Op("Float", []), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("scope"), Op("Nil", []))
                          , Anno(Str("f"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "set_prop_2_0"
        , [ VarDec(
              "t_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(
              SVar("has_prop_1_0")
            , [CallT(SVar("t_139"), [], [])]
            , []
            )
          , CallT(
              SVar("replace_prop_2_0")
            , [ CallT(SVar("t_139"), [], [])
              , CallT(SVar("u_139"), [], [])
              ]
            , []
            )
          , CallT(
              SVar("add_prop_2_0")
            , [ CallT(SVar("t_139"), [], [])
              , CallT(SVar("u_139"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "test20_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("20: set a currently non-existing property"), Op("Nil", [])))
            , CallT(
                SVar("set_prop_2_0")
              , [ Build(Anno(Str("type"), Op("Nil", [])))
                , Build(Anno(Op("Float", []), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "rm_annotations_0_0"
        , []
        , []
        , Scope(
            ["p_70", "u_180"]
          , Seq(
              Match(Var("p_70"))
            , Seq(
                Match(Var("u_180"))
              , Build(Anno(Var("p_70"), Op("Nil", [])))
              )
            )
          )
        )
      , SDefT(
          "test19_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("19: merge the properties on the application of a rule"), Op("Nil", [])))
            , CallT(
                SVar("merge_props_1_0")
              , [CallT(SVar("rm_annotations_0_0"), [], [])]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test18_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("18: merge the properties on the application of a rule"), Op("Nil", [])))
            , CallT(
                SVar("merge_props_1_0")
              , [ CallT(
                    SVar("Set_Some_Property_2_0")
                  , [ Build(Anno(Str("type"), Op("Nil", [])))
                    , Build(Anno(Op("Float", []), Op("Nil", [])))
                    ]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "Set_Some_Property_2_0"
        , [ VarDec(
              "f_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["i_21", "j_21", "a_0"]
          , Seq(
              Match(Var("i_21"))
            , Seq(
                Match(Var("a_0"))
              , Seq(
                  Build(Var("i_21"))
                , Seq(
                    CallT(
                      SVar("add_prop_2_0")
                    , [ Build(Anno(Str("type"), Op("Nil", [])))
                      , Build(Anno(Op("Float", []), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Match(Var("j_21"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test17_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("17: merge the properties on the application of a rule"), Op("Nil", [])))
            , CallT(
                SVar("merge_props_1_0")
              , [ CallT(
                    SVar("Set_Some_Property_2_0")
                  , [ Build(Anno(Str("type"), Op("Nil", [])))
                    , Build(Anno(Op("Float", []), Op("Nil", [])))
                    ]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("scope"), Op("Nil", []))
                          , Anno(Str("f"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "get_props_0_0"
        , []
        , []
        , CallT(
            SVar("if_annotation_2_0")
          , [ CallT(SVar("get_annotations_0_0"), [], [])
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "Merge_Props_1_0"
        , [ VarDec(
              "w_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["w_71", "x_71", "y_71", "z_71", "n_181", "o_181", "p_181"]
          , Seq(
              Match(Anno(Var("w_71"), Var("y_71")))
            , Seq(
                Match(Var("n_181"))
              , Seq(
                  Build(Var("w_71"))
                , Seq(
                    CallT(SVar("w_138"), [], [])
                  , Seq(
                      Match(Var("x_71"))
                    , Seq(
                        Match(Var("p_181"))
                      , Seq(
                          Build(Var("x_71"))
                        , Seq(
                            CallT(SVar("get_props_0_0"), [], [])
                          , Seq(
                              Match(Var("o_181"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Var("o_181"), Anno(Var("y_71"), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("props_union_0_0"), [], [])
                                , Seq(
                                    Match(Anno(Var("z_71"), Wld))
                                  , Build(Anno(Var("x_71"), Var("z_71")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "merge_props_1_0"
        , [ VarDec(
              "i_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("if_annotation_2_0")
          , [ CallT(
                SVar("Merge_Props_1_0")
              , [CallT(SVar("i_139"), [], [])]
              , []
              )
            , CallT(SVar("i_139"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "test16_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("16: merge the properties on the application of a strategy"), Op("Nil", [])))
            , CallT(
                SVar("merge_props_1_0")
              , [ CallT(
                    SVar("add_prop_2_0")
                  , [ Build(Anno(Str("type"), Op("Nil", [])))
                    , Build(Anno(Op("Float", []), Op("Nil", [])))
                    ]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("scope"), Op("Nil", []))
                          , Anno(Str("f"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "union_1_0"
        , [ VarDec(
              "m_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_60", "w_60", "o_167", "p_167", "n_167"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_60"), Var("v_60")])
                , Wld
                )
              )
            , Seq(
                Match(Var("n_167"))
              , Seq(
                  Match(Var("p_167"))
                , Seq(
                    Let(
                      [ SDefT(
                          "n_132"
                        , []
                        , []
                        , GuardedLChoice(
                            Seq(
                              CallT(SVar("Nil_0_0"), [], [])
                            , Build(Var("v_60"))
                            )
                          , Id
                          , GuardedLChoice(
                              Seq(
                                CallT(
                                  SVar("HdMember_p__2_0")
                                , [CallT(SVar("m_132"), [], []), Build(Var("v_60"))]
                                , []
                                )
                              , CallT(SVar("n_132"), [], [])
                              )
                            , Id
                            , CallT(
                                SVar("Cons_2_0")
                              , [Id, CallT(SVar("n_132"), [], [])]
                              , []
                              )
                            )
                          )
                        )
                      ]
                    , Seq(
                        Build(Var("w_60"))
                      , CallT(SVar("n_132"), [], [])
                      )
                    )
                  , Match(Var("o_167"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "union_0_0"
        , []
        , []
        , CallT(
            SVar("union_1_0")
          , [CallT(SVar("eq_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "is_same_prop_0_0"
        , []
        , []
        , Scope(
            ["a_72"]
          , Match(
              Anno(
                Op(
                  ""
                , [ Anno(Op("", [Var("a_72"), Wld]), Wld)
                  , Anno(Op("", [Var("a_72"), Wld]), Wld)
                  ]
                )
              , Wld
              )
            )
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "r_129"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "s_129"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("r_129"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("s_129"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("s_129"), [], [])
          )
        )
      , SDefT(
          "HdMember_p__2_0"
        , [ VarDec(
              "p_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_60", "a_61", "t_167"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("a_61"), Var("z_60")])
                , Wld
                )
              )
            , Seq(
                Match(Var("t_167"))
              , Seq(
                  CallT(SVar("q_132"), [], [])
                , Seq(
                    CallT(
                      SVar("fetch_1_0")
                    , [ Scope(
                          ["b_61", "v_167", "w_167", "u_167"]
                        , Seq(
                            Match(Var("b_61"))
                          , Seq(
                              Match(Var("u_167"))
                            , Seq(
                                Match(Var("w_167"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op("", [Var("a_61"), Var("b_61")])
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("p_132"), [], [])
                                  , Match(Var("v_167"))
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , []
                    )
                  , Build(Var("z_60"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "diff_1_0"
        , [ VarDec(
              "i_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["t_60", "u_60", "h_167", "i_167", "g_167"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("u_60"), Var("t_60")])
                , Wld
                )
              )
            , Seq(
                Match(Var("g_167"))
              , Seq(
                  Match(Var("i_167"))
                , Seq(
                    Let(
                      [ SDefT(
                          "j_132"
                        , []
                        , []
                        , GuardedLChoice(
                            CallT(SVar("Nil_0_0"), [], [])
                          , Id
                          , GuardedLChoice(
                              Seq(
                                CallT(
                                  SVar("HdMember_p__2_0")
                                , [CallT(SVar("i_132"), [], []), Build(Var("t_60"))]
                                , []
                                )
                              , CallT(SVar("j_132"), [], [])
                              )
                            , Id
                            , CallT(
                                SVar("Cons_2_0")
                              , [Id, CallT(SVar("j_132"), [], [])]
                              , []
                              )
                            )
                          )
                        )
                      ]
                    , Seq(
                        Build(Var("u_60"))
                      , CallT(SVar("j_132"), [], [])
                      )
                    )
                  , Match(Var("h_167"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "props_union_0_0"
        , []
        , []
        , Scope(
            ["e_72", "f_72", "e_182", "f_182"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_72"), Var("e_72")])
                , Wld
                )
              )
            , Seq(
                Match(Var("f_182"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("e_72"), Var("f_72")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(
                      SVar("diff_1_0")
                    , [CallT(SVar("is_same_prop_0_0"), [], [])]
                    , []
                    )
                  , Seq(
                      Match(Var("e_182"))
                    , Seq(
                        Build(
                          Anno(
                            Op("", [Var("f_72"), Var("e_182")])
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("union_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test15_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("15: union on properties"), Op("Nil", [])))
            , CallT(SVar("props_union_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("type"), Op("Nil", []))
                                , Anno(Op("Float", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(
                                    Op(
                                      ""
                                    , [ Anno(Str("scope"), Op("Nil", []))
                                      , Anno(Str("f"), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("scope"), Op("Nil", []))
                          , Anno(Str("f"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("type"), Op("Nil", []))
                                , Anno(Op("Float", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "preserve_annos_1_0"
        , [ VarDec(
              "d_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["s_70", "t_70", "u_70", "z_180"]
          , Seq(
              Match(Anno(Var("t_70"), Var("s_70")))
            , Seq(
                Match(Var("z_180"))
              , Seq(
                  Build(Var("t_70"))
                , Seq(
                    CallT(SVar("d_138"), [], [])
                  , Seq(
                      Match(Var("u_70"))
                    , Build(Anno(Var("u_70"), Var("s_70")))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "preserve_annotation_1_0"
        , [ VarDec(
              "c_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("preserve_annos_1_0")
          , [CallT(SVar("c_138"), [], [])]
          , []
          )
        )
      , SDefT(
          "preserve_props_1_0"
        , [ VarDec(
              "h_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("preserve_annotation_1_0")
          , [CallT(SVar("h_139"), [], [])]
          , []
          )
        )
      , SDefT(
          "test14_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("14: preserve the properties on the application of a strategy"), Op("Nil", [])))
            , CallT(
                SVar("preserve_props_1_0")
              , [ CallT(
                    SVar("replace_prop_2_0")
                  , [ Build(Anno(Str("type"), Op("Nil", [])))
                    , Build(Anno(Op("Float", []), Op("Nil", [])))
                    ]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test13_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("13: has-prop with condition on term satisfying this condition"), Op("Nil", [])))
            , CallT(
                SVar("test_success_1_0")
              , [ CallT(
                    SVar("has_prop_2_0")
                  , [ Build(Anno(Str("type"), Op("Nil", [])))
                    , Match(Anno(Op("Int", []), Wld))
                    ]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(Anno(Op("Success", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "has_prop_2_0"
        , [ VarDec(
              "k_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_72"]
          , Seq(
              Match(Var("h_72"))
            , Seq(
                CallT(
                  SVar("get_prop_1_0")
                , [CallT(SVar("k_139"), [], [])]
                , []
                )
              , Seq(
                  CallT(SVar("l_139"), [], [])
                , Build(Var("h_72"))
                )
              )
            )
          )
        )
      , SDefT(
          "test12_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("12: has-prop with condition on term not satisfying this condition"), Op("Nil", [])))
            , CallT(
                SVar("test_success_1_0")
              , [ CallT(
                    SVar("has_prop_2_0")
                  , [ Build(Anno(Str("type"), Op("Nil", [])))
                    , Match(Anno(Op("Float", []), Wld))
                    ]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(Anno(Op("Failure", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test11_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("11: has-prop on a term with the specified property should succeed"), Op("Nil", [])))
            , CallT(
                SVar("test_success_1_0")
              , [ CallT(
                    SVar("has_prop_1_0")
                  , [Build(Anno(Str("type"), Op("Nil", [])))]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(Anno(Op("Success", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "has_prop_1_0"
        , [ VarDec(
              "j_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["g_72"]
          , Seq(
              Match(Var("g_72"))
            , Seq(
                CallT(
                  SVar("get_prop_1_0")
                , [CallT(SVar("j_139"), [], [])]
                , []
                )
              , Build(Var("g_72"))
              )
            )
          )
        )
      , SDefT(
          "test10_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("10: has-prop on a term without properties should fail"), Op("Nil", [])))
            , CallT(
                SVar("test_success_1_0")
              , [ CallT(
                    SVar("has_prop_1_0")
                  , [Build(Anno(Str("type"), Op("Nil", [])))]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Failure", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test9_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("9:  add a property to a term with existing properties"), Op("Nil", [])))
            , CallT(
                SVar("add_prop_2_0")
              , [ Build(Anno(Str("type"), Op("Nil", [])))
                , Build(Anno(Op("Int", []), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("scope"), Op("Nil", []))
                          , Anno(Str("f"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "add_prop_empty_2_0"
        , [ VarDec(
              "f_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_72", "a_182", "b_182", "d_182", "c_182"]
          , Seq(
              Match(Var("d_72"))
            , Seq(
                Seq(
                  Match(Var("c_182"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("f_139"), [], [])
                    , Seq(Match(Var("a_182")), Build(Var("c_182")))
                    )
                  )
                )
              , Seq(
                  Match(Var("d_182"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("g_139"), [], [])
                    , Seq(
                        Match(Var("b_182"))
                      , Build(
                          Anno(
                            Var("d_72")
                          , Op(
                              "Cons"
                            , [ Anno(
                                  Op("", [Var("a_182"), Var("b_182")])
                                , Op("Nil", [])
                                )
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "add_prop_existing_2_0"
        , [ VarDec(
              "d_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "e_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("Anno__Cong_____2_0")
          , [ Id
            , Scope(
                ["u_181", "v_181", "w_181", "z_181", "y_181"]
              , Seq(
                  Scope(
                    ["x_181"]
                  , Seq(
                      Match(Var("x_181"))
                    , Seq(
                        Build(Anno(Op("", []), Op("Nil", [])))
                      , Seq(
                          CallT(SVar("d_139"), [], [])
                        , Seq(Match(Var("u_181")), Build(Var("x_181")))
                        )
                      )
                    )
                  )
                , Seq(
                    Seq(
                      Match(Var("y_181"))
                    , Seq(
                        Build(Anno(Op("", []), Op("Nil", [])))
                      , Seq(
                          CallT(SVar("e_139"), [], [])
                        , Seq(Match(Var("v_181")), Build(Var("y_181")))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("z_181"))
                    , Seq(
                        Match(Var("w_181"))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(
                                  Op("", [Var("u_181"), Var("v_181")])
                                , Op("Nil", [])
                                )
                              , Var("w_181")
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "add_prop_2_0"
        , [ VarDec(
              "r_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "s_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("if_annotation_2_0")
          , [ CallT(
                SVar("add_prop_existing_2_0")
              , [ CallT(SVar("r_139"), [], [])
                , CallT(SVar("s_139"), [], [])
                ]
              , []
              )
            , CallT(
                SVar("add_prop_empty_2_0")
              , [ CallT(SVar("r_139"), [], [])
                , CallT(SVar("s_139"), [], [])
                ]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "test8_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("8:  add a property to a term without properties"), Op("Nil", [])))
            , CallT(
                SVar("add_prop_2_0")
              , [ Build(Anno(Str("type"), Op("Nil", [])))
                , Build(Anno(Op("Int", []), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test7_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("7:  replace a non-existing property in a list shouldn't change anything"), Op("Nil", [])))
            , CallT(
                SVar("replace_prop_2_0")
              , [ Build(Anno(Str("static-link"), Op("Nil", [])))
                , Build(Anno(Str("g"), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["t_41"]
          , Match(
              Anno(
                Op("", [Var("t_41"), Var("t_41")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["e_62", "f_62", "h_170"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("f_62"), Var("e_62")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("h_170")), Build(Var("f_62")))
            )
          )
        )
      , SDefT(
          "is_prop_1_0"
        , [ VarDec(
              "x_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["b_72", "q_181", "r_181", "t_181", "s_181"]
          , Seq(
              Match(Var("b_72"))
            , Seq(
                Seq(
                  Match(Var("s_181"))
                , Seq(
                    CallT(SVar("Fst_0_0"), [], [])
                  , Seq(Match(Var("q_181")), Build(Var("s_181")))
                  )
                )
              , Seq(
                  Match(Var("t_181"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("x_138"), [], [])
                    , Seq(
                        Match(Var("r_181"))
                      , Seq(
                          Build(
                            Anno(
                              Op("", [Var("q_181"), Var("r_181")])
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("eq_0_0"), [], [])
                          , Build(Var("b_72"))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_2_prop_2_0"
        , [ VarDec(
              "a_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              ["c_72"]
            , Seq(
                Match(Var("c_72"))
              , Seq(
                  CallT(SVar("a_139"), [], [])
                , Build(Var("c_72"))
                )
              )
            )
          , CallT(
              SVar("_2_0")
            , [Id, CallT(SVar("b_139"), [], [])]
            , []
            )
          , Id
          )
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "f_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_0", "b_0", "c_0", "e_0", "f_0"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("b_0"), Var("c_0")])
                , Var("d_0")
                )
              )
            , Seq(
                Build(Var("b_0"))
              , Seq(
                  CallT(SVar("f_105"), [], [])
                , Seq(
                    Match(Var("e_0"))
                  , Seq(
                      Build(Var("c_0"))
                    , Seq(
                        CallT(SVar("g_105"), [], [])
                      , Seq(
                          Match(Var("f_0"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("e_0"), Var("f_0")])
                            , Var("d_0")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "j_129"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "k_129"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("j_129"), [], [])
                    , CallT(SVar("k_129"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("k_129"), [], [])
          )
        )
      , SDefT(
          "Anno__Cong_____2_0"
        , [ VarDec(
              "b_113"
            , FunType([ConstType(SortNoArgs("ATerm"))], ConstType(SortNoArgs("ATerm")))
            )
          , VarDec(
              "c_113"
            , FunType([ConstType(SortNoArgs("ATerm"))], ConstType(SortNoArgs("ATerm")))
            )
          ]
        , []
        , Scope(
            ["e_21", "f_21", "g_21", "h_21"]
          , Seq(
              Match(Anno(Var("e_21"), Var("f_21")))
            , Seq(
                Build(Var("e_21"))
              , Seq(
                  CallT(SVar("b_113"), [], [])
                , Seq(
                    Match(Var("g_21"))
                  , Seq(
                      Build(Var("f_21"))
                    , Seq(
                        CallT(SVar("c_113"), [], [])
                      , Seq(
                          Match(Var("h_21"))
                        , Build(Anno(Var("g_21"), Var("h_21")))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_prop_existing_2_0"
        , [ VarDec(
              "y_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("Anno__Cong_____2_0")
          , [ Id
            , CallT(
                SVar("map_1_0")
              , [ CallT(
                    SVar("apply_2_prop_2_0")
                  , [ CallT(
                        SVar("is_prop_1_0")
                      , [CallT(SVar("y_138"), [], [])]
                      , []
                      )
                    , CallT(SVar("z_138"), [], [])
                    ]
                  , []
                  )
                ]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "has_annos_0_0"
        , []
        , []
        , Scope(
            ["q_70", "r_70"]
          , Match(
              Anno(
                Wld
              , Op(
                  "Cons"
                , [Var("q_70"), Anno(Var("r_70"), Wld)]
                )
              )
            )
          )
        )
      , SDefT(
          "has_annotation_0_0"
        , []
        , []
        , CallT(SVar("has_annos_0_0"), [], [])
        )
      , SDefT(
          "if_annotation_2_0"
        , [ VarDec(
              "z_137"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_138"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("has_annotation_0_0"), [], [])
          , CallT(SVar("z_137"), [], [])
          , CallT(SVar("a_138"), [], [])
          )
        )
      , SDefT(
          "apply_prop_2_0"
        , [ VarDec(
              "n_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("if_annotation_2_0")
          , [ CallT(
                SVar("apply_prop_existing_2_0")
              , [ CallT(SVar("n_139"), [], [])
                , CallT(SVar("o_139"), [], [])
                ]
              , []
              )
            , Id
            ]
          , []
          )
        )
      , SDefT(
          "replace_prop_2_0"
        , [ VarDec(
              "p_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_prop_2_0")
          , [ CallT(SVar("p_139"), [], [])
            , CallT(SVar("q_139"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "test6_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("6:  replace a property in a list"), Op("Nil", [])))
            , CallT(
                SVar("replace_prop_2_0")
              , [ Build(Anno(Str("type"), Op("Nil", [])))
                , Build(Anno(Op("Float", []), Op("Nil", [])))
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Float", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test5_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("5:  get a property from a list"), Op("Nil", [])))
            , CallT(
                SVar("get_prop_1_0")
              , [Build(Anno(Str("type"), Op("Nil", [])))]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(Anno(Op("Int", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test4_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("4:  get a property from a list"), Op("Nil", [])))
            , CallT(
                SVar("get_prop_1_0")
              , [Build(Anno(Str("scope"), Op("Nil", [])))]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("scope"), Op("Nil", []))
                                , Anno(Str("f"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                )
              )
            , Build(Anno(Str("f"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test3_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("3:  getting a non-existing property should fail"), Op("Nil", [])))
            , CallT(
                SVar("test_success_1_0")
              , [ CallT(
                    SVar("get_prop_1_0")
                  , [Build(Anno(Str("scope"), Op("Nil", [])))]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op(
                                ""
                              , [ Anno(Str("type"), Op("Nil", []))
                                , Anno(Op("Int", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(Anno(Op("Failure", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test_success_1_0"
        , [ VarDec(
              "h_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("h_113"), [], [])
          , Build(Anno(Op("Success", []), Op("Nil", [])))
          , Build(Anno(Op("Failure", []), Op("Nil", [])))
          )
        )
      , SDefT(
          "test2_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("2:  getting a property from a term without properties should fail"), Op("Nil", [])))
            , CallT(
                SVar("test_success_1_0")
              , [ CallT(
                    SVar("get_prop_1_0")
                  , [Build(Anno(Str("type"), Op("Nil", [])))]
                  , []
                  )
                ]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Failure", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "Look2_0_0"
        , []
        , []
        , Scope(
            ["p_61", "q_61", "k_169"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Var("p_61")
                    , Anno(Op("Cons", [Wld, Var("q_61")]), Wld)
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("k_169"))
              , Build(
                  Anno(
                    Op("", [Var("p_61"), Var("q_61")])
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Look1_0_0"
        , []
        , []
        , Scope(
            ["n_61", "o_61", "j_169"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Var("n_61")
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op("", [Var("n_61"), Var("o_61")])
                            , Wld
                            )
                          , Wld
                          ]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(Match(Var("j_169")), Build(Var("o_61")))
            )
          )
        )
      , SDefT(
          "lookup_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "g_134"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Look1_0_0"), [], [])
                , Id
                , Seq(
                    CallT(SVar("Look2_0_0"), [], [])
                  , CallT(SVar("g_134"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("g_134"), [], [])
          )
        )
      , SDefT(
          "get_annotations_0_0"
        , []
        , []
        , Scope(
            ["j_70", "k_70", "r_180"]
          , Seq(
              Match(Anno(Var("j_70"), Var("k_70")))
            , Seq(Match(Var("r_180")), Build(Var("k_70")))
            )
          )
        )
      , SDefT(
          "get_prop_1_0"
        , [ VarDec(
              "m_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["g_182", "h_182", "j_182", "i_182"]
          , Seq(
              CallT(SVar("get_annotations_0_0"), [], [])
            , Seq(
                Seq(
                  Match(Var("i_182"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("m_139"), [], [])
                    , Seq(Match(Var("g_182")), Build(Var("i_182")))
                    )
                  )
                )
              , Seq(
                  Match(Var("j_182"))
                , Seq(
                    Match(Var("h_182"))
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("g_182"), Var("h_182")])
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("lookup_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "print_failure_0_1"
        , []
        , [VarDec("h_98", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("debug_1_0")
          , [Seq(
               Build(Var("h_98"))
             , CallT(SVar("sunit_failure_string_0_0"), [], [])
             )]
          , []
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "r_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("r_148"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["s_69"]
          , Seq(
              Match(Var("s_69"))
            , PrimT("SSL_concat_strings", [], [Var("s_69")])
            )
          )
        )
      , SDefT(
          "sunit_color_plain_0_0"
        , []
        , []
        , Scope(
            ["m_211", "n_211"]
          , Seq(
              Match(Var("n_211"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("m_211"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("m_211"), Anno(Str("[m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["q_69", "r_69"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_69"), Var("r_69")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("q_69"), Var("r_69")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["p_69"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("p_69"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("p_69"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["v_69"]
          , Seq(
              Match(Var("v_69"))
            , PrimT("SSL_implode_string", [], [Var("v_69")])
            )
          )
        )
      , SDefT(
          "sunit_color_red_0_0"
        , []
        , []
        , Scope(
            ["k_211", "l_211"]
          , Seq(
              Match(Var("l_211"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("k_211"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("k_211"), Anno(Str("[01;31m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "getenv_0_0"
        , []
        , []
        , Scope(
            ["p_50"]
          , Seq(
              Match(Var("p_50"))
            , PrimT("SSL_getenv", [], [Var("p_50")])
            )
          )
        )
      , SDefT(
          "sunit_failure_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["g_98"]
            , Seq(
                Match(Var("g_98"))
              , Seq(
                  Build(Anno(Str("ENABLE_COLORS"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("getenv_0_0"), [], [])
                  , Seq(
                      Match(Anno(Str("true"), Wld))
                    , Build(Var("g_98"))
                    )
                  )
                )
              )
            )
          , Scope(
              ["e_211", "f_211", "g_211", "j_211", "i_211"]
            , Seq(
                Scope(
                  ["h_211"]
                , Seq(
                    Match(Var("h_211"))
                  , Seq(
                      CallT(SVar("sunit_color_red_0_0"), [], [])
                    , Seq(Match(Var("e_211")), Build(Var("h_211")))
                    )
                  )
                )
              , Seq(
                  Seq(
                    Seq(
                      Match(Var("i_211"))
                    , Seq(Match(Var("f_211")), Build(Var("i_211")))
                    )
                  , Seq(
                      Match(Var("j_211"))
                    , Seq(
                        CallT(SVar("sunit_color_plain_0_0"), [], [])
                      , Seq(
                          Match(Var("g_211"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Var("e_211")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("f_211")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("g_211"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "print_failure_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("sunit_failure_string_0_0"), [], [])
          , CallT(SVar("debug_0_0"), [], [])
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "q_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_46"]
          , Seq(
              Match(Var("a_46"))
            , Seq(
                CallT(SVar("q_124"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("a_46"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "q_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("q_148"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["b_75", "c_75"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("b_75"), Var("c_75")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("b_75"), Var("c_75")])
              , Id
              , PrimT("SSL_addr", [], [Var("b_75"), Var("c_75")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["m_186", "n_186"]
          , Seq(
              Match(Var("n_186"))
            , Seq(
                Match(Var("m_186"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("m_186"), Anno(Int("1"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("add_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["e_46", "u_20", "v_20"]
          , Seq(
              Match(Var("e_46"))
            , Seq(
                Match(Var("v_20"))
              , Seq(
                  Match(Var("u_20"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Op("stderr", []), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [Var("u_20"), Anno(Op("Nil", []), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("printnl_0_0"), [], [])
                    , Build(Var("e_46"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "s_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "t_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["i_98"]
          , Seq(
              Match(Var("i_98"))
            , Seq(
                CallT(SVar("s_148"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("i_98"))
                  , GuardedLChoice(
                      Scope(
                        ["j_98"]
                      , Seq(
                          Match(Var("j_98"))
                        , Seq(
                            CallT(SVar("t_148"), [], [])
                          , Seq(
                              Build(Var("j_98"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "f_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "i_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["c_99", "d_99"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("f_149"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("h_149"), [], [])]
                      , []
                      )
                    , CallT(SVar("g_149"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("c_99"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("i_149"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("d_99"))
                      , GuardedLChoice(
                          Seq(Build(Var("d_99")), Match(Var("c_99")))
                        , Id
                        , Scope(
                            ["q_211", "r_211", "o_211", "p_211"]
                          , Seq(
                              Build(Var("c_99"))
                            , Seq(
                                Match(Var("p_211"))
                              , Seq(
                                  Build(Anno(Str("  result not equal : "), Op("Nil", [])))
                                , Seq(
                                    Match(Var("o_211"))
                                  , Seq(
                                      Build(Var("p_211"))
                                    , Seq(
                                        CallT(SVar("print_failure_0_1"), [], [Var("o_211")])
                                      , Seq(
                                          Build(Var("d_99"))
                                        , Seq(
                                            Match(Var("r_211"))
                                          , Seq(
                                              Build(Anno(Str("  expected         : "), Op("Nil", [])))
                                            , Seq(
                                                Match(Var("q_211"))
                                              , Seq(
                                                  Build(Var("r_211"))
                                                , Seq(
                                                    CallT(SVar("print_failure_0_1"), [], [Var("q_211")])
                                                  , Fail
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "test1_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("1:  get a property from a single-item list"), Op("Nil", [])))
            , CallT(
                SVar("get_prop_1_0")
              , [Build(Anno(Str("type"), Op("Nil", [])))]
              , []
              )
            , Build(
                Anno(
                  Op(
                    "Var"
                  , [Anno(Str("a"), Op("Nil", []))]
                  )
                , Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Str("type"), Op("Nil", []))
                          , Anno(Op("Int", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                )
              )
            , Build(Anno(Op("Int", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "k_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["i_0", "g_0", "h_0", "j_0", "k_0"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("g_0"), Var("h_0")])
                , Var("i_0")
                )
              )
            , Seq(
                Build(Var("g_0"))
              , Seq(
                  CallT(SVar("k_105"), [], [])
                , Seq(
                    Match(Var("j_0"))
                  , Seq(
                      Build(Var("h_0"))
                    , Seq(
                        CallT(SVar("l_105"), [], [])
                      , Seq(
                          Match(Var("k_0"))
                        , Build(
                            Anno(
                              Op("", [Var("j_0"), Var("k_0")])
                            , Var("i_0")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["m_46", "n_46", "o_46"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("m_46"), Var("n_46")])
                , Wld
                )
              )
            , Seq(
                Match(Var("o_46"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("m_46"), Var("n_46")])
                , Build(Var("o_46"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "z_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["f_46", "w_20", "x_20", "z_20", "y_20"]
          , Seq(
              Match(Var("f_46"))
            , Seq(
                Seq(
                  Match(Var("y_20"))
                , Seq(
                    CallT(SVar("z_124"), [], [])
                  , Seq(Match(Var("w_20")), Build(Var("y_20")))
                  )
                )
              , Seq(
                  Match(Var("z_20"))
                , Seq(
                    Match(Var("x_20"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Var("w_20")
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("x_20"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("f_46"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "d_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "e_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("d_149"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("e_149"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("annotation-properties-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("test1_0_0"), [], [])
              , Seq(
                  CallT(SVar("test2_0_0"), [], [])
                , Seq(
                    CallT(SVar("test3_0_0"), [], [])
                  , Seq(
                      CallT(SVar("test4_0_0"), [], [])
                    , Seq(
                        CallT(SVar("test5_0_0"), [], [])
                      , Seq(
                          CallT(SVar("test6_0_0"), [], [])
                        , Seq(
                            CallT(SVar("test7_0_0"), [], [])
                          , Seq(
                              CallT(SVar("test8_0_0"), [], [])
                            , Seq(
                                CallT(SVar("test9_0_0"), [], [])
                              , Seq(
                                  CallT(SVar("test10_0_0"), [], [])
                                , Seq(
                                    CallT(SVar("test11_0_0"), [], [])
                                  , Seq(
                                      CallT(SVar("test12_0_0"), [], [])
                                    , Seq(
                                        CallT(SVar("test13_0_0"), [], [])
                                      , Seq(
                                          CallT(SVar("test14_0_0"), [], [])
                                        , Seq(
                                            CallT(SVar("test15_0_0"), [], [])
                                          , Seq(
                                              CallT(SVar("test16_0_0"), [], [])
                                            , Seq(
                                                CallT(SVar("test17_0_0"), [], [])
                                              , Seq(
                                                  CallT(SVar("test18_0_0"), [], [])
                                                , Seq(
                                                    CallT(SVar("test19_0_0"), [], [])
                                                  , Seq(
                                                      CallT(SVar("test20_0_0"), [], [])
                                                    , Seq(
                                                        CallT(SVar("test21_0_0"), [], [])
                                                      , CallT(SVar("test22_0_0"), [], [])
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
