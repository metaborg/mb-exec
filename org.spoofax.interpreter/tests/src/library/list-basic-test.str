module list-basic-test
imports sunit list-basic

strategies

  main =
    test-suite(!"list-basic-test",
      map-test;
      split-fetch-test;
      split-fetch-keep-test;
      upto-test1;
      upto-test2;
      fetch-test;
      fetch-elem-test;
      reverse-test;
      conc-test;
      concat-test;
      split-init-last-test;
	for-each-pair-test
    )

  map-test =
    apply-test(!"map-test1"
	,map(!3)
	,![1,2,3,4,5,6,7]
	,![3,3,3,3,3,3,3]
	);
    apply-test(!"map-test2"
	,map(!3)
	,![]
	,![]
	)

  split-fetch-test =
    apply-test(!"split-fetch-test"
	,split-fetch(?4)
	,![1,2,3,4,5,6,7]
	,!([1,2,3],[5,6,7])
	)

  split-fetch-keep-test =
    apply-test(!"split-fetch-keep-test-1"
      , split-fetch-keep(?0)
      , ![3, 5, 0, 1, 2, 3, 4, 5]
      , !([3, 5], 0, [1, 2, 3, 4, 5]))
  ; apply-test(!"split-fetch-keep-test-2"
      , split-fetch-keep(?0)
      , ![0, 3, 5, 0, 1, 2, 3, 4, 5]
      , !([], 0, [3, 5, 0, 1, 2, 3, 4, 5]))
  ; apply-test(!"split-fetch-keep-test-3"
      , split-fetch-keep(?0)
      , ![3, 5, 0]
      , !([3, 5], 0, []))
  ; apply-and-fail(!"split-fetch-keep-test-4"
      , split-fetch-keep(?0)
      , ![1, 2, 3, 4, 5])
  

  upto-test1 =
    apply-test(!"upto-test1"
	      ,upto
	      ,!5
	      ,![0,1,2,3,4,5]
              )

  upto-test2 =
    apply-test(!"upto-test2"
	      ,upto
	      ,<subt> (0, 3)
	      ,![]
              )

  fetch-test = 
    apply-test(!"fetch-test"
	,fetch(\3 -> 6\)
	,![1,2,3,4,5]
	,![1,2,6,4,5]
	)

  fetch-elem-test = 
    apply-test	(!"fetch-elem-test"
		,fetch-elem(\3 -> 6\)
		,![1,2,3,4,5]
		,!6
		)

  length-test = 
    apply-test	(!"length-test"
		,length
		,![1,2,3,4,5]
		,!5
		)

  reverse-test = 
    apply-test	(!"reverse-test"
		,reverse
		,![1,2,3,4,5]
		,![5,4,3,2,1]
		)

  conc-test = 
    apply-test	(!"conc-test"
		,conc
		,!([1,2,3,4,5], [1,2,3,4,5])
		,![1,2,3,4,5,1,2,3,4,5]
		)

  concat-test = 
    apply-test	(!"concat-test"
		,concat
		,![[1,2,3,4,5], [1,2,3,4,5]]
		,![1,2,3,4,5,1,2,3,4,5]
		)

  split-init-last-test =
    apply-test(!"split-init-last-test"
	, split-init-last
	, ![1, 2, 3, 4, 5]
	, !([1, 2, 3, 4], 5)
	)

  for-each-pair-test =
    apply-test(!"for-each-pair-test1"
	, for-each-pair(id)
	, !([1, 2, 3], [4, 5, 6])
	, ![[(1,4),(1,5),(1,6)],[(2,4),(2,5),(2,6)],[(3,4),(3,5),(3,6)]]
	);
    apply-test(!"for-each-pair-test2"
	, for-each-pair(id)
	, !([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],
	    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])
	)

