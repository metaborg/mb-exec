Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "is_not_num_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("is-not-num-test"), Op("Nil", [])))
            , GuardedLChoice(CallT(SVar("is_num_0_0"), [], []), Fail, Id)
            , Build(Anno(Int("130"), Op("Nil", [])))
            , Build(Anno(Int("130"), Op("Nil", [])))
            ]
          , []
          )
        )
      , ExtSDef("is_alphanum_0_0", [], [])
      , SDefT(
          "is_alphanum_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("is-alphanum-test"), Op("Nil", [])))
            , CallT(SVar("is_alphanum_0_0"), [], [])
            , Build(Anno(Int("50"), Op("Nil", [])))
            , Build(Anno(Int("50"), Op("Nil", [])))
            ]
          , []
          )
        )
      , ExtSDef("is_num_0_0", [], [])
      , ExtSDef(
          "apply_test_4_0"
        , [ VarDec(
              "b_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "c_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "e_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        )
      , SDefT(
          "is_num_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("is-num-test"), Op("Nil", [])))
            , CallT(SVar("is_num_0_0"), [], [])
            , Build(Anno(Int("50"), Op("Nil", [])))
            , Build(Anno(Int("50"), Op("Nil", [])))
            ]
          , []
          )
        )
      , ExtSDef(
          "test_suite_2_0"
        , [ VarDec(
              "z_119"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("char-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("is_num_test_0_0"), [], [])
              , Seq(
                  CallT(SVar("is_alphanum_test_0_0"), [], [])
                , CallT(SVar("is_not_num_test_0_0"), [], [])
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
