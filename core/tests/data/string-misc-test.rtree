Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "test_shuffle_word_mids_2_0_0"
        , []
        , []
        , CallT(
            SVar("testing_2_0")
          , [ Build(Anno(Str("test-shuffle-word-mids-2"), Op("Nil", [])))
            , Seq(
                Build(Anno(Str("Stratego/XT is a framework for the development of transformation systems aiming to support a wide range of program transformations. The framework consists of the transformation language Stratego and the XT collection of transformation tools."), Op("Nil", [])))
              , CallT(SVar("shuffle_word_mids_0_0"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT(
          "reverse_acc_2_0"
        , [ VarDec(
              "p_1"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_7"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              [ "i_25"
              , "j_25"
              , "x_123"
              , "m_0"
              , "k_25"
              , "l_0"
              , "y_123"
              , "z_123"
              , "k_0"
              , "j_0"
              ]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("i_25"), Var("j_25")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("m_0"))
                , Seq(
                    Seq(
                      Seq(
                        Build(Var("j_25"))
                      , Seq(
                          Seq(
                            Match(Var("l_0"))
                          , Seq(
                              Seq(
                                Seq(
                                  Seq(
                                    Match(Var("j_0"))
                                  , Seq(
                                      Build(Var("i_25"))
                                    , Seq(
                                        CallT(SVar("p_1"), [], [])
                                      , Seq(Match(Var("y_123")), Build(Var("j_0")))
                                      )
                                    )
                                  )
                                , Seq(
                                    Match(Var("k_0"))
                                  , Seq(
                                      CallT(SVar("h_7"), [], [])
                                    , Seq(
                                        Match(Var("z_123"))
                                      , Seq(
                                          Build(Var("k_0"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op("Cons", [Var("y_123"), Var("z_123")])
                                              , Op("Nil", [])
                                              )
                                            )
                                          , Match(Var("k_25"))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              , Build(Var("l_0"))
                              )
                            , CallT(
                                SVar("reverse_acc_2_0")
                              , [CallT(SVar("p_1"), [], []), Build(Var("k_25"))]
                              , []
                              )
                            )
                          )
                        , Match(Var("x_123"))
                        )
                      )
                    , Build(Var("m_0"))
                    )
                  , Build(Var("x_123"))
                  )
                )
              )
            )
          , Id
          , Scope(
              ["w_123", "n_0"]
            , Seq(
                Match(Anno(Op("Nil", []), Wld))
              , Seq(
                  Match(Var("n_0"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("h_7"), [], [])
                    , Seq(
                        Match(Var("w_123"))
                      , Seq(Build(Var("n_0")), Build(Var("w_123")))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "reverse_0_0"
        , []
        , []
        , CallT(
            SVar("reverse_acc_2_0")
          , [Id, Build(Anno(Op("Nil", []), Op("Nil", [])))]
          , []
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["b_22"]
          , Match(
              Anno(
                Op("", [Var("b_22"), Var("b_22")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "foldr_3_0"
        , [ VarDec(
              "o_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("Nil_0_0"), [], [])
            , CallT(SVar("o_94"), [], [])
            )
          , Id
          , Scope(
              ["q_22", "r_22", "l_122", "q_0", "m_122", "n_122", "p_0", "o_0"]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("q_22"), Var("r_22")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("q_0"))
                , Seq(
                    Seq(
                      Seq(
                        Seq(
                          Match(Var("o_0"))
                        , Seq(
                            Build(Var("q_22"))
                          , Seq(
                              CallT(SVar("q_94"), [], [])
                            , Seq(Match(Var("m_122")), Build(Var("o_0")))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("p_0"))
                        , Seq(
                            Build(Var("r_22"))
                          , Seq(
                              CallT(
                                SVar("foldr_3_0")
                              , [ CallT(SVar("o_94"), [], [])
                                , CallT(SVar("p_94"), [], [])
                                , CallT(SVar("q_94"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                Match(Var("n_122"))
                              , Seq(
                                  Build(Var("p_0"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op("", [Var("m_122"), Var("n_122")])
                                      , Op("Nil", [])
                                      )
                                    )
                                  , Seq(
                                      CallT(SVar("p_94"), [], [])
                                    , Match(Var("l_122"))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("q_0"))
                    )
                  , Build(Var("l_122"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "length_0_0"
        , []
        , []
        , CallT(
            SVar("foldr_3_0")
          , [ Build(Anno(Int("0"), Op("Nil", [])))
            , CallT(SVar("add_0_0"), [], [])
            , Build(Anno(Int("1"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "shuffle_forced_0_0"
        , []
        , []
        , Scope(
            ["a_51", "b_51", "c_51"]
          , GuardedLChoice(
              Let(
                [ SDefT(
                    "v_105"
                  , []
                  , []
                  , Scope(
                      ["d_51"]
                    , Seq(
                        Match(Var("d_51"))
                      , Seq(
                          CallT(SVar("shuffle_0_0"), [], [])
                        , GuardedLChoice(
                            Scope(
                              ["y_0", "g_134", "v_0"]
                            , Seq(
                                Match(Var("y_0"))
                              , Seq(
                                  Seq(
                                    Match(Var("v_0"))
                                  , Seq(
                                      Match(Var("g_134"))
                                    , Seq(
                                        Build(Var("v_0"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op("", [Var("d_51"), Var("g_134")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , CallT(SVar("eq_0_0"), [], [])
                                        )
                                      )
                                    )
                                  )
                                , Build(Var("y_0"))
                                )
                              )
                            )
                          , CallT(SVar("v_105"), [], [])
                          , Id
                          )
                        )
                      )
                    )
                  )
                ]
              , Scope(
                  ["u_0"]
                , Seq(
                    Scope(
                      ["s_0", "f_134", "r_0"]
                    , Seq(
                        Match(Var("s_0"))
                      , Seq(
                          Seq(
                            CallT(SVar("length_0_0"), [], [])
                          , Seq(
                              Match(Var("r_0"))
                            , Seq(
                                Match(Var("f_134"))
                              , Seq(
                                  Build(Var("r_0"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op(
                                          ""
                                        , [Var("f_134"), Anno(Int("1"), Op("Nil", []))]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  , CallT(SVar("gt_0_0"), [], [])
                                  )
                                )
                              )
                            )
                          )
                        , Build(Var("s_0"))
                        )
                      )
                    )
                  , Seq(
                      Seq(
                        Match(Var("u_0"))
                      , Seq(
                          CallT(
                            SVar("at_suffix_1_0")
                          , [ Scope(
                                ["t_0"]
                              , Seq(
                                  Match(
                                    Anno(
                                      Op(
                                        "Cons"
                                      , [ Var("b_51")
                                        , Anno(
                                            Op("Cons", [Var("c_51"), Var("a_51")])
                                          , Wld
                                          )
                                        ]
                                      )
                                    , Wld
                                    )
                                  )
                                , Seq(
                                    Match(Var("t_0"))
                                  , Seq(
                                      GuardedLChoice(
                                        Seq(
                                          Build(
                                            Anno(
                                              Op("", [Var("b_51"), Var("c_51")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , CallT(SVar("eq_0_0"), [], [])
                                        )
                                      , Fail
                                      , Id
                                      )
                                    , Build(Var("t_0"))
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Build(Var("u_0"))
                        )
                      )
                    , CallT(SVar("v_105"), [], [])
                    )
                  )
                )
              )
            , Id
            , Id
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "strlen_0_0"
        , []
        , []
        , Scope(
            ["z_55"]
          , Seq(
              Match(Var("z_55"))
            , PrimT("SSL_strlen", [], [Var("z_55")])
            )
          )
        )
      , SDefT(
          "shuffle_word_mid_0_0"
        , []
        , []
        , Scope(
            ["e_51", "f_51", "g_51", "h_51", "i_51", "a_1"]
          , Seq(
              Match(Var("a_1"))
            , Seq(
                CallT(SVar("is_string_0_0"), [], [])
              , Seq(
                  Build(Var("a_1"))
                , GuardedLChoice(
                    Scope(
                      ["c_1", "k_134", "b_1"]
                    , Seq(
                        Match(Var("c_1"))
                      , Seq(
                          CallT(SVar("strlen_0_0"), [], [])
                        , Seq(
                            Match(Var("b_1"))
                          , Seq(
                              Match(Var("k_134"))
                            , Seq(
                                Build(Var("b_1"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op(
                                        ""
                                      , [Var("k_134"), Anno(Int("3"), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("lt_0_0"), [], [])
                                  , Build(Var("c_1"))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , Id
                  , Scope(
                      ["d_1"]
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(
                            Anno(
                              Op("Cons", [Var("g_51"), Var("e_51")])
                            , Wld
                            )
                          )
                        , Seq(
                            Build(Var("e_51"))
                          , Seq(
                              CallT(SVar("reverse_0_0"), [], [])
                            , Seq(
                                Match(
                                  Anno(
                                    Op("Cons", [Var("i_51"), Var("f_51")])
                                  , Wld
                                  )
                                )
                              , Seq(
                                  Match(Var("d_1"))
                                , Seq(
                                    Build(Var("f_51"))
                                  , Seq(
                                      CallT(SVar("shuffle_forced_0_0"), [], [])
                                    , Seq(
                                        CallT(SVar("reverse_0_0"), [], [])
                                      , Seq(
                                          Match(Var("h_51"))
                                        , Seq(
                                            Build(Var("d_1"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op(
                                                    "Cons"
                                                  , [ Anno(
                                                        Op(
                                                          "Cons"
                                                        , [Var("g_51"), Anno(Op("Nil", []), Op("Nil", []))]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    , Anno(
                                                        Op(
                                                          "Cons"
                                                        , [ Var("h_51")
                                                          , Anno(
                                                              Op(
                                                                "Cons"
                                                              , [ Anno(
                                                                    Op(
                                                                      "Cons"
                                                                    , [Var("i_51"), Anno(Op("Nil", []), Op("Nil", []))]
                                                                    )
                                                                  , Op("Nil", [])
                                                                  )
                                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                                ]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          ]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    ]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                CallT(SVar("concat_0_0"), [], [])
                                              , CallT(SVar("implode_string_0_0"), [], [])
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "shuffle_word_mids_0_0"
        , []
        , []
        , Scope(
            ["j_134", "e_1"]
          , Seq(
              Match(Var("e_1"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("32"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("46"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("44"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  Match(Var("j_134"))
                , Seq(
                    Build(Var("e_1"))
                  , Seq(
                      CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("j_134")])
                    , Seq(
                        CallT(
                          SVar("map_1_0")
                        , [CallT(SVar("shuffle_word_mid_0_0"), [], [])]
                        , []
                        )
                      , CallT(SVar("concat_strings_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_shuffle_word_mids_1_0_0"
        , []
        , []
        , CallT(
            SVar("testing_2_0")
          , [ Build(Anno(Str("test-shuffle-word-mids-1"), Op("Nil", [])))
            , Seq(
                Build(Anno(Str("Goedemorgen"), Op("Nil", [])))
              , CallT(SVar("shuffle_word_mids_0_0"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["l_20", "m_20", "n_20"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("l_20")
                        , Anno(
                            Op("Cons", [Var("n_20"), Var("m_20")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("n_20"))
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["j_20", "k_20"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("k_20"), Var("j_20")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("k_20"))
            )
          )
        )
      , SDefT(
          "SortL_1_0"
        , [ VarDec(
              "g_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["e_49", "f_49", "g_49", "f_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Var("f_49")
                    , Anno(
                        Op("Cons", [Var("g_49"), Var("e_49")])
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("f_1"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("f_49"), Var("g_49")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("g_104"), [], [])
                  , Seq(
                      Build(Var("f_1"))
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Var("g_49")
                            , Anno(
                                Op("Cons", [Var("f_49"), Var("e_49")])
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "c_93"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("c_93"), [], []), Id, Id)
        )
      , SDefT(
          "sort_list_1_0"
        , [ VarDec(
              "j_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("try_1_0")
          , [ Let(
                [ SDefT(
                    "k_104"
                  , []
                  , []
                  , Seq(
                      GuardedLChoice(
                        CallT(SVar("j_104"), [], [])
                      , Id
                      , CallT(
                          SVar("Cons_2_0")
                        , [Id, CallT(SVar("k_104"), [], [])]
                        , []
                        )
                      )
                    , CallT(
                        SVar("try_1_0")
                      , [CallT(SVar("k_104"), [], [])]
                      , []
                      )
                    )
                  )
                ]
              , CallT(SVar("k_104"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT("next_random_0_0", [], [], PrimT("SSL_rand", [], []))
      , SDefT(
          "is_list_0_0"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Op("Nil", []), Wld))
          , Id
          , Match(Anno(Op("Cons", [Wld, Wld]), Wld))
          )
        )
      , SDefT(
          "shuffle_0_0"
        , []
        , []
        , Scope(
            ["g_1"]
          , Seq(
              Match(Var("g_1"))
            , Seq(
                CallT(SVar("is_list_0_0"), [], [])
              , Seq(
                  Build(Var("g_1"))
                , Seq(
                    CallT(
                      SVar("map_1_0")
                    , [ Scope(
                          ["h_134", "i_134", "i_1", "h_1"]
                        , Seq(
                            Match(Var("h_1"))
                          , Seq(
                              Build(Anno(Op("", []), Op("Nil", [])))
                            , Seq(
                                CallT(SVar("next_random_0_0"), [], [])
                              , Seq(
                                  Match(Var("h_134"))
                                , Seq(
                                    Build(Var("h_1"))
                                  , Seq(
                                      Match(Var("i_1"))
                                    , Seq(
                                        Match(Var("i_134"))
                                      , Seq(
                                          Build(Var("i_1"))
                                        , Build(
                                            Anno(
                                              Op("", [Var("h_134"), Var("i_134")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("sort_list_1_0")
                      , [ CallT(
                            SVar("SortL_1_0")
                          , [ Seq(
                                CallT(
                                  SVar("_2_0")
                                , [ CallT(SVar("Fst_0_0"), [], [])
                                  , CallT(SVar("Fst_0_0"), [], [])
                                  ]
                                , []
                                )
                              , CallT(SVar("gt_0_0"), [], [])
                              )
                            ]
                          , []
                          )
                        ]
                      , []
                      )
                    , CallT(
                        SVar("map_1_0")
                      , [CallT(SVar("Snd_0_0"), [], [])]
                      , []
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "testing_2_0"
        , [ VarDec(
              "x_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("x_85"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(SVar("y_85"), [], [])
                , CallT(
                    SVar("debug_1_0")
                  , [Build(Anno(Str("  succeeded: "), Op("Nil", [])))]
                  , []
                  )
                )
              , Id
              , Seq(
                  CallT(
                    SVar("debug_1_0")
                  , [Build(Anno(Str("  failed: "), Op("Nil", [])))]
                  , []
                  )
                , Fail
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test_shuffle_1_0_0"
        , []
        , []
        , CallT(
            SVar("testing_2_0")
          , [ Build(Anno(Str("test-shuffle-1"), Op("Nil", [])))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("1"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("2"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("3"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("4"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Int("5"), Op("Nil", []))
                                              , Anno(
                                                  Op(
                                                    "Cons"
                                                  , [ Anno(Int("6"), Op("Nil", []))
                                                    , Anno(
                                                        Op(
                                                          "Cons"
                                                        , [ Anno(Int("7"), Op("Nil", []))
                                                          , Anno(
                                                              Op(
                                                                "Cons"
                                                              , [ Anno(Int("8"), Op("Nil", []))
                                                                , Anno(
                                                                    Op(
                                                                      "Cons"
                                                                    , [ Anno(Int("9"), Op("Nil", []))
                                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                                      ]
                                                                    )
                                                                  , Op("Nil", [])
                                                                  )
                                                                ]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          ]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    ]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , CallT(SVar("shuffle_0_0"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT(
          "get_lines_0_0"
        , []
        , []
        , Scope(
            ["r_134", "j_1"]
          , Seq(
              Match(Var("j_1"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("10"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  Match(Var("r_134"))
                , Seq(
                    Build(Var("j_1"))
                  , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("r_134")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_get_all_lines_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test-get-all-lines-1"), Op("Nil", [])))
            , CallT(SVar("get_lines_0_0"), [], [])
            , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty will follow\n"), Op("Nil", [])))
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("the first line"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("Second line, third will be empty"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str(""), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str("This is the fourth, a final empty will follow"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Str(""), Op("Nil", []))
                                            , Anno(Op("Nil", []), Op("Nil", []))
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "is_whitespace_0_0"
        , []
        , []
        , Scope(
            ["k_1"]
          , Seq(
              Match(Var("k_1"))
            , Seq(
                GuardedLChoice(
                  Match(Anno(Int("9"), Wld))
                , Id
                , Match(Anno(Int("32"), Wld))
                )
              , Build(Var("k_1"))
              )
            )
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["y_25"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("y_25")]), Wld)
              )
            , Build(Var("y_25"))
            )
          )
        )
      , SDefT(
          "Hd_0_0"
        , []
        , []
        , Scope(
            ["x_25"]
          , Seq(
              Match(
                Anno(Op("Cons", [Var("x_25"), Wld]), Wld)
              )
            , Build(Var("x_25"))
            )
          )
        )
      , SDefT(
          "at_suffix_rev_1_0"
        , [ VarDec(
              "z_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "a_96"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("a_96"), [], [])]
                  , []
                  )
                , Id
                , CallT(SVar("z_95"), [], [])
                )
              )
            ]
          , CallT(SVar("a_96"), [], [])
          )
        )
      , SDefT(
          "rtrim_1_0"
        , [ VarDec(
              "a_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_122", "l_1"]
          , Seq(
              Match(Var("l_1"))
            , Seq(
                Match(Var("h_122"))
              , Seq(
                  Build(Var("l_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          "Cons"
                        , [Anno(Op("", []), Op("Nil", [])), Var("h_122")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(
                        SVar("at_suffix_rev_1_0")
                      , [ Scope(
                            ["i_122", "n_1", "m_1"]
                          , Seq(
                              Match(Var("m_1"))
                            , Seq(
                                GuardedLChoice(
                                  Match(Anno(Op("Nil", []), Wld))
                                , Fail
                                , Id
                                )
                              , Seq(
                                  GuardedLChoice(
                                    CallT(
                                      SVar("Cons_2_0")
                                    , [CallT(SVar("a_94"), [], []), Id]
                                    , []
                                    )
                                  , Fail
                                  , Id
                                  )
                                , Seq(
                                    Build(Var("m_1"))
                                  , Seq(
                                      Match(Var("n_1"))
                                    , Seq(
                                        CallT(SVar("Hd_0_0"), [], [])
                                      , Seq(
                                          Match(Var("i_122"))
                                        , Seq(
                                            Build(Var("n_1"))
                                          , Build(
                                              Anno(
                                                Op(
                                                  "Cons"
                                                , [Var("i_122"), Anno(Op("Nil", []), Op("Nil", []))]
                                                )
                                              , Op("Nil", [])
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        ]
                      , []
                      )
                    , CallT(SVar("Tl_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "n_107"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("n_107"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "rtrim_chars_1_0"
        , [ VarDec(
              "x_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [ CallT(
                SVar("rtrim_1_0")
              , [CallT(SVar("x_105"), [], [])]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "trim_trailing_whitespace_0_0"
        , []
        , []
        , CallT(
            SVar("rtrim_chars_1_0")
          , [CallT(SVar("is_whitespace_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "test_trim_trailing_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test-trim-trailing-1"), Op("Nil", [])))
            , CallT(
                SVar("all_lines_1_0")
              , [CallT(SVar("trim_trailing_whitespace_0_0"), [], [])]
              , []
              )
            , Build(Anno(Str("the first line    \nSecond line, third will be empty\n \nThis is the fourth, a final empty should not follow\n   "), Op("Nil", [])))
            , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty should not follow\n"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "prefix_lines_0_1"
        , []
        , [VarDec("t_51", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("all_lines_1_0")
          , [ Scope(
                ["w_134", "o_1"]
              , Seq(
                  Match(Var("o_1"))
                , Seq(
                    Match(Var("w_134"))
                  , Seq(
                      Build(Var("o_1"))
                    , Seq(
                        Build(
                          Anno(
                            Op("", [Var("t_51"), Var("w_134")])
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("conc_strings_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["c_28", "d_28"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("c_28"), Var("d_28")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("c_28"), Var("d_28")])
              , Id
              , PrimT("SSL_subtr", [], [Var("c_28"), Var("d_28")])
              )
            )
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["w_28", "x_28", "q_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_28"), Var("x_28")])
                , Wld
                )
              )
            , Seq(
                Match(Var("q_1"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("w_28"), Var("x_28")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("w_28"), Var("x_28")])
                  )
                , Build(Var("q_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["c_29"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("c_29"), Var("c_29")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "while_not_2_0"
        , [ VarDec(
              "f_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "h_108"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("f_108"), [], [])
                , Id
                , Seq(
                    CallT(SVar("g_108"), [], [])
                  , CallT(SVar("h_108"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("h_108"), [], [])
          )
        )
      , SDefT(
          "for_3_0"
        , [ VarDec(
              "i_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("i_108"), [], [])
          , CallT(
              SVar("while_not_2_0")
            , [ CallT(SVar("j_108"), [], [])
              , CallT(SVar("k_108"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "copy_0_0"
        , []
        , []
        , CallT(
            SVar("for_3_0")
          , [ Scope(
                ["v_22", "w_22"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("v_22"), Var("w_22")])
                    , Wld
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Var("v_22")
                        , Var("w_22")
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                )
              )
            , Scope(
                ["x_22", "y_22"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("0"), Wld), Var("x_22"), Var("y_22")]
                      )
                    , Wld
                    )
                  )
                , Build(Var("y_22"))
                )
              )
            , Scope(
                ["z_22", "a_23", "b_23", "o_122", "s_1", "r_1"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("z_22"), Var("a_23"), Var("b_23")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Seq(
                      Match(Var("r_1"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("z_22"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("geq_0_0"), [], [])
                        , Build(Var("r_1"))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("s_1"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("z_22"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("subt_0_0"), [], [])
                        , Seq(
                            Match(Var("o_122"))
                          , Seq(
                              Build(Var("s_1"))
                            , Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Var("o_122")
                                    , Var("a_23")
                                    , Anno(
                                        Op("Cons", [Var("a_23"), Var("b_23")])
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("copy_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "indent_text_0_1"
        , []
        , [VarDec("r_51", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["s_51", "t_1"]
          , Seq(
              Match(Var("t_1"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      ""
                    , [Var("r_51"), Anno(Int("32"), Op("Nil", []))]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("copy_char_0_0"), [], [])
                , Seq(
                    Match(Var("s_51"))
                  , Seq(
                      Build(Var("t_1"))
                    , CallT(SVar("prefix_lines_0_1"), [], [Var("s_51")])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_indent_text_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test-indent-text-1"), Op("Nil", [])))
            , Scope(
                ["i_0", "u_1"]
              , Seq(
                  Match(Var("u_1"))
                , Seq(
                    Build(Anno(Int("4"), Op("Nil", [])))
                  , Seq(
                      Match(Var("i_0"))
                    , Seq(
                        Build(Var("u_1"))
                      , CallT(SVar("indent_text_0_1"), [], [Var("i_0")])
                      )
                    )
                  )
                )
              )
            , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty should not follow\n"), Op("Nil", [])))
            , Build(Anno(Str("    the first line\n    Second line, third will be empty\n    \n    This is the fourth, a final empty should not follow\n"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "split_fetch_keep_1_0"
        , [ VarDec(
              "h_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["p_25", "q_25", "e_124", "v_1"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("h_97"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Match(Var("p_25")), Match(Var("q_25"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("v_1"))
              , Seq(
                  Match(Var("e_124"))
                , Seq(
                    Build(Var("v_1"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [Var("e_124"), Var("p_25"), Var("q_25")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_keep_all_0_1"
        , []
        , [VarDec("m_51", ConstType(Sort("ATerm", [])))]
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "a_106"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["n_51", "o_51", "p_51", "p_134", "y_1"]
                      , Seq(
                          CallT(
                            SVar("split_fetch_keep_1_0")
                          , [ Scope(
                                ["x_1", "o_134", "w_1"]
                              , Seq(
                                  Match(Var("x_1"))
                                , Seq(
                                    Seq(
                                      Match(Var("w_1"))
                                    , Seq(
                                        Match(Var("o_134"))
                                      , Seq(
                                          Build(Var("w_1"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op("", [Var("o_134"), Var("m_51")])
                                              , Op("Nil", [])
                                              )
                                            )
                                          , CallT(SVar("elem_0_0"), [], [])
                                          )
                                        )
                                      )
                                    )
                                  , Build(Var("x_1"))
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [Var("n_51"), Var("o_51"), Var("p_51")]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("y_1"))
                            , Seq(
                                Build(Var("p_51"))
                              , Seq(
                                  CallT(SVar("a_106"), [], [])
                                , Seq(
                                    Match(Var("p_134"))
                                  , Seq(
                                      Build(Var("y_1"))
                                    , Build(
                                        Anno(
                                          Op(
                                            "Cons"
                                          , [ Var("n_51")
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(
                                                      Op(
                                                        "Cons"
                                                      , [Var("o_51"), Anno(Op("Nil", []), Op("Nil", []))]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  , Var("p_134")
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , Scope(
                        ["q_134", "z_1"]
                      , Seq(
                          Match(Var("z_1"))
                        , Seq(
                            Match(Var("q_134"))
                          , Seq(
                              Build(Var("z_1"))
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [Var("q_134"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("a_106"), [], [])
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "test_string_tokenize_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test-string-tokenize-keep-empty-1"), Op("Nil", [])))
              , Scope(
                  ["c_0", "a_2"]
                , Seq(
                    Match(Var("a_2"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("10"), Op("Nil", []))
                            , Anno(Op("Nil", []), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        Match(Var("c_0"))
                      , Seq(
                          Build(Var("a_2"))
                        , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("c_0")])
                        )
                      )
                    )
                  )
                )
              , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty will follow\n"), Op("Nil", [])))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("the first line"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("Second line, third will be empty"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str(""), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("This is the fourth, a final empty will follow"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Str(""), Op("Nil", []))
                                              , Anno(Op("Nil", []), Op("Nil", []))
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("test-string-tokenize-keep-empty-2"), Op("Nil", [])))
                , Scope(
                    ["d_0", "b_2"]
                  , Seq(
                      Match(Var("b_2"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("10"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          Match(Var("d_0"))
                        , Seq(
                            Build(Var("b_2"))
                          , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("d_0")])
                          )
                        )
                      )
                    )
                  )
                , Build(Anno(Str(""), Op("Nil", [])))
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str(""), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("test-string-tokenize-keep-empty-3"), Op("Nil", [])))
                  , Scope(
                      ["e_0", "c_2"]
                    , Seq(
                        Match(Var("c_2"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("10"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            Match(Var("e_0"))
                          , Seq(
                              Build(Var("c_2"))
                            , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("e_0")])
                            )
                          )
                        )
                      )
                    )
                  , Build(Anno(Str("\n\n"), Op("Nil", [])))
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(""), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str(""), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str(""), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("test-string-tokenize-keep-all-1"), Op("Nil", [])))
                    , Scope(
                        ["f_0", "d_2"]
                      , Seq(
                          Match(Var("d_2"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("10"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              Match(Var("f_0"))
                            , Seq(
                                Build(Var("d_2"))
                              , CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("f_0")])
                              )
                            )
                          )
                        )
                      )
                    , Build(Anno(Str("the first line\nSecond line, third will be empty and tokenized\n\nThis is the fourth, a final empty will follow\n"), Op("Nil", [])))
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("the first line"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("\n"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("Second line, third will be empty and tokenized"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Str("\n"), Op("Nil", []))
                                              , Anno(
                                                  Op(
                                                    "Cons"
                                                  , [ Anno(Str(""), Op("Nil", []))
                                                    , Anno(
                                                        Op(
                                                          "Cons"
                                                        , [ Anno(Str("\n"), Op("Nil", []))
                                                          , Anno(
                                                              Op(
                                                                "Cons"
                                                              , [ Anno(Str("This is the fourth, a final empty will follow"), Op("Nil", []))
                                                                , Anno(
                                                                    Op(
                                                                      "Cons"
                                                                    , [ Anno(Str("\n"), Op("Nil", []))
                                                                      , Anno(
                                                                          Op(
                                                                            "Cons"
                                                                          , [ Anno(Str(""), Op("Nil", []))
                                                                            , Anno(Op("Nil", []), Op("Nil", []))
                                                                            ]
                                                                          )
                                                                        , Op("Nil", [])
                                                                        )
                                                                      ]
                                                                    )
                                                                  , Op("Nil", [])
                                                                  )
                                                                ]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          ]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    ]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("test-string-tokenize-keep-all-2"), Op("Nil", [])))
                      , Scope(
                          ["g_0", "e_2"]
                        , Seq(
                            Match(Var("e_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("10"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                Match(Var("g_0"))
                              , Seq(
                                  Build(Var("e_2"))
                                , CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("g_0")])
                                )
                              )
                            )
                          )
                        )
                      , Build(Anno(Str(""), Op("Nil", [])))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str(""), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("test-string-tokenize-keep-all-3"), Op("Nil", [])))
                      , Scope(
                          ["h_0", "f_2"]
                        , Seq(
                            Match(Var("f_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("10"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                Match(Var("h_0"))
                              , Seq(
                                  Build(Var("f_2"))
                                , CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("h_0")])
                                )
                              )
                            )
                          )
                        )
                      , Build(Anno(Str("\n\n"), Op("Nil", [])))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str(""), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("\n"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str(""), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Str("\n"), Op("Nil", []))
                                                , Anno(
                                                    Op(
                                                      "Cons"
                                                    , [ Anno(Str(""), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  , Op("Nil", [])
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["b_56", "c_56"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("b_56"), Var("c_56")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("b_56"), Var("c_56")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["a_56"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("a_56"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("a_56"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["d_56"]
          , Seq(
              Match(Var("d_56"))
            , PrimT("SSL_concat_strings", [], [Var("d_56")])
            )
          )
        )
      , SDefT(
          "concat_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "s_95"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , Scope(
                    ["t_24", "u_24", "t_123", "g_2"]
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("t_24"), Var("u_24")])
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("g_2"))
                      , Seq(
                          Build(Var("t_24"))
                        , Seq(
                            CallT(
                              SVar("at_end_1_0")
                            , [Seq(
                                 Build(Var("u_24"))
                               , CallT(SVar("s_95"), [], [])
                               )]
                            , []
                            )
                          , Seq(
                              Match(Var("t_123"))
                            , Seq(Build(Var("g_2")), Build(Var("t_123")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("s_95"), [], [])
          )
        )
      , SDefT(
          "at_end_1_0"
        , [ VarDec(
              "v_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "w_95"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("w_95"), [], [])]
                  , []
                  )
                , Id
                , Seq(
                    CallT(SVar("Nil_0_0"), [], [])
                  , CallT(SVar("v_95"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("w_95"), [], [])
          )
        )
      , SDefT(
          "conc_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["q_24", "r_24", "r_123", "h_2"]
            , Seq(
                Match(
                  Anno(
                    Op("", [Var("q_24"), Var("r_24")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("h_2"))
                , Seq(
                    Build(Var("q_24"))
                  , Seq(
                      CallT(SVar("at_end_1_0"), [Build(Var("r_24"))], [])
                    , Seq(
                        Match(Var("r_123"))
                      , Seq(Build(Var("h_2")), Build(Var("r_123")))
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["s_24", "s_123", "i_2"]
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("s_24"))
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("i_2"))
                , Seq(
                    Build(Var("s_24"))
                  , Seq(
                      CallT(SVar("concat_0_0"), [], [])
                    , Seq(
                        Match(Var("s_123"))
                      , Seq(Build(Var("i_2")), Build(Var("s_123")))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "separate_by_0_1"
        , []
        , [VarDec("p_24", ConstType(Sort("ATerm", [])))]
        , GuardedLChoice(
            CallT(SVar("Nil_0_0"), [], [])
          , Id
          , CallT(
              SVar("Cons_2_0")
            , [ Id
              , Let(
                  [ SDefT(
                      "r_95"
                    , []
                    , []
                    , GuardedLChoice(
                        CallT(SVar("Nil_0_0"), [], [])
                      , Id
                      , Scope(
                          ["q_123", "j_2"]
                        , Seq(
                            CallT(
                              SVar("Cons_2_0")
                            , [Id, CallT(SVar("r_95"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("j_2"))
                            , Seq(
                                Match(Var("q_123"))
                              , Seq(
                                  Build(Var("j_2"))
                                , Build(
                                    Anno(
                                      Op("Cons", [Var("p_24"), Var("q_123")])
                                    , Op("Nil", [])
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                , CallT(SVar("r_95"), [], [])
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "separate_by_0_0"
        , []
        , []
        , Scope(
            ["o_24", "n_123"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("o_24"), Var("n_123")])
                , Wld
                )
              )
            , Seq(
                Build(Var("n_123"))
              , CallT(SVar("separate_by_0_1"), [], [Var("o_24")])
              )
            )
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "v_96"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "w_96"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("v_96"), [], [])
                    , CallT(SVar("w_96"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("w_96"), [], [])
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "b_96"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "c_96"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  , CallT(SVar("b_96"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("c_96"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("c_96"), [], [])
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["g_56"]
          , Seq(
              Match(Var("g_56"))
            , PrimT("SSL_implode_string", [], [Var("g_56")])
            )
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "d_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "e_97"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("d_97"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("e_97"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("e_97"), [], [])
          )
        )
      , SDefT(
          "elem_0_0"
        , []
        , []
        , Scope(
            ["l_25", "a_124"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("l_25"), Var("a_124")])
                , Wld
                )
              )
            , Seq(
                Build(Var("a_124"))
              , CallT(SVar("fetch_1_0"), [Match(Var("l_25"))], [])
              )
            )
          )
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "t_84"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_84"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_0", "w_0", "x_0", "f_3", "g_3"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("w_0"), Var("x_0")])
                , Var("z_0")
                )
              )
            , Seq(
                Build(Var("w_0"))
              , Seq(
                  CallT(SVar("t_84"), [], [])
                , Seq(
                    Match(Var("f_3"))
                  , Seq(
                      Build(Var("x_0"))
                    , Seq(
                        CallT(SVar("u_84"), [], [])
                      , Seq(
                          Match(Var("g_3"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("f_3"), Var("g_3")])
                            , Var("z_0")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "x_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "y_95"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("x_95"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("y_95"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("y_95"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "g_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["o_25", "d_124", "k_2"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("g_97"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Id, Match(Var("o_25"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("k_2"))
              , Seq(
                  Match(Var("d_124"))
                , Seq(
                    Build(Var("k_2"))
                  , Build(
                      Anno(
                        Op("", [Var("d_124"), Var("o_25")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["h_56"]
          , Seq(
              Match(Var("h_56"))
            , PrimT("SSL_explode_string", [], [Var("h_56")])
            )
          )
        )
      , SDefT(
          "string_tokenize_keep_empty_0_1"
        , []
        , [VarDec("j_51", ConstType(Sort("ATerm", [])))]
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "z_105"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["k_51", "l_51", "m_134", "m_2"]
                      , Seq(
                          CallT(
                            SVar("split_fetch_1_0")
                          , [ Scope(
                                ["l_134", "l_2"]
                              , Seq(
                                  Match(Var("l_2"))
                                , Seq(
                                    Match(Var("l_134"))
                                  , Seq(
                                      Build(Var("l_2"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op("", [Var("l_134"), Var("j_51")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      , CallT(SVar("elem_0_0"), [], [])
                                      )
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Match(
                              Anno(
                                Op("", [Var("k_51"), Var("l_51")])
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("m_2"))
                            , Seq(
                                Build(Var("l_51"))
                              , Seq(
                                  CallT(SVar("z_105"), [], [])
                                , Seq(
                                    Match(Var("m_134"))
                                  , Seq(
                                      Build(Var("m_2"))
                                    , Build(
                                        Anno(
                                          Op("Cons", [Var("k_51"), Var("m_134")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , Scope(
                        ["n_134", "n_2"]
                      , Seq(
                          Match(Var("n_2"))
                        , Seq(
                            Match(Var("n_134"))
                          , Seq(
                              Build(Var("n_2"))
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [Var("n_134"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("z_105"), [], [])
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "is_string_0_0"
        , []
        , []
        , Scope(
            ["f_56"]
          , Seq(
              Match(Var("f_56"))
            , PrimT("SSL_is_string", [], [Var("f_56")])
            )
          )
        )
      , SDefT(
          "all_lines_1_0"
        , [ VarDec(
              "b_106"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_51", "u_134", "s_2", "t_134", "r_2"]
          , Seq(
              CallT(SVar("is_string_0_0"), [], [])
            , Seq(
                Scope(
                  ["s_134", "o_2"]
                , Seq(
                    Match(Var("o_2"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("10"), Op("Nil", []))
                            , Anno(Op("Nil", []), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        Match(Var("s_134"))
                      , Seq(
                          Build(Var("o_2"))
                        , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("s_134")])
                        )
                      )
                    )
                  )
                )
              , Seq(
                  CallT(
                    SVar("at_last_1_0")
                  , [ GuardedLChoice(
                        Seq(
                          Match(
                            Anno(
                              Op(
                                "Cons"
                              , [Anno(Str(""), Wld), Anno(Op("Nil", []), Wld)]
                              )
                            , Wld
                            )
                          )
                        , Build(Anno(Op("Nil", []), Op("Nil", [])))
                        )
                      , Scope(
                          ["p_2"]
                        , Seq(
                            Match(Var("p_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("\n"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(Match(Var("q_51")), Build(Var("p_2")))
                            )
                          )
                        )
                      , Scope(
                          ["q_2"]
                        , Seq(
                            Match(Var("q_2"))
                          , Seq(
                              Build(Anno(Op("Nil", []), Op("Nil", [])))
                            , Seq(Match(Var("q_51")), Build(Var("q_2")))
                            )
                          )
                        )
                      )
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("map_1_0")
                    , [CallT(SVar("b_106"), [], [])]
                    , []
                    )
                  , Seq(
                      Seq(
                        Match(Var("r_2"))
                      , Seq(
                          Match(Var("t_134"))
                        , Seq(
                            Build(Var("r_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Anno(Str("\n"), Op("Nil", [])), Var("t_134")]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("separate_by_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Seq(
                        Match(Var("s_2"))
                      , Seq(
                          Match(Var("u_134"))
                        , Seq(
                            Build(Var("s_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op("", [Var("u_134"), Var("q_51")])
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("conc_0_0"), [], [])
                              , CallT(SVar("concat_strings_0_0"), [], [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "u_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("u_85"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["u_2", "o_138", "t_2"]
          , Seq(
              Match(Var("u_2"))
            , Seq(
                Seq(
                  Match(Var("t_2"))
                , Seq(
                    Match(Var("o_138"))
                  , Seq(
                      Build(Var("t_2"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Op("stderr", []), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [Var("o_138"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("printnl_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("u_2"))
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "h_109"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_2"]
          , Seq(
              Match(Var("v_2"))
            , Seq(
                CallT(SVar("h_109"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("v_2"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "t_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("t_85"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["w_27", "x_27"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_27"), Var("x_27")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("w_27"), Var("x_27")])
              , Id
              , PrimT("SSL_addr", [], [Var("w_27"), Var("x_27")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["t_125", "w_2"]
          , Seq(
              Match(Var("w_2"))
            , Seq(
                Match(Var("t_125"))
              , Seq(
                  Build(Var("w_2"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("t_125"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "v_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["x_2"]
          , Seq(
              Match(Var("x_2"))
            , Seq(
                CallT(SVar("v_85"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("x_2"))
                  , GuardedLChoice(
                      Scope(
                        ["y_2"]
                      , Seq(
                          Match(Var("y_2"))
                        , Seq(
                            CallT(SVar("w_85"), [], [])
                          , Seq(
                              Build(Var("y_2"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "i_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_9", "v_9"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("i_86"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("k_86"), [], [])]
                      , []
                      )
                    , CallT(SVar("j_86"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("u_9"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("l_86"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("v_9"))
                      , GuardedLChoice(
                          Seq(Build(Var("v_9")), Match(Var("u_9")))
                        , Id
                        , Seq(
                            Build(Var("u_9"))
                          , Seq(
                              CallT(
                                SVar("debug_1_0")
                              , [Build(Anno(Str("  result not equal : "), Op("Nil", [])))]
                              , []
                              )
                            , Seq(
                                Build(Var("v_9"))
                              , Seq(
                                  CallT(
                                    SVar("debug_1_0")
                                  , [Build(Anno(Str("  expected         : "), Op("Nil", [])))]
                                  , []
                                  )
                                , Fail
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "test_all_lines_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test-all-lines-1"), Op("Nil", [])))
              , CallT(
                  SVar("all_lines_1_0")
                , [ Scope(
                      ["a_0", "z_2"]
                    , Seq(
                        Match(Var("z_2"))
                      , Seq(
                          Match(Var("a_0"))
                        , Seq(
                            Build(Var("z_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Var("a_0"), Anno(Str("EOL"), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("conc_strings_0_0"), [], [])
                            )
                          )
                        )
                      )
                    )
                  ]
                , []
                )
              , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty should not follow\n"), Op("Nil", [])))
              , Build(Anno(Str("the first lineEOL\nSecond line, third will be emptyEOL\nEOL\nThis is the fourth, a final empty should not followEOL\n"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test-all-lines-2"), Op("Nil", [])))
              , CallT(
                  SVar("all_lines_1_0")
                , [ Scope(
                      ["b_0", "a_3"]
                    , Seq(
                        Match(Var("a_3"))
                      , Seq(
                          Match(Var("b_0"))
                        , Seq(
                            Build(Var("a_3"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Var("b_0"), Anno(Str("EOL"), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("conc_strings_0_0"), [], [])
                            )
                          )
                        )
                      )
                    )
                  ]
                , []
                )
              , Build(Anno(Str("\nAfter first empty line: Second line, third will be empty\n\nThis is the fourth, a final empty should not follow"), Op("Nil", [])))
              , Build(Anno(Str("EOL\nAfter first empty line: Second line, third will be emptyEOL\nEOL\nThis is the fourth, a final empty should not followEOL"), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "y_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["j_3", "h_3", "i_3", "k_3", "l_3"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("h_3"), Var("i_3")])
                , Var("j_3")
                )
              )
            , Seq(
                Build(Var("h_3"))
              , Seq(
                  CallT(SVar("y_77"), [], [])
                , Seq(
                    Match(Var("k_3"))
                  , Seq(
                      Build(Var("i_3"))
                    , Seq(
                        CallT(SVar("z_77"), [], [])
                      , Seq(
                          Match(Var("l_3"))
                        , Build(
                            Anno(
                              Op("", [Var("k_3"), Var("l_3")])
                            , Var("j_3")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["q_59", "r_59", "b_3"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_59"), Var("r_59")])
                , Wld
                )
              )
            , Seq(
                Match(Var("b_3"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("q_59"), Var("r_59")])
                , Build(Var("b_3"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "q_109"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["e_3", "p_138", "q_138", "d_3", "c_3"]
          , Seq(
              Match(Var("e_3"))
            , Seq(
                Seq(
                  Seq(
                    Match(Var("c_3"))
                  , Seq(
                      CallT(SVar("q_109"), [], [])
                    , Seq(Match(Var("p_138")), Build(Var("c_3")))
                    )
                  )
                , Seq(
                    Match(Var("d_3"))
                  , Seq(
                      Match(Var("q_138"))
                    , Seq(
                        Build(Var("d_3"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("stderr", []), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("p_138")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("q_138"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("printnl_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              , Build(Var("e_3"))
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "g_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("g_86"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("h_86"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("String Misc test suite"), Op("Nil", [])))
            , Seq(
                CallT(SVar("test_all_lines_0_0"), [], [])
              , Seq(
                  CallT(SVar("test_string_tokenize_0_0"), [], [])
                , Seq(
                    CallT(SVar("test_indent_text_0_0"), [], [])
                  , Seq(
                      CallT(SVar("test_trim_trailing_0_0"), [], [])
                    , Seq(
                        CallT(SVar("test_get_all_lines_0_0"), [], [])
                      , Seq(
                          CallT(SVar("test_shuffle_1_0_0"), [], [])
                        , Seq(
                            CallT(SVar("test_shuffle_word_mids_1_0_0"), [], [])
                          , CallT(SVar("test_shuffle_word_mids_2_0_0"), [], [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
