Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "test_shuffle_word_mids_2_0_0"
        , []
        , []
        , CallT(
            SVar("testing_2_0")
          , [ Build(Anno(Str("test-shuffle-word-mids-2"), Op("Nil", [])))
            , Seq(
                Build(Anno(Str("Stratego/XT is a framework for the development of transformation systems aiming to support a wide range of program transformations. The framework consists of the transformation language Stratego and the XT collection of transformation tools."), Op("Nil", [])))
              , CallT(SVar("shuffle_word_mids_0_0"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT(
          "reverse_acc_2_0"
        , [ VarDec(
              "n_1"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_1"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              [ "w_40"
              , "x_40"
              , "o_154"
              , "p_154"
              , "y_40"
              , "z_40"
              , "q_154"
              , "r_154"
              , "t_154"
              , "s_154"
              ]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("w_40"), Var("x_40")])
                  , Wld
                  )
                )
              , Seq(
                  Scope(["n_154"], Match(Var("n_154")))
                , Seq(
                    Match(Var("p_154"))
                  , Seq(
                      Seq(
                        Build(Var("x_40"))
                      , Seq(
                          Seq(
                            Seq(
                              Match(Var("z_40"))
                            , Seq(
                                Seq(
                                  Seq(
                                    Match(Var("s_154"))
                                  , Seq(
                                      Build(Var("w_40"))
                                    , Seq(
                                        CallT(SVar("n_1"), [], [])
                                      , Seq(Match(Var("q_154")), Build(Var("s_154")))
                                      )
                                    )
                                  )
                                , Seq(
                                    Match(Var("t_154"))
                                  , Seq(
                                      CallT(SVar("o_1"), [], [])
                                    , Seq(
                                        Match(Var("r_154"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op("Cons", [Var("q_154"), Var("r_154")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , Seq(Match(Var("y_40")), Build(Var("z_40")))
                                        )
                                      )
                                    )
                                  )
                                )
                              , CallT(
                                  SVar("reverse_acc_2_0")
                                , [CallT(SVar("n_1"), [], []), Build(Var("y_40"))]
                                , []
                                )
                              )
                            )
                          , Match(Var("o_154"))
                          )
                        , Build(Var("p_154"))
                        )
                      )
                    , Build(Var("o_154"))
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["l_154", "m_154", "k_154"]
            , Seq(
                Match(Anno(Op("Nil", []), Wld))
              , Seq(
                  Match(Var("k_154"))
                , Seq(
                    Match(Var("m_154"))
                  , Seq(
                      Build(Anno(Op("", []), Op("Nil", [])))
                    , Seq(
                        CallT(SVar("o_1"), [], [])
                      , Match(Var("l_154"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "reverse_0_0"
        , []
        , []
        , CallT(
            SVar("reverse_acc_2_0")
          , [Id, Build(Anno(Op("Nil", []), Op("Nil", [])))]
          , []
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["w_36"]
          , Match(
              Anno(
                Op("", [Var("w_36"), Var("w_36")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "foldr_3_0"
        , [ VarDec(
              "s_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "t_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("Nil_0_0"), [], [])
            , CallT(SVar("s_121"), [], [])
            )
          , Id
          , Scope(
              ["v_37", "w_37", "y_20", "z_20", "a_21", "v_150", "x_150", "w_150"]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("v_37"), Var("w_37")])
                  , Wld
                  )
                )
              , Seq(
                  Scope(["x_20"], Match(Var("x_20")))
                , Seq(
                    Match(Var("z_20"))
                  , Seq(
                      Seq(
                        Seq(
                          Match(Var("w_150"))
                        , Seq(
                            Build(Var("v_37"))
                          , Seq(
                              CallT(SVar("u_121"), [], [])
                            , Seq(Match(Var("a_21")), Build(Var("w_150")))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("x_150"))
                        , Seq(
                            Build(Var("w_37"))
                          , Seq(
                              CallT(
                                SVar("foldr_3_0")
                              , [ CallT(SVar("s_121"), [], [])
                                , CallT(SVar("t_121"), [], [])
                                , CallT(SVar("u_121"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                Match(Var("v_150"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op("", [Var("a_21"), Var("v_150")])
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("t_121"), [], [])
                                  , Seq(Match(Var("y_20")), Build(Var("z_20")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("y_20"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "length_0_0"
        , []
        , []
        , CallT(
            SVar("foldr_3_0")
          , [ Build(Anno(Int("0"), Op("Nil", [])))
            , CallT(SVar("add_0_0"), [], [])
            , Build(Anno(Int("1"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "shuffle_forced_0_0"
        , []
        , []
        , Scope(
            ["d_72", "e_72", "f_72"]
          , GuardedLChoice(
              Let(
                [ SDefT(
                    "b_133"
                  , []
                  , []
                  , Scope(
                      ["j_72"]
                    , Seq(
                        Match(Var("j_72"))
                      , Seq(
                          CallT(SVar("shuffle_0_0"), [], [])
                        , GuardedLChoice(
                            Scope(
                              ["k_72", "b_181", "c_181"]
                            , Seq(
                                Match(Var("k_72"))
                              , Seq(
                                  Match(Var("c_181"))
                                , Seq(
                                    Match(Var("b_181"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("j_72"), Var("b_181")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("eq_0_0"), [], [])
                                      , Build(Var("k_72"))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          , CallT(SVar("b_133"), [], [])
                          , Id
                          )
                        )
                      )
                    )
                  )
                ]
              , Scope(
                  ["h_72"]
                , Seq(
                    Scope(
                      ["g_72", "z_180", "a_181"]
                    , Seq(
                        Match(Var("g_72"))
                      , Seq(
                          CallT(SVar("length_0_0"), [], [])
                        , Seq(
                            Match(Var("a_181"))
                          , Seq(
                              Match(Var("z_180"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Var("z_180"), Anno(Int("1"), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("gt_0_0"), [], [])
                                , Build(Var("g_72"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , Seq(
                      Seq(
                        Match(Var("h_72"))
                      , Seq(
                          CallT(
                            SVar("at_suffix_1_0")
                          , [ Scope(
                                ["i_72"]
                              , Seq(
                                  Match(
                                    Anno(
                                      Op(
                                        "Cons"
                                      , [ Var("e_72")
                                        , Anno(
                                            Op("Cons", [Var("f_72"), Var("d_72")])
                                          , Wld
                                          )
                                        ]
                                      )
                                    , Wld
                                    )
                                  )
                                , Seq(
                                    Match(Var("i_72"))
                                  , Seq(
                                      GuardedLChoice(
                                        Seq(
                                          Build(
                                            Anno(
                                              Op("", [Var("e_72"), Var("f_72")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , CallT(SVar("eq_0_0"), [], [])
                                        )
                                      , Fail
                                      , Id
                                      )
                                    , Build(Var("i_72"))
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Build(Var("h_72"))
                        )
                      )
                    , CallT(SVar("b_133"), [], [])
                    )
                  )
                )
              )
            , Id
            , Id
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "strlen_0_0"
        , []
        , []
        , Scope(
            ["w_77"]
          , Seq(
              Match(Var("w_77"))
            , PrimT("SSL_strlen", [], [Var("w_77")])
            )
          )
        )
      , SDefT(
          "shuffle_word_mid_0_0"
        , []
        , []
        , Scope(
            ["m_72", "n_72", "o_72", "p_72", "q_72", "r_72"]
          , Seq(
              Match(Var("r_72"))
            , Seq(
                CallT(SVar("is_string_0_0"), [], [])
              , Seq(
                  Build(Var("r_72"))
                , GuardedLChoice(
                    Scope(
                      ["s_72", "j_181", "k_181"]
                    , Seq(
                        Match(Var("s_72"))
                      , Seq(
                          CallT(SVar("strlen_0_0"), [], [])
                        , Seq(
                            Match(Var("k_181"))
                          , Seq(
                              Match(Var("j_181"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Var("j_181"), Anno(Int("3"), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("lt_0_0"), [], [])
                                , Build(Var("s_72"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , Id
                  , Scope(
                      ["t_72"]
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(
                            Anno(
                              Op("Cons", [Var("o_72"), Var("m_72")])
                            , Wld
                            )
                          )
                        , Seq(
                            Build(Var("m_72"))
                          , Seq(
                              CallT(SVar("reverse_0_0"), [], [])
                            , Seq(
                                Match(
                                  Anno(
                                    Op("Cons", [Var("q_72"), Var("n_72")])
                                  , Wld
                                  )
                                )
                              , Seq(
                                  Match(Var("t_72"))
                                , Seq(
                                    Build(Var("n_72"))
                                  , Seq(
                                      CallT(SVar("shuffle_forced_0_0"), [], [])
                                    , Seq(
                                        CallT(SVar("reverse_0_0"), [], [])
                                      , Seq(
                                          Match(Var("p_72"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(
                                                      Op(
                                                        "Cons"
                                                      , [Var("o_72"), Anno(Op("Nil", []), Op("Nil", []))]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  , Anno(
                                                      Op(
                                                        "Cons"
                                                      , [ Var("p_72")
                                                        , Anno(
                                                            Op(
                                                              "Cons"
                                                            , [ Anno(
                                                                  Op(
                                                                    "Cons"
                                                                  , [Var("q_72"), Anno(Op("Nil", []), Op("Nil", []))]
                                                                  )
                                                                , Op("Nil", [])
                                                                )
                                                              , Anno(Op("Nil", []), Op("Nil", []))
                                                              ]
                                                            )
                                                          , Op("Nil", [])
                                                          )
                                                        ]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            )
                                          , Seq(
                                              CallT(SVar("concat_0_0"), [], [])
                                            , CallT(SVar("implode_string_0_0"), [], [])
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "shuffle_word_mids_0_0"
        , []
        , []
        , Scope(
            ["h_181", "i_181"]
          , Seq(
              Match(Var("i_181"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("32"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("46"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("44"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  Match(Var("h_181"))
                , Seq(
                    Build(Var("i_181"))
                  , Seq(
                      CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("h_181")])
                    , Seq(
                        CallT(
                          SVar("map_1_0")
                        , [CallT(SVar("shuffle_word_mid_0_0"), [], [])]
                        , []
                        )
                      , CallT(SVar("concat_strings_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_shuffle_word_mids_1_0_0"
        , []
        , []
        , CallT(
            SVar("testing_2_0")
          , [ Build(Anno(Str("test-shuffle-word-mids-1"), Op("Nil", [])))
            , Seq(
                Build(Anno(Str("Goedemorgen"), Op("Nil", [])))
              , CallT(SVar("shuffle_word_mids_0_0"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["b_35", "c_35", "d_35", "x_17"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("b_35")
                        , Anno(
                            Op("Cons", [Var("d_35"), Var("c_35")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("x_17")), Build(Var("d_35")))
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["z_34", "a_35", "w_17"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("a_35"), Var("z_34")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("w_17")), Build(Var("a_35")))
            )
          )
        )
      , SDefT(
          "SortL_1_0"
        , [ VarDec(
              "v_131"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["j_69", "k_69", "l_69", "x_177"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Var("k_69")
                    , Anno(
                        Op("Cons", [Var("l_69"), Var("j_69")])
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("x_177"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("k_69"), Var("l_69")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("v_131"), [], [])
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Var("l_69")
                          , Anno(
                              Op("Cons", [Var("k_69"), Var("j_69")])
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "r_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("r_120"), [], []), Id, Id)
        )
      , SDefT(
          "sort_list_1_0"
        , [ VarDec(
              "m_131"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("try_1_0")
          , [ Let(
                [ SDefT(
                    "n_131"
                  , []
                  , []
                  , Seq(
                      GuardedLChoice(
                        CallT(SVar("m_131"), [], [])
                      , Id
                      , CallT(
                          SVar("Cons_2_0")
                        , [Id, CallT(SVar("n_131"), [], [])]
                        , []
                        )
                      )
                    , CallT(
                        SVar("try_1_0")
                      , [CallT(SVar("n_131"), [], [])]
                      , []
                      )
                    )
                  )
                ]
              , CallT(SVar("n_131"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT("next_random_0_0", [], [], PrimT("SSL_rand", [], []))
      , SDefT(
          "is_list_0_0"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Op("Nil", []), Wld))
          , Id
          , Match(Anno(Op("Cons", [Wld, Wld]), Wld))
          )
        )
      , SDefT(
          "shuffle_0_0"
        , []
        , []
        , Scope(
            ["l_72"]
          , Seq(
              Match(Var("l_72"))
            , Seq(
                CallT(SVar("is_list_0_0"), [], [])
              , Seq(
                  Build(Var("l_72"))
                , Seq(
                    CallT(
                      SVar("map_1_0")
                    , [ Scope(
                          ["d_181", "e_181", "g_181", "f_181"]
                        , Seq(
                            Match(Var("f_181"))
                          , Seq(
                              Build(Anno(Op("", []), Op("Nil", [])))
                            , Seq(
                                CallT(SVar("next_random_0_0"), [], [])
                              , Seq(
                                  Match(Var("d_181"))
                                , Seq(
                                    Build(Var("f_181"))
                                  , Seq(
                                      Match(Var("g_181"))
                                    , Seq(
                                        Match(Var("e_181"))
                                      , Build(
                                          Anno(
                                            Op("", [Var("d_181"), Var("e_181")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("sort_list_1_0")
                      , [ CallT(
                            SVar("SortL_1_0")
                          , [ Seq(
                                CallT(
                                  SVar("_2_0")
                                , [ CallT(SVar("Fst_0_0"), [], [])
                                  , CallT(SVar("Fst_0_0"), [], [])
                                  ]
                                , []
                                )
                              , CallT(SVar("gt_0_0"), [], [])
                              )
                            ]
                          , []
                          )
                        ]
                      , []
                      )
                    , CallT(
                        SVar("map_1_0")
                      , [CallT(SVar("Snd_0_0"), [], [])]
                      , []
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "testing_2_0"
        , [ VarDec(
              "b_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "c_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("b_113"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(SVar("c_113"), [], [])
                , CallT(
                    SVar("debug_1_0")
                  , [Build(Anno(Str("  succeeded: "), Op("Nil", [])))]
                  , []
                  )
                )
              , Id
              , Seq(
                  CallT(
                    SVar("debug_1_0")
                  , [Build(Anno(Str("  failed: "), Op("Nil", [])))]
                  , []
                  )
                , Fail
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test_shuffle_1_0_0"
        , []
        , []
        , CallT(
            SVar("testing_2_0")
          , [ Build(Anno(Str("test-shuffle-1"), Op("Nil", [])))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("1"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("2"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("3"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("4"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Int("5"), Op("Nil", []))
                                              , Anno(
                                                  Op(
                                                    "Cons"
                                                  , [ Anno(Int("6"), Op("Nil", []))
                                                    , Anno(
                                                        Op(
                                                          "Cons"
                                                        , [ Anno(Int("7"), Op("Nil", []))
                                                          , Anno(
                                                              Op(
                                                                "Cons"
                                                              , [ Anno(Int("8"), Op("Nil", []))
                                                                , Anno(
                                                                    Op(
                                                                      "Cons"
                                                                    , [ Anno(Int("9"), Op("Nil", []))
                                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                                      ]
                                                                    )
                                                                  , Op("Nil", [])
                                                                  )
                                                                ]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          ]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    ]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , CallT(SVar("shuffle_0_0"), [], [])
              )
            ]
          , []
          )
        )
      , SDefT(
          "get_lines_0_0"
        , []
        , []
        , Scope(
            ["z_181", "a_182"]
          , Seq(
              Match(Var("a_182"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("10"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  Match(Var("z_181"))
                , Seq(
                    Build(Var("a_182"))
                  , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("z_181")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_get_all_lines_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test-get-all-lines-1"), Op("Nil", [])))
            , CallT(SVar("get_lines_0_0"), [], [])
            , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty will follow\n"), Op("Nil", [])))
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("the first line"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("Second line, third will be empty"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str(""), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str("This is the fourth, a final empty will follow"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Str(""), Op("Nil", []))
                                            , Anno(Op("Nil", []), Op("Nil", []))
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "is_whitespace_0_0"
        , []
        , []
        , Scope(
            ["g_1"]
          , Seq(
              Match(Var("g_1"))
            , Seq(
                GuardedLChoice(
                  Match(Anno(Int("9"), Wld))
                , Id
                , Match(Anno(Int("32"), Wld))
                )
              , Build(Var("g_1"))
              )
            )
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["n_41", "n_155"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("n_41")]), Wld)
              )
            , Seq(Match(Var("n_155")), Build(Var("n_41")))
            )
          )
        )
      , SDefT(
          "Hd_0_0"
        , []
        , []
        , Scope(
            ["m_41", "m_155"]
          , Seq(
              Match(
                Anno(Op("Cons", [Var("m_41"), Wld]), Wld)
              )
            , Seq(Match(Var("m_155")), Build(Var("m_41")))
            )
          )
        )
      , SDefT(
          "at_suffix_rev_1_0"
        , [ VarDec(
              "d_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "e_123"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("e_123"), [], [])]
                  , []
                  )
                , Id
                , CallT(SVar("d_123"), [], [])
                )
              )
            ]
          , CallT(SVar("e_123"), [], [])
          )
        )
      , SDefT(
          "rtrim_1_0"
        , [ VarDec(
              "e_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["o_20", "p_20"]
          , Seq(
              Match(Var("p_20"))
            , Seq(
                Match(Var("o_20"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        "Cons"
                      , [Anno(Op("", []), Op("Nil", [])), Var("o_20")]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(
                      SVar("at_suffix_rev_1_0")
                    , [ Scope(
                          ["q_20", "r_20", "s_37"]
                        , Seq(
                            Match(Var("s_37"))
                          , Seq(
                              GuardedLChoice(
                                Match(Anno(Op("Nil", []), Wld))
                              , Fail
                              , Id
                              )
                            , Seq(
                                GuardedLChoice(
                                  CallT(
                                    SVar("Cons_2_0")
                                  , [CallT(SVar("e_121"), [], []), Id]
                                  , []
                                  )
                                , Fail
                                , Id
                                )
                              , Seq(
                                  Build(Var("s_37"))
                                , Seq(
                                    Match(Var("r_20"))
                                  , Seq(
                                      CallT(SVar("Hd_0_0"), [], [])
                                    , Seq(
                                        Match(Var("q_20"))
                                      , Build(
                                          Anno(
                                            Op(
                                              "Cons"
                                            , [Var("q_20"), Anno(Op("Nil", []), Op("Nil", []))]
                                            )
                                          , Op("Nil", [])
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , []
                    )
                  , CallT(SVar("Tl_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "t_134"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("t_134"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "rtrim_chars_1_0"
        , [ VarDec(
              "d_133"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [ CallT(
                SVar("rtrim_1_0")
              , [CallT(SVar("d_133"), [], [])]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "trim_trailing_whitespace_0_0"
        , []
        , []
        , CallT(
            SVar("rtrim_chars_1_0")
          , [CallT(SVar("is_whitespace_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "test_trim_trailing_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test-trim-trailing-1"), Op("Nil", [])))
            , CallT(
                SVar("all_lines_1_0")
              , [CallT(SVar("trim_trailing_whitespace_0_0"), [], [])]
              , []
              )
            , Build(Anno(Str("the first line    \nSecond line, third will be empty\n \nThis is the fourth, a final empty should not follow\n   "), Op("Nil", [])))
            , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty should not follow\n"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "prefix_lines_0_1"
        , []
        , [VarDec("i_73", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("all_lines_1_0")
          , [ Scope(
                ["k_182", "l_182"]
              , Seq(
                  Match(Var("l_182"))
                , Seq(
                    Match(Var("k_182"))
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("i_73"), Var("k_182")])
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["f_44", "g_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_44"), Var("g_44")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("f_44"), Var("g_44")])
              , Id
              , PrimT("SSL_subtr", [], [Var("f_44"), Var("g_44")])
              )
            )
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["z_44", "a_45", "h_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_44"), Var("a_45")])
                , Wld
                )
              )
            , Seq(
                Match(Var("h_1"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("z_44"), Var("a_45")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("z_44"), Var("a_45")])
                  )
                , Build(Var("h_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["f_45"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("f_45"), Var("f_45")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "while_not_2_0"
        , [ VarDec(
              "e_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "f_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("e_135"), [], [])
          , Id
          , Seq(
              CallT(SVar("f_135"), [], [])
            , CallT(
                SVar("while_not_2_0")
              , [ CallT(SVar("e_135"), [], [])
                , CallT(SVar("f_135"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "for_3_0"
        , [ VarDec(
              "i_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("i_135"), [], [])
          , CallT(
              SVar("while_not_2_0")
            , [ CallT(SVar("j_135"), [], [])
              , CallT(SVar("k_135"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "copy_0_0"
        , []
        , []
        , CallT(
            SVar("for_3_0")
          , [ Scope(
                ["a_38", "b_38", "a_151"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("a_38"), Var("b_38")])
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("a_151"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Var("a_38")
                          , Var("b_38")
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            , Scope(
                ["c_38", "d_38", "b_151"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("0"), Wld), Var("c_38"), Var("d_38")]
                      )
                    , Wld
                    )
                  )
                , Seq(Match(Var("b_151")), Build(Var("d_38")))
                )
              )
            , Scope(
                ["e_38", "f_38", "g_38", "d_151", "e_151", "c_151"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("e_38"), Var("f_38"), Var("g_38")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Seq(
                      Match(Var("c_151"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("e_38"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("geq_0_0"), [], [])
                        , Build(Var("c_151"))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("e_151"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("e_38"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("subt_0_0"), [], [])
                        , Seq(
                            Match(Var("d_151"))
                          , Build(
                              Anno(
                                Op(
                                  ""
                                , [ Var("d_151")
                                  , Var("f_38")
                                  , Anno(
                                      Op("Cons", [Var("f_38"), Var("g_38")])
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("copy_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "indent_text_0_1"
        , []
        , [VarDec("f_73", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["g_73", "h_73"]
          , Seq(
              Match(Var("h_73"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      ""
                    , [Var("f_73"), Anno(Int("32"), Op("Nil", []))]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("copy_char_0_0"), [], [])
                , Seq(
                    Match(Var("g_73"))
                  , Seq(
                      Build(Var("h_73"))
                    , CallT(SVar("prefix_lines_0_1"), [], [Var("g_73")])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_indent_text_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test-indent-text-1"), Op("Nil", [])))
            , Scope(
                ["q_0", "r_0"]
              , Seq(
                  Match(Var("r_0"))
                , Seq(
                    Build(Anno(Int("4"), Op("Nil", [])))
                  , Seq(
                      Match(Var("q_0"))
                    , Seq(
                        Build(Var("r_0"))
                      , CallT(SVar("indent_text_0_1"), [], [Var("q_0")])
                      )
                    )
                  )
                )
              )
            , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty should not follow\n"), Op("Nil", [])))
            , Build(Anno(Str("    the first line\n    Second line, third will be empty\n    \n    This is the fourth, a final empty should not follow\n"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "split_fetch_keep_1_0"
        , [ VarDec(
              "l_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["e_41", "f_41", "a_155", "b_155"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("l_124"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Match(Var("e_41")), Match(Var("f_41"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("b_155"))
              , Seq(
                  Match(Var("a_155"))
                , Build(
                    Anno(
                      Op(
                        ""
                      , [Var("a_155"), Var("e_41"), Var("f_41")]
                      )
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_keep_all_0_1"
        , []
        , [VarDec("x_72", ConstType(Sort("ATerm", [])))]
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "g_133"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["z_72", "a_73", "b_73", "v_181", "w_181", "u_181"]
                      , Seq(
                          CallT(
                            SVar("split_fetch_keep_1_0")
                          , [ Scope(
                                ["y_72", "s_181", "t_181"]
                              , Seq(
                                  Match(Var("y_72"))
                                , Seq(
                                    Match(Var("t_181"))
                                  , Seq(
                                      Match(Var("s_181"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op("", [Var("s_181"), Var("x_72")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      , Seq(
                                          CallT(SVar("elem_0_0"), [], [])
                                        , Build(Var("y_72"))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [Var("z_72"), Var("a_73"), Var("b_73")]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("u_181"))
                            , Seq(
                                Match(Var("w_181"))
                              , Seq(
                                  Build(Var("b_73"))
                                , Seq(
                                    CallT(SVar("g_133"), [], [])
                                  , Seq(
                                      Match(Var("v_181"))
                                    , Build(
                                        Anno(
                                          Op(
                                            "Cons"
                                          , [ Var("z_72")
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(
                                                      Op(
                                                        "Cons"
                                                      , [Var("a_73"), Anno(Op("Nil", []), Op("Nil", []))]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  , Var("v_181")
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , Scope(
                        ["x_181", "y_181"]
                      , Seq(
                          Match(Var("y_181"))
                        , Seq(
                            Match(Var("x_181"))
                          , Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [Var("x_181"), Anno(Op("Nil", []), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("g_133"), [], [])
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "test_string_tokenize_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test-string-tokenize-keep-empty-1"), Op("Nil", [])))
              , Scope(
                  ["e_0", "f_0"]
                , Seq(
                    Match(Var("f_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("10"), Op("Nil", []))
                            , Anno(Op("Nil", []), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        Match(Var("e_0"))
                      , Seq(
                          Build(Var("f_0"))
                        , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("e_0")])
                        )
                      )
                    )
                  )
                )
              , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty will follow\n"), Op("Nil", [])))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("the first line"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("Second line, third will be empty"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str(""), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("This is the fourth, a final empty will follow"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Str(""), Op("Nil", []))
                                              , Anno(Op("Nil", []), Op("Nil", []))
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("test-string-tokenize-keep-empty-2"), Op("Nil", [])))
                , Scope(
                    ["g_0", "h_0"]
                  , Seq(
                      Match(Var("h_0"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("10"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          Match(Var("g_0"))
                        , Seq(
                            Build(Var("h_0"))
                          , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("g_0")])
                          )
                        )
                      )
                    )
                  )
                , Build(Anno(Str(""), Op("Nil", [])))
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str(""), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("test-string-tokenize-keep-empty-3"), Op("Nil", [])))
                  , Scope(
                      ["i_0", "j_0"]
                    , Seq(
                        Match(Var("j_0"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("10"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            Match(Var("i_0"))
                          , Seq(
                              Build(Var("j_0"))
                            , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("i_0")])
                            )
                          )
                        )
                      )
                    )
                  , Build(Anno(Str("\n\n"), Op("Nil", [])))
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(""), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str(""), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str(""), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("test-string-tokenize-keep-all-1"), Op("Nil", [])))
                    , Scope(
                        ["k_0", "l_0"]
                      , Seq(
                          Match(Var("l_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("10"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              Match(Var("k_0"))
                            , Seq(
                                Build(Var("l_0"))
                              , CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("k_0")])
                              )
                            )
                          )
                        )
                      )
                    , Build(Anno(Str("the first line\nSecond line, third will be empty and tokenized\n\nThis is the fourth, a final empty will follow\n"), Op("Nil", [])))
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("the first line"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("\n"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("Second line, third will be empty and tokenized"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Str("\n"), Op("Nil", []))
                                              , Anno(
                                                  Op(
                                                    "Cons"
                                                  , [ Anno(Str(""), Op("Nil", []))
                                                    , Anno(
                                                        Op(
                                                          "Cons"
                                                        , [ Anno(Str("\n"), Op("Nil", []))
                                                          , Anno(
                                                              Op(
                                                                "Cons"
                                                              , [ Anno(Str("This is the fourth, a final empty will follow"), Op("Nil", []))
                                                                , Anno(
                                                                    Op(
                                                                      "Cons"
                                                                    , [ Anno(Str("\n"), Op("Nil", []))
                                                                      , Anno(
                                                                          Op(
                                                                            "Cons"
                                                                          , [ Anno(Str(""), Op("Nil", []))
                                                                            , Anno(Op("Nil", []), Op("Nil", []))
                                                                            ]
                                                                          )
                                                                        , Op("Nil", [])
                                                                        )
                                                                      ]
                                                                    )
                                                                  , Op("Nil", [])
                                                                  )
                                                                ]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          ]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    ]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("test-string-tokenize-keep-all-2"), Op("Nil", [])))
                      , Scope(
                          ["m_0", "n_0"]
                        , Seq(
                            Match(Var("n_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("10"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                Match(Var("m_0"))
                              , Seq(
                                  Build(Var("n_0"))
                                , CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("m_0")])
                                )
                              )
                            )
                          )
                        )
                      , Build(Anno(Str(""), Op("Nil", [])))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str(""), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("test-string-tokenize-keep-all-3"), Op("Nil", [])))
                      , Scope(
                          ["o_0", "p_0"]
                        , Seq(
                            Match(Var("p_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("10"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                Match(Var("o_0"))
                              , Seq(
                                  Build(Var("p_0"))
                                , CallT(SVar("string_tokenize_keep_all_0_1"), [], [Var("o_0")])
                                )
                              )
                            )
                          )
                        )
                      , Build(Anno(Str("\n\n"), Op("Nil", [])))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str(""), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("\n"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str(""), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Str("\n"), Op("Nil", []))
                                                , Anno(
                                                    Op(
                                                      "Cons"
                                                    , [ Anno(Str(""), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  , Op("Nil", [])
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["y_77", "z_77"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("y_77"), Var("z_77")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("y_77"), Var("z_77")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["x_77"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("x_77"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("x_77"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "concat_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "w_122"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , Scope(
                    ["g_40", "h_40", "y_153", "z_153", "x_153"]
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("g_40"), Var("h_40")])
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("x_153"))
                      , Seq(
                          Match(Var("z_153"))
                        , Seq(
                            Build(Var("g_40"))
                          , Seq(
                              CallT(
                                SVar("at_end_1_0")
                              , [Seq(
                                   Build(Var("h_40"))
                                 , CallT(SVar("w_122"), [], [])
                                 )]
                              , []
                              )
                            , Match(Var("y_153"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("w_122"), [], [])
          )
        )
      , SDefT(
          "at_end_1_0"
        , [ VarDec(
              "z_122"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "a_123"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("a_123"), [], [])]
                  , []
                  )
                , Id
                , Seq(
                    CallT(SVar("Nil_0_0"), [], [])
                  , CallT(SVar("z_122"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("a_123"), [], [])
          )
        )
      , SDefT(
          "conc_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["d_40", "e_40", "s_153", "t_153", "r_153"]
            , Seq(
                Match(
                  Anno(
                    Op("", [Var("d_40"), Var("e_40")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("r_153"))
                , Seq(
                    Match(Var("t_153"))
                  , Seq(
                      Build(Var("d_40"))
                    , Seq(
                        CallT(SVar("at_end_1_0"), [Build(Var("e_40"))], [])
                      , Match(Var("s_153"))
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["f_40", "v_153", "w_153", "u_153"]
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("f_40"))
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("u_153"))
                , Seq(
                    Match(Var("w_153"))
                  , Seq(
                      Build(Var("f_40"))
                    , Seq(
                        CallT(SVar("concat_0_0"), [], [])
                      , Match(Var("v_153"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "separate_by_0_1"
        , []
        , [VarDec("c_40", ConstType(Sort("ATerm", [])))]
        , GuardedLChoice(
            CallT(SVar("Nil_0_0"), [], [])
          , Id
          , CallT(
              SVar("Cons_2_0")
            , [ Id
              , Let(
                  [ SDefT(
                      "v_122"
                    , []
                    , []
                    , GuardedLChoice(
                        CallT(SVar("Nil_0_0"), [], [])
                      , Id
                      , Scope(
                          ["p_153", "q_153"]
                        , Seq(
                            CallT(
                              SVar("Cons_2_0")
                            , [Id, CallT(SVar("v_122"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("q_153"))
                            , Seq(
                                Match(Var("p_153"))
                              , Build(
                                  Anno(
                                    Op("Cons", [Var("c_40"), Var("p_153")])
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                , CallT(SVar("v_122"), [], [])
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "separate_by_0_0"
        , []
        , []
        , Scope(
            ["b_40", "k_153"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("b_40"), Var("k_153")])
                , Wld
                )
              )
            , Seq(
                Build(Var("k_153"))
              , CallT(SVar("separate_by_0_1"), [], [Var("b_40")])
              )
            )
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "z_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "a_124"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("z_123"), [], [])
                    , CallT(SVar("a_124"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("a_124"), [], [])
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "f_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "g_123"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  , CallT(SVar("f_123"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("g_123"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("g_123"), [], [])
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "h_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "i_124"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("h_124"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("i_124"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("i_124"), [], [])
          )
        )
      , SDefT(
          "elem_0_0"
        , []
        , []
        , Scope(
            ["a_41", "u_154"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("a_41"), Var("u_154")])
                , Wld
                )
              )
            , Seq(
                Build(Var("u_154"))
              , CallT(SVar("fetch_1_0"), [Match(Var("a_41"))], [])
              )
            )
          )
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "v_111"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_111"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["k_1", "i_1", "j_1", "l_1", "m_1"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("i_1"), Var("j_1")])
                , Var("k_1")
                )
              )
            , Seq(
                Build(Var("i_1"))
              , Seq(
                  CallT(SVar("v_111"), [], [])
                , Seq(
                    Match(Var("l_1"))
                  , Seq(
                      Build(Var("j_1"))
                    , Seq(
                        CallT(SVar("w_111"), [], [])
                      , Seq(
                          Match(Var("m_1"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("l_1"), Var("m_1")])
                            , Var("k_1")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "b_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "c_123"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("b_123"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("c_123"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("c_123"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "k_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_41", "y_154", "z_154"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("k_124"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Id, Match(Var("d_41"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("z_154"))
              , Seq(
                  Match(Var("y_154"))
                , Build(
                    Anno(
                      Op("", [Var("y_154"), Var("d_41")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["e_78"]
          , Seq(
              Match(Var("e_78"))
            , PrimT("SSL_explode_string", [], [Var("e_78")])
            )
          )
        )
      , SDefT(
          "string_tokenize_keep_empty_0_1"
        , []
        , [VarDec("u_72", ConstType(Sort("ATerm", [])))]
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "f_133"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["v_72", "w_72", "o_181", "p_181", "n_181"]
                      , Seq(
                          CallT(
                            SVar("split_fetch_1_0")
                          , [ Scope(
                                ["l_181", "m_181"]
                              , Seq(
                                  Match(Var("m_181"))
                                , Seq(
                                    Match(Var("l_181"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("l_181"), Var("u_72")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , CallT(SVar("elem_0_0"), [], [])
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Match(
                              Anno(
                                Op("", [Var("v_72"), Var("w_72")])
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("n_181"))
                            , Seq(
                                Match(Var("p_181"))
                              , Seq(
                                  Build(Var("w_72"))
                                , Seq(
                                    CallT(SVar("f_133"), [], [])
                                  , Seq(
                                      Match(Var("o_181"))
                                    , Build(
                                        Anno(
                                          Op("Cons", [Var("v_72"), Var("o_181")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , Scope(
                        ["q_181", "r_181"]
                      , Seq(
                          Match(Var("r_181"))
                        , Seq(
                            Match(Var("q_181"))
                          , Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [Var("q_181"), Anno(Op("Nil", []), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("f_133"), [], [])
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "is_string_0_0"
        , []
        , []
        , Scope(
            ["c_78"]
          , Seq(
              Match(Var("c_78"))
            , PrimT("SSL_is_string", [], [Var("c_78")])
            )
          )
        )
      , SDefT(
          "all_lines_1_0"
        , [ VarDec(
              "h_133"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["c_73", "g_182", "h_182", "e_182", "f_182"]
          , Seq(
              CallT(SVar("is_string_0_0"), [], [])
            , Seq(
                Scope(
                  ["b_182", "c_182"]
                , Seq(
                    Match(Var("c_182"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Int("10"), Op("Nil", []))
                            , Anno(Op("Nil", []), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        Match(Var("b_182"))
                      , Seq(
                          Build(Var("c_182"))
                        , CallT(SVar("string_tokenize_keep_empty_0_1"), [], [Var("b_182")])
                        )
                      )
                    )
                  )
                )
              , Seq(
                  CallT(
                    SVar("at_last_1_0")
                  , [ GuardedLChoice(
                        Scope(
                          ["d_182"]
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  "Cons"
                                , [Anno(Str(""), Wld), Anno(Op("Nil", []), Wld)]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("d_182"))
                            , Build(Anno(Op("Nil", []), Op("Nil", [])))
                            )
                          )
                        )
                      , Scope(
                          ["d_73"]
                        , Seq(
                            Match(Var("d_73"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("\n"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(Match(Var("c_73")), Build(Var("d_73")))
                            )
                          )
                        )
                      , Scope(
                          ["e_73"]
                        , Seq(
                            Match(Var("e_73"))
                          , Seq(
                              Build(Anno(Op("Nil", []), Op("Nil", [])))
                            , Seq(Match(Var("c_73")), Build(Var("e_73")))
                            )
                          )
                        )
                      )
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("map_1_0")
                    , [CallT(SVar("h_133"), [], [])]
                    , []
                    )
                  , Seq(
                      Seq(
                        Match(Var("f_182"))
                      , Seq(
                          Match(Var("e_182"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Str("\n"), Op("Nil", [])), Var("e_182")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , CallT(SVar("separate_by_0_0"), [], [])
                          )
                        )
                      )
                    , Seq(
                        Match(Var("h_182"))
                      , Seq(
                          Match(Var("g_182"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("g_182"), Var("c_73")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("conc_0_0"), [], [])
                            , CallT(SVar("concat_strings_0_0"), [], [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "print_failure_0_1"
        , []
        , [VarDec("g_21", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("debug_1_0")
          , [Seq(
               Build(Var("g_21"))
             , CallT(SVar("sunit_failure_string_0_0"), [], [])
             )]
          , []
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "y_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("y_112"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["a_78"]
          , Seq(
              Match(Var("a_78"))
            , PrimT("SSL_concat_strings", [], [Var("a_78")])
            )
          )
        )
      , SDefT(
          "sunit_color_plain_0_0"
        , []
        , []
        , Scope(
            ["a_1", "b_1"]
          , Seq(
              Match(Var("b_1"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("a_1"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("a_1"), Anno(Str("[m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["d_78"]
          , Seq(
              Match(Var("d_78"))
            , PrimT("SSL_implode_string", [], [Var("d_78")])
            )
          )
        )
      , SDefT(
          "sunit_color_red_0_0"
        , []
        , []
        , Scope(
            ["y_0", "z_0"]
          , Seq(
              Match(Var("z_0"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("y_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("y_0"), Anno(Str("[01;31m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "getenv_0_0"
        , []
        , []
        , Scope(
            ["w_78"]
          , Seq(
              Match(Var("w_78"))
            , PrimT("SSL_getenv", [], [Var("w_78")])
            )
          )
        )
      , SDefT(
          "sunit_failure_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["f_21"]
            , Seq(
                Match(Var("f_21"))
              , Seq(
                  Build(Anno(Str("ENABLE_COLORS"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("getenv_0_0"), [], [])
                  , Seq(
                      Match(Anno(Str("true"), Wld))
                    , Build(Var("f_21"))
                    )
                  )
                )
              )
            )
          , Scope(
              ["s_0", "t_0", "u_0", "x_0", "w_0"]
            , Seq(
                Scope(
                  ["v_0"]
                , Seq(
                    Match(Var("v_0"))
                  , Seq(
                      CallT(SVar("sunit_color_red_0_0"), [], [])
                    , Seq(Match(Var("s_0")), Build(Var("v_0")))
                    )
                  )
                )
              , Seq(
                  Seq(
                    Seq(
                      Match(Var("w_0"))
                    , Seq(Match(Var("t_0")), Build(Var("w_0")))
                    )
                  , Seq(
                      Match(Var("x_0"))
                    , Seq(
                        CallT(SVar("sunit_color_plain_0_0"), [], [])
                      , Seq(
                          Match(Var("u_0"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Var("s_0")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("t_0")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("u_0"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "print_failure_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("sunit_failure_string_0_0"), [], [])
          , CallT(SVar("debug_0_0"), [], [])
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "i_136"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_82"]
          , Seq(
              Match(Var("h_82"))
            , Seq(
                CallT(SVar("i_136"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("h_82"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "x_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("x_112"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["z_43", "a_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_43"), Var("a_44")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("z_43"), Var("a_44")])
              , Id
              , PrimT("SSL_addr", [], [Var("z_43"), Var("a_44")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["z_158", "a_159"]
          , Seq(
              Match(Var("a_159"))
            , Seq(
                Match(Var("z_158"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("z_158"), Anno(Int("1"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("add_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["l_82", "d_192", "e_192"]
          , Seq(
              Match(Var("l_82"))
            , Seq(
                Match(Var("e_192"))
              , Seq(
                  Match(Var("d_192"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Op("stderr", []), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [Var("d_192"), Anno(Op("Nil", []), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("printnl_0_0"), [], [])
                    , Build(Var("l_82"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "z_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_21"]
          , Seq(
              Match(Var("h_21"))
            , Seq(
                CallT(SVar("z_112"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("h_21"))
                  , GuardedLChoice(
                      Scope(
                        ["i_21"]
                      , Seq(
                          Match(Var("i_21"))
                        , Seq(
                            CallT(SVar("a_113"), [], [])
                          , Seq(
                              Build(Var("i_21"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "m_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "n_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["b_22", "c_22"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("m_113"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("o_113"), [], [])]
                      , []
                      )
                    , CallT(SVar("n_113"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("b_22"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("p_113"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("c_22"))
                      , GuardedLChoice(
                          Seq(Build(Var("c_22")), Match(Var("b_22")))
                        , Id
                        , Scope(
                            ["e_1", "f_1", "c_1", "d_1"]
                          , Seq(
                              Build(Var("b_22"))
                            , Seq(
                                Match(Var("d_1"))
                              , Seq(
                                  Build(Anno(Str("  result not equal : "), Op("Nil", [])))
                                , Seq(
                                    Match(Var("c_1"))
                                  , Seq(
                                      Build(Var("d_1"))
                                    , Seq(
                                        CallT(SVar("print_failure_0_1"), [], [Var("c_1")])
                                      , Seq(
                                          Build(Var("c_22"))
                                        , Seq(
                                            Match(Var("f_1"))
                                          , Seq(
                                              Build(Anno(Str("  expected         : "), Op("Nil", [])))
                                            , Seq(
                                                Match(Var("e_1"))
                                              , Seq(
                                                  Build(Var("f_1"))
                                                , Seq(
                                                    CallT(SVar("print_failure_0_1"), [], [Var("e_1")])
                                                  , Fail
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "test_all_lines_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test-all-lines-1"), Op("Nil", [])))
              , CallT(
                  SVar("all_lines_1_0")
                , [ Scope(
                      ["a_0", "b_0"]
                    , Seq(
                        Match(Var("b_0"))
                      , Seq(
                          Match(Var("a_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("a_0"), Anno(Str("EOL"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , CallT(SVar("conc_strings_0_0"), [], [])
                          )
                        )
                      )
                    )
                  ]
                , []
                )
              , Build(Anno(Str("the first line\nSecond line, third will be empty\n\nThis is the fourth, a final empty should not follow\n"), Op("Nil", [])))
              , Build(Anno(Str("the first lineEOL\nSecond line, third will be emptyEOL\nEOL\nThis is the fourth, a final empty should not followEOL\n"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test-all-lines-2"), Op("Nil", [])))
              , CallT(
                  SVar("all_lines_1_0")
                , [ Scope(
                      ["c_0", "d_0"]
                    , Seq(
                        Match(Var("d_0"))
                      , Seq(
                          Match(Var("c_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("c_0"), Anno(Str("EOL"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , CallT(SVar("conc_strings_0_0"), [], [])
                          )
                        )
                      )
                    )
                  ]
                , []
                )
              , Build(Anno(Str("\nAfter first empty line: Second line, third will be empty\n\nThis is the fourth, a final empty should not follow"), Op("Nil", [])))
              , Build(Anno(Str("EOL\nAfter first empty line: Second line, third will be emptyEOL\nEOL\nThis is the fourth, a final empty should not followEOL"), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "a_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["s_1", "p_1", "q_1", "t_1", "v_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("p_1"), Var("q_1")])
                , Var("s_1")
                )
              )
            , Seq(
                Build(Var("p_1"))
              , Seq(
                  CallT(SVar("a_105"), [], [])
                , Seq(
                    Match(Var("t_1"))
                  , Seq(
                      Build(Var("q_1"))
                    , Seq(
                        CallT(SVar("b_105"), [], [])
                      , Seq(
                          Match(Var("v_1"))
                        , Build(
                            Anno(
                              Op("", [Var("t_1"), Var("v_1")])
                            , Var("s_1")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["t_82", "u_82", "v_82"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("t_82"), Var("u_82")])
                , Wld
                )
              )
            , Seq(
                Match(Var("v_82"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("t_82"), Var("u_82")])
                , Build(Var("v_82"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "r_136"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["m_82", "f_192", "g_192", "i_192", "h_192"]
          , Seq(
              Match(Var("m_82"))
            , Seq(
                Seq(
                  Match(Var("h_192"))
                , Seq(
                    CallT(SVar("r_136"), [], [])
                  , Seq(Match(Var("f_192")), Build(Var("h_192")))
                  )
                )
              , Seq(
                  Match(Var("i_192"))
                , Seq(
                    Match(Var("g_192"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Var("f_192")
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("g_192"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("m_82"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "k_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("k_113"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("l_113"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("String Misc test suite"), Op("Nil", [])))
            , Seq(
                CallT(SVar("test_all_lines_0_0"), [], [])
              , Seq(
                  CallT(SVar("test_string_tokenize_0_0"), [], [])
                , Seq(
                    CallT(SVar("test_indent_text_0_0"), [], [])
                  , Seq(
                      CallT(SVar("test_trim_trailing_0_0"), [], [])
                    , Seq(
                        CallT(SVar("test_get_all_lines_0_0"), [], [])
                      , Seq(
                          CallT(SVar("test_shuffle_1_0_0"), [], [])
                        , Seq(
                            CallT(SVar("test_shuffle_word_mids_1_0_0"), [], [])
                          , CallT(SVar("test_shuffle_word_mids_2_0_0"), [], [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
