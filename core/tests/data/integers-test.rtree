Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "bin_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["h_124", "e_0"]
          , Seq(
              Match(Var("e_0"))
            , Seq(
                Match(Var("h_124"))
              , Seq(
                  Build(Var("e_0"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("h_124"), Anno(Int("2"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("generic_string_to_int_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "bin_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("bin-string-test-0a"), Op("Nil", [])))
              , CallT(SVar("bin_string_to_int_0_0"), [], [])
              , Build(Anno(Str("0"), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("bin-string-test-0b"), Op("Nil", [])))
                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                , Build(Anno(Str("00"), Op("Nil", [])))
                , Build(Anno(Int("0"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("bin-string-test-0c"), Op("Nil", [])))
                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                  , Build(Anno(Str("000"), Op("Nil", [])))
                  , Build(Anno(Int("0"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("bin-string-test-0d"), Op("Nil", [])))
                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                    , Build(Anno(Str("0000"), Op("Nil", [])))
                    , Build(Anno(Int("0"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("bin-string-test-0e"), Op("Nil", [])))
                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                      , Build(Anno(Str("00000"), Op("Nil", [])))
                      , Build(Anno(Int("0"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("bin-string-test-0f"), Op("Nil", [])))
                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                        , Build(Anno(Str("00000000000000"), Op("Nil", [])))
                        , Build(Anno(Int("0"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("bin-string-test-1a"), Op("Nil", [])))
                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                          , Build(Anno(Str("1"), Op("Nil", [])))
                          , Build(Anno(Int("1"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("bin-string-test-1b"), Op("Nil", [])))
                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                            , Build(Anno(Str("01"), Op("Nil", [])))
                            , Build(Anno(Int("1"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("bin-string-test-1c"), Op("Nil", [])))
                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                              , Build(Anno(Str("001"), Op("Nil", [])))
                              , Build(Anno(Int("1"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("bin-string-test-1d"), Op("Nil", [])))
                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                , Build(Anno(Str("0001"), Op("Nil", [])))
                                , Build(Anno(Int("1"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("bin-string-test-1e"), Op("Nil", [])))
                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("00001"), Op("Nil", [])))
                                  , Build(Anno(Int("1"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ Build(Anno(Str("bin-string-test-1f"), Op("Nil", [])))
                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                    , Build(Anno(Str("0000000000000001"), Op("Nil", [])))
                                    , Build(Anno(Int("1"), Op("Nil", [])))
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ Build(Anno(Str("bin-string-test-2a"), Op("Nil", [])))
                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                      , Build(Anno(Str("11"), Op("Nil", [])))
                                      , Build(Anno(Int("3"), Op("Nil", [])))
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ Build(Anno(Str("bin-string-test-2b"), Op("Nil", [])))
                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                        , Build(Anno(Str("111"), Op("Nil", [])))
                                        , Build(Anno(Int("7"), Op("Nil", [])))
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ Build(Anno(Str("bin-string-test-2c"), Op("Nil", [])))
                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                          , Build(Anno(Str("1111"), Op("Nil", [])))
                                          , Build(Anno(Int("15"), Op("Nil", [])))
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ Build(Anno(Str("bin-string-test-2d"), Op("Nil", [])))
                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                            , Build(Anno(Str("11111"), Op("Nil", [])))
                                            , Build(Anno(Int("31"), Op("Nil", [])))
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("bin-string-test-2e"), Op("Nil", [])))
                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                              , Build(Anno(Str("111111"), Op("Nil", [])))
                                              , Build(Anno(Int("63"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          , Seq(
                                              CallT(
                                                SVar("apply_test_4_0")
                                              , [ Build(Anno(Str("bin-string-test-2f"), Op("Nil", [])))
                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                , Build(Anno(Str("1111111"), Op("Nil", [])))
                                                , Build(Anno(Int("127"), Op("Nil", [])))
                                                ]
                                              , []
                                              )
                                            , Seq(
                                                CallT(
                                                  SVar("apply_test_4_0")
                                                , [ Build(Anno(Str("bin-string-test-2g"), Op("Nil", [])))
                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                  , Build(Anno(Str("11111111"), Op("Nil", [])))
                                                  , Build(Anno(Int("255"), Op("Nil", [])))
                                                  ]
                                                , []
                                                )
                                              , Seq(
                                                  CallT(
                                                    SVar("apply_test_4_0")
                                                  , [ Build(Anno(Str("bin-string-test-2h"), Op("Nil", [])))
                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                    , Build(Anno(Str("111111111"), Op("Nil", [])))
                                                    , Build(Anno(Int("511"), Op("Nil", [])))
                                                    ]
                                                  , []
                                                  )
                                                , Seq(
                                                    CallT(
                                                      SVar("apply_test_4_0")
                                                    , [ Build(Anno(Str("bin-string-test-2i"), Op("Nil", [])))
                                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                      , Build(Anno(Str("1111111111"), Op("Nil", [])))
                                                      , Build(Anno(Int("1023"), Op("Nil", [])))
                                                      ]
                                                    , []
                                                    )
                                                  , Seq(
                                                      CallT(
                                                        SVar("apply_test_4_0")
                                                      , [ Build(Anno(Str("bin-string-test-2j"), Op("Nil", [])))
                                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                        , Build(Anno(Str("11111111111"), Op("Nil", [])))
                                                        , Build(Anno(Int("2047"), Op("Nil", [])))
                                                        ]
                                                      , []
                                                      )
                                                    , Seq(
                                                        CallT(
                                                          SVar("apply_test_4_0")
                                                        , [ Build(Anno(Str("bin-string-test-2k"), Op("Nil", [])))
                                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                          , Build(Anno(Str("10"), Op("Nil", [])))
                                                          , Build(Anno(Int("2"), Op("Nil", [])))
                                                          ]
                                                        , []
                                                        )
                                                      , Seq(
                                                          CallT(
                                                            SVar("apply_test_4_0")
                                                          , [ Build(Anno(Str("bin-string-test-2l"), Op("Nil", [])))
                                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                            , Build(Anno(Str("100"), Op("Nil", [])))
                                                            , Build(Anno(Int("4"), Op("Nil", [])))
                                                            ]
                                                          , []
                                                          )
                                                        , Seq(
                                                            CallT(
                                                              SVar("apply_test_4_0")
                                                            , [ Build(Anno(Str("bin-string-test-2m"), Op("Nil", [])))
                                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                              , Build(Anno(Str("1000"), Op("Nil", [])))
                                                              , Build(Anno(Int("8"), Op("Nil", [])))
                                                              ]
                                                            , []
                                                            )
                                                          , Seq(
                                                              CallT(
                                                                SVar("apply_test_4_0")
                                                              , [ Build(Anno(Str("bin-string-test-2n"), Op("Nil", [])))
                                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                , Build(Anno(Str("10000"), Op("Nil", [])))
                                                                , Build(Anno(Int("16"), Op("Nil", [])))
                                                                ]
                                                              , []
                                                              )
                                                            , Seq(
                                                                CallT(
                                                                  SVar("apply_test_4_0")
                                                                , [ Build(Anno(Str("bin-string-test-2o"), Op("Nil", [])))
                                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                  , Build(Anno(Str("100000"), Op("Nil", [])))
                                                                  , Build(Anno(Int("32"), Op("Nil", [])))
                                                                  ]
                                                                , []
                                                                )
                                                              , Seq(
                                                                  CallT(
                                                                    SVar("apply_test_4_0")
                                                                  , [ Build(Anno(Str("bin-string-test-2p"), Op("Nil", [])))
                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                    , Build(Anno(Str("1000000"), Op("Nil", [])))
                                                                    , Build(Anno(Int("64"), Op("Nil", [])))
                                                                    ]
                                                                  , []
                                                                  )
                                                                , Seq(
                                                                    CallT(
                                                                      SVar("apply_test_4_0")
                                                                    , [ Build(Anno(Str("bin-string-test-2q"), Op("Nil", [])))
                                                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                      , Build(Anno(Str("10000000"), Op("Nil", [])))
                                                                      , Build(Anno(Int("128"), Op("Nil", [])))
                                                                      ]
                                                                    , []
                                                                    )
                                                                  , Seq(
                                                                      CallT(
                                                                        SVar("apply_test_4_0")
                                                                      , [ Build(Anno(Str("bin-string-test-2r"), Op("Nil", [])))
                                                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                        , Build(Anno(Str("100000000"), Op("Nil", [])))
                                                                        , Build(Anno(Int("256"), Op("Nil", [])))
                                                                        ]
                                                                      , []
                                                                      )
                                                                    , Seq(
                                                                        CallT(
                                                                          SVar("apply_test_4_0")
                                                                        , [ Build(Anno(Str("bin-string-test-2s"), Op("Nil", [])))
                                                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                          , Build(Anno(Str("1000000000"), Op("Nil", [])))
                                                                          , Build(Anno(Int("512"), Op("Nil", [])))
                                                                          ]
                                                                        , []
                                                                        )
                                                                      , Seq(
                                                                          CallT(
                                                                            SVar("apply_test_4_0")
                                                                          , [ Build(Anno(Str("bin-string-test-2t"), Op("Nil", [])))
                                                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                            , Build(Anno(Str("10000000000"), Op("Nil", [])))
                                                                            , Build(Anno(Int("1024"), Op("Nil", [])))
                                                                            ]
                                                                          , []
                                                                          )
                                                                        , Seq(
                                                                            CallT(
                                                                              SVar("apply_test_4_0")
                                                                            , [ Build(Anno(Str("bin-string-test-2u"), Op("Nil", [])))
                                                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                              , Build(Anno(Str("100000000000"), Op("Nil", [])))
                                                                              , Build(Anno(Int("2048"), Op("Nil", [])))
                                                                              ]
                                                                            , []
                                                                            )
                                                                          , Seq(
                                                                              CallT(
                                                                                SVar("apply_test_4_0")
                                                                              , [ Build(Anno(Str("bin-string-test-a"), Op("Nil", [])))
                                                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                , Build(Anno(Str("1010"), Op("Nil", [])))
                                                                                , Build(Anno(Int("10"), Op("Nil", [])))
                                                                                ]
                                                                              , []
                                                                              )
                                                                            , Seq(
                                                                                CallT(
                                                                                  SVar("apply_test_4_0")
                                                                                , [ Build(Anno(Str("bin-string-test-c"), Op("Nil", [])))
                                                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                  , Build(Anno(Str("10110000"), Op("Nil", [])))
                                                                                  , Build(Anno(Int("176"), Op("Nil", [])))
                                                                                  ]
                                                                                , []
                                                                                )
                                                                              , Seq(
                                                                                  CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ Build(Anno(Str("bin-string-test-b"), Op("Nil", [])))
                                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                    , Build(Anno(Str("111100011"), Op("Nil", [])))
                                                                                    , Build(Anno(Int("483"), Op("Nil", [])))
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                , CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ Build(Anno(Str("bin-string-test-d"), Op("Nil", [])))
                                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                    , Build(Anno(Str("101010101"), Op("Nil", [])))
                                                                                    , Build(Anno(Int("341"), Op("Nil", [])))
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "hex_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["e_124", "f_0"]
          , Seq(
              Match(Var("f_0"))
            , Seq(
                Match(Var("e_124"))
              , Seq(
                  Build(Var("f_0"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("e_124"), Anno(Int("16"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("generic_string_to_int_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "hex_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("hex-string-test-a"), Op("Nil", [])))
              , CallT(SVar("hex_string_to_int_0_0"), [], [])
              , Build(Anno(Str("0"), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("hex-string-test-b"), Op("Nil", [])))
                , CallT(SVar("hex_string_to_int_0_0"), [], [])
                , Build(Anno(Str("1"), Op("Nil", [])))
                , Build(Anno(Int("1"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("hex-string-test-c"), Op("Nil", [])))
                  , CallT(SVar("hex_string_to_int_0_0"), [], [])
                  , Build(Anno(Str("2"), Op("Nil", [])))
                  , Build(Anno(Int("2"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("hex-string-test-d"), Op("Nil", [])))
                    , CallT(SVar("hex_string_to_int_0_0"), [], [])
                    , Build(Anno(Str("3"), Op("Nil", [])))
                    , Build(Anno(Int("3"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("hex-string-test-e"), Op("Nil", [])))
                      , CallT(SVar("hex_string_to_int_0_0"), [], [])
                      , Build(Anno(Str("4"), Op("Nil", [])))
                      , Build(Anno(Int("4"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("hex-string-test-f"), Op("Nil", [])))
                        , CallT(SVar("hex_string_to_int_0_0"), [], [])
                        , Build(Anno(Str("5"), Op("Nil", [])))
                        , Build(Anno(Int("5"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("hex-string-test-g"), Op("Nil", [])))
                          , CallT(SVar("hex_string_to_int_0_0"), [], [])
                          , Build(Anno(Str("6"), Op("Nil", [])))
                          , Build(Anno(Int("6"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("hex-string-test-h"), Op("Nil", [])))
                            , CallT(SVar("hex_string_to_int_0_0"), [], [])
                            , Build(Anno(Str("7"), Op("Nil", [])))
                            , Build(Anno(Int("7"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("hex-string-test-i"), Op("Nil", [])))
                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                              , Build(Anno(Str("8"), Op("Nil", [])))
                              , Build(Anno(Int("8"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("hex-string-test-j"), Op("Nil", [])))
                                , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                , Build(Anno(Str("9"), Op("Nil", [])))
                                , Build(Anno(Int("9"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("hex-string-test-k"), Op("Nil", [])))
                                  , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("A"), Op("Nil", [])))
                                  , Build(Anno(Int("10"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ Build(Anno(Str("hex-string-test-l"), Op("Nil", [])))
                                    , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                    , Build(Anno(Str("B"), Op("Nil", [])))
                                    , Build(Anno(Int("11"), Op("Nil", [])))
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ Build(Anno(Str("hex-string-test-m"), Op("Nil", [])))
                                      , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                      , Build(Anno(Str("C"), Op("Nil", [])))
                                      , Build(Anno(Int("12"), Op("Nil", [])))
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ Build(Anno(Str("hex-string-test-n"), Op("Nil", [])))
                                        , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                        , Build(Anno(Str("D"), Op("Nil", [])))
                                        , Build(Anno(Int("13"), Op("Nil", [])))
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ Build(Anno(Str("hex-string-test-o"), Op("Nil", [])))
                                          , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                          , Build(Anno(Str("E"), Op("Nil", [])))
                                          , Build(Anno(Int("14"), Op("Nil", [])))
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ Build(Anno(Str("hex-string-test-p"), Op("Nil", [])))
                                            , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                            , Build(Anno(Str("F"), Op("Nil", [])))
                                            , Build(Anno(Int("15"), Op("Nil", [])))
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("hex-string-test-q"), Op("Nil", [])))
                                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                              , Build(Anno(Str("FF"), Op("Nil", [])))
                                              , Build(Anno(Int("255"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          , CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("hex-string-test-r"), Op("Nil", [])))
                                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                              , Build(Anno(Str("FFFF"), Op("Nil", [])))
                                              , Build(Anno(Int("65535"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["l_20", "m_20", "n_20"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("l_20")
                        , Anno(
                            Op("Cons", [Var("n_20"), Var("m_20")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("n_20"))
            )
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["c_28", "d_28"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("c_28"), Var("d_28")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("c_28"), Var("d_28")])
              , Id
              , PrimT("SSL_subtr", [], [Var("c_28"), Var("d_28")])
              )
            )
          )
        )
      , SDefT(
          "is_num_0_0"
        , []
        , []
        , Scope(
            ["h_0", "u_133", "g_0"]
          , Seq(
              Match(Var("h_0"))
            , Seq(
                Seq(
                  Match(Var("g_0"))
                , Seq(
                    Match(Var("u_133"))
                  , Seq(
                      Build(Var("g_0"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("48"), Op("Nil", []))
                              , Var("u_133")
                              , Anno(Int("57"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("h_0"))
              )
            )
          )
        )
      , SDefT(
          "char_to_digit_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["n_26", "w_124", "k_0", "x_124", "j_0"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [Var("n_26"), Anno(Int("16"), Wld)]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Scope(
                    ["i_0"]
                  , Seq(
                      Match(Var("i_0"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("65"), Op("Nil", []))
                              , Var("n_26")
                              , Anno(Int("70"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("leq_leq_0_0"), [], [])
                        , Build(Var("i_0"))
                        )
                      )
                    )
                  )
                , Seq(
                    Match(Var("k_0"))
                  , Seq(
                      Seq(
                        Seq(
                          Match(Var("j_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("n_26"), Anno(Int("65"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("subt_0_0"), [], [])
                            , Seq(
                                Match(Var("x_124"))
                              , Seq(
                                  Build(Var("j_0"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op(
                                          ""
                                        , [Anno(Int("10"), Op("Nil", [])), Var("x_124")]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  , Seq(
                                      CallT(SVar("add_0_0"), [], [])
                                    , Match(Var("w_124"))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , Build(Var("k_0"))
                      )
                    , Build(Var("w_124"))
                    )
                  )
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["m_26", "u_124", "n_0", "v_124", "m_0"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("m_26"), Anno(Int("16"), Wld)]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Scope(
                      ["l_0"]
                    , Seq(
                        Match(Var("l_0"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Int("97"), Op("Nil", []))
                                , Var("m_26")
                                , Anno(Int("102"), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("leq_leq_0_0"), [], [])
                          , Build(Var("l_0"))
                          )
                        )
                      )
                    )
                  , Seq(
                      Match(Var("n_0"))
                    , Seq(
                        Seq(
                          Seq(
                            Match(Var("m_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Var("m_26"), Anno(Int("97"), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("subt_0_0"), [], [])
                              , Seq(
                                  Match(Var("v_124"))
                                , Seq(
                                    Build(Var("m_0"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op(
                                            ""
                                          , [Anno(Int("10"), Op("Nil", [])), Var("v_124")]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("add_0_0"), [], [])
                                      , Match(Var("u_124"))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , Build(Var("n_0"))
                        )
                      , Build(Var("u_124"))
                      )
                    )
                  )
                )
              )
            , Id
            , Scope(
                ["j_26", "k_26", "l_26", "o_0"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("j_26"), Var("l_26")])
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("o_0"))
                  , Seq(
                      Build(Var("j_26"))
                    , Seq(
                        CallT(SVar("is_num_0_0"), [], [])
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [Var("j_26"), Anno(Int("48"), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("subt_0_0"), [], [])
                          , Seq(
                              Match(Var("k_26"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("k_26"), Var("l_26")])
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("lt_0_0"), [], [])
                                , Seq(Build(Var("o_0")), Build(Var("k_26")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "FoldL_1_0"
        , [ VarDec(
              "m_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["g_24", "h_24", "i_24", "d_123", "p_0"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("h_24"), Var("g_24")])
                      , Wld
                      )
                    , Var("i_24")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("p_0"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("h_24"), Var("i_24")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("m_95"), [], [])
                  , Seq(
                      Match(Var("d_123"))
                    , Seq(
                        Build(Var("p_0"))
                      , Build(
                          Anno(
                            Op("", [Var("g_24"), Var("d_123")])
                          , Op("Nil", [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "foldl_1_0"
        , [ VarDec(
              "r_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "s_94"
              , []
              , []
              , GuardedLChoice(
                  Scope(
                    ["s_22"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [Anno(Op("Nil", []), Wld), Var("s_22")]
                          )
                        , Wld
                        )
                      )
                    , Build(Var("s_22"))
                    )
                  )
                , Id
                , Seq(
                    CallT(
                      SVar("FoldL_1_0")
                    , [CallT(SVar("r_94"), [], [])]
                    , []
                    )
                  , CallT(SVar("s_94"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("s_94"), [], [])
          )
        )
      , SDefT(
          "pos_chars_to_int_0_0"
        , []
        , []
        , Scope(
            ["g_26", "h_26", "i_26", "p_124", "q_0"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("h_26"), Var("g_26")])
                      , Wld
                      )
                    , Var("i_26")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("q_0"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("h_26"), Var("i_26")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("char_to_digit_0_0"), [], [])
                  , Seq(
                      Match(Var("p_124"))
                    , Seq(
                        Build(Var("q_0"))
                      , Seq(
                          Build(
                            Anno(
                              Op("", [Var("g_26"), Var("p_124")])
                            , Op("Nil", [])
                            )
                          )
                        , CallT(
                            SVar("foldl_1_0")
                          , [ Scope(
                                ["q_124", "r_124", "u_0", "t_124", "t_0", "s_0", "s_124", "r_0"]
                              , Seq(
                                  Match(Var("s_0"))
                                , Seq(
                                    Match(Var("r_0"))
                                  , Seq(
                                      CallT(SVar("Fst_0_0"), [], [])
                                    , Seq(
                                        Match(Var("s_124"))
                                      , Seq(
                                          Build(Var("r_0"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op("", [Var("s_124"), Var("i_26")])
                                              , Op("Nil", [])
                                              )
                                            )
                                          , Seq(
                                              CallT(SVar("char_to_digit_0_0"), [], [])
                                            , Seq(
                                                Match(Var("q_124"))
                                              , Seq(
                                                  Build(Var("s_0"))
                                                , Seq(
                                                    Match(Var("u_0"))
                                                  , Seq(
                                                      Match(Var("t_0"))
                                                    , Seq(
                                                        CallT(SVar("Snd_0_0"), [], [])
                                                      , Seq(
                                                          Match(Var("t_124"))
                                                        , Seq(
                                                            Build(Var("t_0"))
                                                          , Seq(
                                                              Build(
                                                                Anno(
                                                                  Op("", [Var("t_124"), Var("i_26")])
                                                                , Op("Nil", [])
                                                                )
                                                              )
                                                            , Seq(
                                                                CallT(SVar("mul_0_0"), [], [])
                                                              , Seq(
                                                                  Match(Var("r_124"))
                                                                , Seq(
                                                                    Build(Var("u_0"))
                                                                  , Seq(
                                                                      Build(
                                                                        Anno(
                                                                          Op("", [Var("q_124"), Var("r_124")])
                                                                        , Op("Nil", [])
                                                                        )
                                                                      )
                                                                    , CallT(SVar("add_0_0"), [], [])
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "mul_0_0"
        , []
        , []
        , Scope(
            ["i_28", "j_28"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("i_28"), Var("j_28")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_muli", [], [Var("i_28"), Var("j_28")])
              , Id
              , PrimT("SSL_mulr", [], [Var("i_28"), Var("j_28")])
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "foldr_3_0"
        , [ VarDec(
              "o_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_94"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("Nil_0_0"), [], [])
            , CallT(SVar("o_94"), [], [])
            )
          , Id
          , Scope(
              ["q_22", "r_22", "g_122", "a_1", "h_122", "i_122", "y_0", "v_0"]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("q_22"), Var("r_22")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("a_1"))
                , Seq(
                    Seq(
                      Seq(
                        Seq(
                          Match(Var("v_0"))
                        , Seq(
                            Build(Var("q_22"))
                          , Seq(
                              CallT(SVar("q_94"), [], [])
                            , Seq(Match(Var("h_122")), Build(Var("v_0")))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("y_0"))
                        , Seq(
                            Build(Var("r_22"))
                          , Seq(
                              CallT(
                                SVar("foldr_3_0")
                              , [ CallT(SVar("o_94"), [], [])
                                , CallT(SVar("p_94"), [], [])
                                , CallT(SVar("q_94"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                Match(Var("i_122"))
                              , Seq(
                                  Build(Var("y_0"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op("", [Var("h_122"), Var("i_122")])
                                      , Op("Nil", [])
                                      )
                                    )
                                  , Seq(
                                      CallT(SVar("p_94"), [], [])
                                    , Match(Var("g_122"))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("a_1"))
                    )
                  , Build(Var("g_122"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "length_0_0"
        , []
        , []
        , CallT(
            SVar("foldr_3_0")
          , [ Build(Anno(Int("0"), Op("Nil", [])))
            , CallT(SVar("add_0_0"), [], [])
            , Build(Anno(Int("1"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "neg_chars_to_int_0_0"
        , []
        , []
        , Scope(
            ["e_26", "f_26", "n_124", "e_1", "o_124", "d_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("45"), Wld), Var("f_26")]
                        )
                      , Wld
                      )
                    , Var("e_26")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Scope(
                  ["c_1", "m_124", "b_1"]
                , Seq(
                    Match(Var("c_1"))
                  , Seq(
                      Seq(
                        Match(Var("b_1"))
                      , Seq(
                          Build(Var("f_26"))
                        , Seq(
                            CallT(SVar("length_0_0"), [], [])
                          , Seq(
                              Match(Var("m_124"))
                            , Seq(
                                Build(Var("b_1"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op(
                                        ""
                                      , [Var("m_124"), Anno(Int("0"), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  )
                                , CallT(SVar("gt_0_0"), [], [])
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("c_1"))
                    )
                  )
                )
              , Seq(
                  Match(Var("e_1"))
                , Seq(
                    Seq(
                      Seq(
                        Match(Var("d_1"))
                      , Seq(
                          Build(
                            Anno(
                              Op("", [Var("f_26"), Var("e_26")])
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("pos_chars_to_int_0_0"), [], [])
                          , Seq(
                              Match(Var("o_124"))
                            , Seq(
                                Build(Var("d_1"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op(
                                        ""
                                      , [Anno(Int("-1"), Op("Nil", [])), Var("o_124")]
                                      )
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("mul_0_0"), [], [])
                                  , Match(Var("n_124"))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("e_1"))
                    )
                  , Build(Var("n_124"))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "generic_chars_to_int_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("neg_chars_to_int_0_0"), [], [])
          , Id
          , CallT(SVar("pos_chars_to_int_0_0"), [], [])
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["h_56"]
          , Seq(
              Match(Var("h_56"))
            , PrimT("SSL_explode_string", [], [Var("h_56")])
            )
          )
        )
      , SDefT(
          "generic_string_to_int_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [CallT(SVar("explode_string_0_0"), [], []), Id]
            , []
            )
          , CallT(SVar("generic_chars_to_int_0_0"), [], [])
          )
        )
      , SDefT(
          "dec_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["f_124", "f_1"]
          , Seq(
              Match(Var("f_1"))
            , Seq(
                Match(Var("f_124"))
              , Seq(
                  Build(Var("f_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("f_124"), Anno(Int("10"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("generic_string_to_int_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "dec_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("dec-string-test-a"), Op("Nil", [])))
              , CallT(SVar("dec_string_to_int_0_0"), [], [])
              , Build(Anno(Str("0"), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("dec-string-test-b"), Op("Nil", [])))
                , CallT(SVar("dec_string_to_int_0_0"), [], [])
                , Build(Anno(Str("1"), Op("Nil", [])))
                , Build(Anno(Int("1"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("dec-string-test-c"), Op("Nil", [])))
                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                  , Build(Anno(Str("10"), Op("Nil", [])))
                  , Build(Anno(Int("10"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("dec-string-test-d"), Op("Nil", [])))
                    , CallT(SVar("dec_string_to_int_0_0"), [], [])
                    , Build(Anno(Str("100"), Op("Nil", [])))
                    , Build(Anno(Int("100"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("dec-string-test-e"), Op("Nil", [])))
                      , CallT(SVar("dec_string_to_int_0_0"), [], [])
                      , Build(Anno(Str("101"), Op("Nil", [])))
                      , Build(Anno(Int("101"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("dec-string-test-f"), Op("Nil", [])))
                        , CallT(SVar("dec_string_to_int_0_0"), [], [])
                        , Build(Anno(Str("34673"), Op("Nil", [])))
                        , Build(Anno(Int("34673"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("dec-string-test-g"), Op("Nil", [])))
                          , CallT(SVar("dec_string_to_int_0_0"), [], [])
                          , Build(Anno(Str("-0"), Op("Nil", [])))
                          , Build(Anno(Int("-0"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("dec-string-test-h"), Op("Nil", [])))
                            , CallT(SVar("dec_string_to_int_0_0"), [], [])
                            , Build(Anno(Str("-1"), Op("Nil", [])))
                            , Build(Anno(Int("-1"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("dec-string-test-i"), Op("Nil", [])))
                              , CallT(SVar("dec_string_to_int_0_0"), [], [])
                              , Build(Anno(Str("-10"), Op("Nil", [])))
                              , Build(Anno(Int("-10"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("dec-string-test-j"), Op("Nil", [])))
                                , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                , Build(Anno(Str("-100"), Op("Nil", [])))
                                , Build(Anno(Int("-100"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("dec-string-test-k"), Op("Nil", [])))
                                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("-101"), Op("Nil", [])))
                                  , Build(Anno(Int("-101"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("dec-string-test-l"), Op("Nil", [])))
                                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("-34673"), Op("Nil", [])))
                                  , Build(Anno(Int("-34673"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "leq_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "lt_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("lt_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "comp_comp_2_0"
        , [ VarDec(
              "l_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["s_27", "t_27", "u_27", "g_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("s_27"), Var("t_27"), Var("u_27")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("g_1"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("s_27"), Var("t_27")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("l_97"), [], [])
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("t_27"), Var("u_27")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("m_97"), [], [])
                      , Build(Var("g_1"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "lt_lt_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("lt_0_0"), [], [])
            , CallT(SVar("lt_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "lt_lt_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("x <= y <= z a"), Op("Nil", [])))
              , CallT(SVar("leq_leq_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Int("2"), Op("Nil", []))
                      , Anno(Int("3"), Op("Nil", []))
                      , Anno(Int("4"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Int("2"), Op("Nil", []))
                      , Anno(Int("3"), Op("Nil", []))
                      , Anno(Int("4"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("x <  y <  z b"), Op("Nil", [])))
                , CallT(SVar("lt_lt_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Int("2"), Op("Nil", []))
                        , Anno(Int("3"), Op("Nil", []))
                        , Anno(Int("4"), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Int("2"), Op("Nil", []))
                        , Anno(Int("3"), Op("Nil", []))
                        , Anno(Int("4"), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("x <= y <= z c"), Op("Nil", [])))
                  , CallT(SVar("leq_leq_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ Build(Anno(Str("x <  y <= z d"), Op("Nil", [])))
                    , CallT(SVar("lt_leq_0_0"), [], [])
                    , Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Int("2"), Op("Nil", []))
                            , Anno(Int("2"), Op("Nil", []))
                            , Anno(Int("2"), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_and_fail_3_0")
                    , [ Build(Anno(Str("x <= y <= z e"), Op("Nil", [])))
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("2"), Op("Nil", []))
                              , Anno(Int("1"), Op("Nil", []))
                              , Anno(Int("2"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_and_fail_3_0")
                    , [ Build(Anno(Str("x <= y <= z f"), Op("Nil", [])))
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(Int("2"), Op("Nil", []))
                              , Anno(Int("1"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["c_29"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("c_29"), Var("c_29")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "ltS_0_0"
        , []
        , []
        , Scope(
            ["h_1"]
          , Seq(
              Match(Var("h_1"))
            , Seq(
                CallT(
                  SVar("_2_0")
                , [ CallT(SVar("string_to_int_0_0"), [], [])
                  , CallT(SVar("string_to_int_0_0"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(SVar("lt_0_0"), [], [])
                , Build(Var("h_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "int_to_string_0_0"
        , []
        , []
        , Scope(
            ["o_26"]
          , Seq(
              Match(Var("o_26"))
            , PrimT("SSL_int_to_string", [], [Var("o_26")])
            )
          )
        )
      , SDefT(
          "string_to_int_0_0"
        , []
        , []
        , Scope(
            ["p_26"]
          , Seq(
              Match(Var("p_26"))
            , PrimT("SSL_string_to_int", [], [Var("p_26")])
            )
          )
        )
      , SDefT(
          "addS_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("string_to_int_0_0"), [], [])
              , CallT(SVar("string_to_int_0_0"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(SVar("add_0_0"), [], [])
            , CallT(SVar("int_to_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "test3_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test3"), Op("Nil", [])))
              , CallT(SVar("addS_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str("5"), Op("Nil", []))
                      , Anno(Str("3"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(Anno(Str("8"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test3"), Op("Nil", [])))
              , CallT(SVar("ltS_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str("3"), Op("Nil", []))
                      , Anno(Str("5"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str("3"), Op("Nil", []))
                      , Anno(Str("5"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["j_20", "k_20"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("k_20"), Var("j_20")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("k_20"))
            )
          )
        )
      , SDefT(
          "repeat_2_0"
        , [ VarDec(
              "o_107"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_107"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "q_107"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(SVar("o_107"), [], [])
                  , CallT(SVar("q_107"), [], [])
                  )
                , Id
                , CallT(SVar("p_107"), [], [])
                )
              )
            ]
          , CallT(SVar("q_107"), [], [])
          )
        )
      , SDefT(
          "repeat_1_0"
        , [ VarDec(
              "r_107"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("repeat_2_0")
          , [CallT(SVar("r_107"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "log2_0_0"
        , []
        , []
        , Scope(
            ["v_125", "q_125", "i_1"]
          , Seq(
              Seq(
                Match(Var("i_1"))
              , Seq(
                  Match(Var("q_125"))
                , Seq(
                    Build(Var("i_1"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [Var("q_125"), Anno(Int("0"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            , Seq(
                CallT(
                  SVar("repeat_1_0")
                , [ CallT(
                      SVar("_2_0")
                    , [ Scope(
                          ["r_125", "s_125", "m_1", "u_125", "l_1"]
                        , Seq(
                            Scope(
                              ["k_1", "t_125", "j_1"]
                            , Seq(
                                Match(Var("k_1"))
                              , Seq(
                                  Seq(
                                    Match(Var("j_1"))
                                  , Seq(
                                      Match(Var("t_125"))
                                    , Seq(
                                        Build(Var("j_1"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op(
                                                ""
                                              , [Var("t_125"), Anno(Int("2"), Op("Nil", []))]
                                              )
                                            , Op("Nil", [])
                                            )
                                          )
                                        , Seq(
                                            CallT(SVar("divi_0_0"), [], [])
                                          , Match(Var("r_125"))
                                          )
                                        )
                                      )
                                    )
                                  )
                                , Build(Var("k_1"))
                                )
                              )
                            )
                          , Seq(
                              Seq(
                                Match(Var("m_1"))
                              , Seq(
                                  Seq(
                                    Seq(
                                      Match(Var("l_1"))
                                    , Seq(
                                        Match(Var("u_125"))
                                      , Seq(
                                          Build(Var("l_1"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op(
                                                  ""
                                                , [Var("u_125"), Anno(Int("2"), Op("Nil", []))]
                                                )
                                              , Op("Nil", [])
                                              )
                                            )
                                          , Seq(
                                              CallT(SVar("mod_0_0"), [], [])
                                            , Seq(
                                                Match(Anno(Int("0"), Wld))
                                              , Match(Var("s_125"))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  , Build(Var("m_1"))
                                  )
                                , Build(
                                    Anno(
                                      Op("", [Var("r_125"), Var("s_125")])
                                    , Op("Nil", [])
                                    )
                                  )
                                )
                              )
                            , CallT(SVar("Fst_0_0"), [], [])
                            )
                          )
                        )
                      , CallT(SVar("inc_0_0"), [], [])
                      ]
                    , []
                    )
                  ]
                , []
                )
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("1"), Wld), Var("v_125")]
                      )
                    , Wld
                    )
                  )
                , Build(Var("v_125"))
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "w_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("w_86"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("y_86"), [], [])]
                  , []
                  )
                , GuardedLChoice(CallT(SVar("x_86"), [], []), Fail, Id)
                )
              , Id
              , Seq(
                  Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "t_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "v_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("t_86"), [], [])
            , CallT(SVar("u_86"), [], [])
            , CallT(SVar("v_86"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "mod_0_0"
        , []
        , []
        , Scope(
            ["u_28", "v_28"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("u_28"), Var("v_28")])
                , Wld
                )
              )
            , PrimT("SSL_mod", [], [Var("u_28"), Var("v_28")])
            )
          )
        )
      , SDefT(
          "divi_0_0"
        , []
        , []
        , Scope(
            ["q_28", "r_28"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_28"), Var("r_28")])
                , Wld
                )
              )
            , PrimT("SSL_divi", [], [Var("q_28"), Var("r_28")])
            )
          )
        )
      , SDefT(
          "test2_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test2a"), Op("Nil", [])))
              , Scope(
                  ["a_0", "b_0", "r_1", "d_0", "q_1"]
                , Seq(
                    Scope(
                      ["o_1", "c_0", "n_1"]
                    , Seq(
                        Match(Var("o_1"))
                      , Seq(
                          Seq(
                            Match(Var("n_1"))
                          , Seq(
                              Match(Var("c_0"))
                            , Seq(
                                Build(Var("n_1"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op(
                                        ""
                                      , [Var("c_0"), Anno(Int("2"), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("divi_0_0"), [], [])
                                  , Match(Var("a_0"))
                                  )
                                )
                              )
                            )
                          )
                        , Build(Var("o_1"))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("r_1"))
                    , Seq(
                        Seq(
                          Seq(
                            Match(Var("q_1"))
                          , Seq(
                              Match(Var("d_0"))
                            , Seq(
                                Build(Var("q_1"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op(
                                        ""
                                      , [Var("d_0"), Anno(Int("2"), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("mod_0_0"), [], [])
                                  , Seq(
                                      Match(Anno(Int("0"), Wld))
                                    , Match(Var("b_0"))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        , Build(Var("r_1"))
                        )
                      , Build(
                          Anno(
                            Op("", [Var("a_0"), Var("b_0")])
                          , Op("Nil", [])
                          )
                        )
                      )
                    )
                  )
                )
              , Build(Anno(Int("16"), Op("Nil", [])))
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Int("8"), Op("Nil", []))
                      , Anno(Int("0"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("test2b"), Op("Nil", [])))
                , CallT(SVar("log2_0_0"), [], [])
                , Build(Anno(Int("16"), Op("Nil", [])))
                , Build(Anno(Int("4"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_and_fail_3_0")
              , [ Build(Anno(Str("test2c"), Op("Nil", [])))
                , CallT(SVar("log2_0_0"), [], [])
                , Build(Anno(Int("6"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["w_28", "x_28", "s_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_28"), Var("x_28")])
                , Wld
                )
              )
            , Seq(
                Match(Var("s_1"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("w_28"), Var("x_28")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("w_28"), Var("x_28")])
                  )
                , Build(Var("s_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "leq_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("gt_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "u_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("u_85"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["u_1", "j_138", "t_1"]
          , Seq(
              Match(Var("u_1"))
            , Seq(
                Seq(
                  Match(Var("t_1"))
                , Seq(
                    Match(Var("j_138"))
                  , Seq(
                      Build(Var("t_1"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Op("stderr", []), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [Var("j_138"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("printnl_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("u_1"))
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "h_109"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_1"]
          , Seq(
              Match(Var("v_1"))
            , Seq(
                CallT(SVar("h_109"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("v_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "t_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("t_85"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["w_27", "x_27"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_27"), Var("x_27")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("w_27"), Var("x_27")])
              , Id
              , PrimT("SSL_addr", [], [Var("w_27"), Var("x_27")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["o_125", "w_1"]
          , Seq(
              Match(Var("w_1"))
            , Seq(
                Match(Var("o_125"))
              , Seq(
                  Build(Var("w_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("o_125"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "v_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["x_1"]
          , Seq(
              Match(Var("x_1"))
            , Seq(
                CallT(SVar("v_85"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("x_1"))
                  , GuardedLChoice(
                      Scope(
                        ["y_1"]
                      , Seq(
                          Match(Var("y_1"))
                        , Seq(
                            CallT(SVar("w_85"), [], [])
                          , Seq(
                              Build(Var("y_1"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "i_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_9", "v_9"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("i_86"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("k_86"), [], [])]
                      , []
                      )
                    , CallT(SVar("j_86"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("u_9"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("l_86"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("v_9"))
                      , GuardedLChoice(
                          Seq(Build(Var("v_9")), Match(Var("u_9")))
                        , Id
                        , Seq(
                            Build(Var("u_9"))
                          , Seq(
                              CallT(
                                SVar("debug_1_0")
                              , [Build(Anno(Str("  result not equal : "), Op("Nil", [])))]
                              , []
                              )
                            , Seq(
                                Build(Var("v_9"))
                              , Seq(
                                  CallT(
                                    SVar("debug_1_0")
                                  , [Build(Anno(Str("  expected         : "), Op("Nil", [])))]
                                  , []
                                  )
                                , Fail
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "test1_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1"), Op("Nil", [])))
            , CallT(SVar("leq_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Int("5"), Op("Nil", []))
                    , Anno(Int("5"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Int("5"), Op("Nil", []))
                    , Anno(Int("5"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "y_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_0", "w_0", "x_0", "f_2", "g_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_0"), Var("x_0")])
                , Var("z_0")
                )
              )
            , Seq(
                Build(Var("w_0"))
              , Seq(
                  CallT(SVar("y_77"), [], [])
                , Seq(
                    Match(Var("f_2"))
                  , Seq(
                      Build(Var("x_0"))
                    , Seq(
                        CallT(SVar("z_77"), [], [])
                      , Seq(
                          Match(Var("g_2"))
                        , Build(
                            Anno(
                              Op("", [Var("f_2"), Var("g_2")])
                            , Var("z_0")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["q_59", "r_59", "z_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_59"), Var("r_59")])
                , Wld
                )
              )
            , Seq(
                Match(Var("z_1"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("q_59"), Var("r_59")])
                , Build(Var("z_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "q_109"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["c_2", "k_138", "l_138", "b_2", "a_2"]
          , Seq(
              Match(Var("c_2"))
            , Seq(
                Seq(
                  Seq(
                    Match(Var("a_2"))
                  , Seq(
                      CallT(SVar("q_109"), [], [])
                    , Seq(Match(Var("k_138")), Build(Var("a_2")))
                    )
                  )
                , Seq(
                    Match(Var("b_2"))
                  , Seq(
                      Match(Var("l_138"))
                    , Seq(
                        Build(Var("b_2"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("stderr", []), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("k_138")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("l_138"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("printnl_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              , Build(Var("c_2"))
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "g_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("g_86"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("h_86"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("integers-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("test1_0_0"), [], [])
              , Seq(
                  CallT(SVar("test2_0_0"), [], [])
                , Seq(
                    CallT(SVar("test3_0_0"), [], [])
                  , Seq(
                      CallT(SVar("lt_lt_test_0_0"), [], [])
                    , Seq(
                        CallT(SVar("dec_string_test_0_0"), [], [])
                      , Seq(
                          CallT(SVar("hex_string_test_0_0"), [], [])
                        , CallT(SVar("bin_string_test_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
