Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT(
          "bin_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["h_10", "a_0"]
          , Seq(
              Match(Var("a_0"))
            , Seq(
                Match(Var("h_10"))
              , Seq(
                  Build(Var("a_0"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("h_10"), Anno(Int("2"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("generic_string_to_int_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "j_2"
        , []
        , []
        , Build(Anno(Str("bin-string-test-0a"), Op("Nil", [])))
        )
      , SDefT(
          "k_2"
        , []
        , []
        , Build(Anno(Str("0"), Op("Nil", [])))
        )
      , SDefT(
          "l_2"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "m_2"
        , []
        , []
        , Build(Anno(Str("bin-string-test-0b"), Op("Nil", [])))
        )
      , SDefT(
          "n_2"
        , []
        , []
        , Build(Anno(Str("00"), Op("Nil", [])))
        )
      , SDefT(
          "o_2"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "p_2"
        , []
        , []
        , Build(Anno(Str("bin-string-test-0c"), Op("Nil", [])))
        )
      , SDefT(
          "q_2"
        , []
        , []
        , Build(Anno(Str("000"), Op("Nil", [])))
        )
      , SDefT(
          "r_2"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "s_2"
        , []
        , []
        , Build(Anno(Str("bin-string-test-0d"), Op("Nil", [])))
        )
      , SDefT(
          "t_2"
        , []
        , []
        , Build(Anno(Str("0000"), Op("Nil", [])))
        )
      , SDefT(
          "u_2"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "v_2"
        , []
        , []
        , Build(Anno(Str("bin-string-test-0e"), Op("Nil", [])))
        )
      , SDefT(
          "w_2"
        , []
        , []
        , Build(Anno(Str("00000"), Op("Nil", [])))
        )
      , SDefT(
          "x_2"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "y_2"
        , []
        , []
        , Build(Anno(Str("bin-string-test-0f"), Op("Nil", [])))
        )
      , SDefT(
          "z_2"
        , []
        , []
        , Build(Anno(Str("00000000000000"), Op("Nil", [])))
        )
      , SDefT(
          "a_3"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "b_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-1a"), Op("Nil", [])))
        )
      , SDefT(
          "c_3"
        , []
        , []
        , Build(Anno(Str("1"), Op("Nil", [])))
        )
      , SDefT(
          "d_3"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "e_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-1b"), Op("Nil", [])))
        )
      , SDefT(
          "f_3"
        , []
        , []
        , Build(Anno(Str("01"), Op("Nil", [])))
        )
      , SDefT(
          "g_3"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "h_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-1c"), Op("Nil", [])))
        )
      , SDefT(
          "i_3"
        , []
        , []
        , Build(Anno(Str("001"), Op("Nil", [])))
        )
      , SDefT(
          "j_3"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "k_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-1d"), Op("Nil", [])))
        )
      , SDefT(
          "l_3"
        , []
        , []
        , Build(Anno(Str("0001"), Op("Nil", [])))
        )
      , SDefT(
          "m_3"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "n_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-1e"), Op("Nil", [])))
        )
      , SDefT(
          "o_3"
        , []
        , []
        , Build(Anno(Str("00001"), Op("Nil", [])))
        )
      , SDefT(
          "p_3"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "q_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-1f"), Op("Nil", [])))
        )
      , SDefT(
          "r_3"
        , []
        , []
        , Build(Anno(Str("0000000000000001"), Op("Nil", [])))
        )
      , SDefT(
          "s_3"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "t_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2a"), Op("Nil", [])))
        )
      , SDefT(
          "u_3"
        , []
        , []
        , Build(Anno(Str("11"), Op("Nil", [])))
        )
      , SDefT(
          "v_3"
        , []
        , []
        , Build(Anno(Int("3"), Op("Nil", [])))
        )
      , SDefT(
          "w_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2b"), Op("Nil", [])))
        )
      , SDefT(
          "x_3"
        , []
        , []
        , Build(Anno(Str("111"), Op("Nil", [])))
        )
      , SDefT(
          "y_3"
        , []
        , []
        , Build(Anno(Int("7"), Op("Nil", [])))
        )
      , SDefT(
          "z_3"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2c"), Op("Nil", [])))
        )
      , SDefT(
          "a_4"
        , []
        , []
        , Build(Anno(Str("1111"), Op("Nil", [])))
        )
      , SDefT(
          "b_4"
        , []
        , []
        , Build(Anno(Int("15"), Op("Nil", [])))
        )
      , SDefT(
          "c_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2d"), Op("Nil", [])))
        )
      , SDefT(
          "d_4"
        , []
        , []
        , Build(Anno(Str("11111"), Op("Nil", [])))
        )
      , SDefT(
          "e_4"
        , []
        , []
        , Build(Anno(Int("31"), Op("Nil", [])))
        )
      , SDefT(
          "f_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2e"), Op("Nil", [])))
        )
      , SDefT(
          "g_4"
        , []
        , []
        , Build(Anno(Str("111111"), Op("Nil", [])))
        )
      , SDefT(
          "h_4"
        , []
        , []
        , Build(Anno(Int("63"), Op("Nil", [])))
        )
      , SDefT(
          "i_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2f"), Op("Nil", [])))
        )
      , SDefT(
          "j_4"
        , []
        , []
        , Build(Anno(Str("1111111"), Op("Nil", [])))
        )
      , SDefT(
          "k_4"
        , []
        , []
        , Build(Anno(Int("127"), Op("Nil", [])))
        )
      , SDefT(
          "l_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2g"), Op("Nil", [])))
        )
      , SDefT(
          "m_4"
        , []
        , []
        , Build(Anno(Str("11111111"), Op("Nil", [])))
        )
      , SDefT(
          "n_4"
        , []
        , []
        , Build(Anno(Int("255"), Op("Nil", [])))
        )
      , SDefT(
          "o_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2h"), Op("Nil", [])))
        )
      , SDefT(
          "p_4"
        , []
        , []
        , Build(Anno(Str("111111111"), Op("Nil", [])))
        )
      , SDefT(
          "q_4"
        , []
        , []
        , Build(Anno(Int("511"), Op("Nil", [])))
        )
      , SDefT(
          "r_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2i"), Op("Nil", [])))
        )
      , SDefT(
          "s_4"
        , []
        , []
        , Build(Anno(Str("1111111111"), Op("Nil", [])))
        )
      , SDefT(
          "t_4"
        , []
        , []
        , Build(Anno(Int("1023"), Op("Nil", [])))
        )
      , SDefT(
          "u_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2j"), Op("Nil", [])))
        )
      , SDefT(
          "v_4"
        , []
        , []
        , Build(Anno(Str("11111111111"), Op("Nil", [])))
        )
      , SDefT(
          "w_4"
        , []
        , []
        , Build(Anno(Int("2047"), Op("Nil", [])))
        )
      , SDefT(
          "x_4"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2k"), Op("Nil", [])))
        )
      , SDefT(
          "y_4"
        , []
        , []
        , Build(Anno(Str("10"), Op("Nil", [])))
        )
      , SDefT(
          "z_4"
        , []
        , []
        , Build(Anno(Int("2"), Op("Nil", [])))
        )
      , SDefT(
          "a_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2l"), Op("Nil", [])))
        )
      , SDefT(
          "b_5"
        , []
        , []
        , Build(Anno(Str("100"), Op("Nil", [])))
        )
      , SDefT(
          "c_5"
        , []
        , []
        , Build(Anno(Int("4"), Op("Nil", [])))
        )
      , SDefT(
          "d_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2m"), Op("Nil", [])))
        )
      , SDefT(
          "e_5"
        , []
        , []
        , Build(Anno(Str("1000"), Op("Nil", [])))
        )
      , SDefT(
          "f_5"
        , []
        , []
        , Build(Anno(Int("8"), Op("Nil", [])))
        )
      , SDefT(
          "g_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2n"), Op("Nil", [])))
        )
      , SDefT(
          "h_5"
        , []
        , []
        , Build(Anno(Str("10000"), Op("Nil", [])))
        )
      , SDefT(
          "i_5"
        , []
        , []
        , Build(Anno(Int("16"), Op("Nil", [])))
        )
      , SDefT(
          "j_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2o"), Op("Nil", [])))
        )
      , SDefT(
          "k_5"
        , []
        , []
        , Build(Anno(Str("100000"), Op("Nil", [])))
        )
      , SDefT(
          "l_5"
        , []
        , []
        , Build(Anno(Int("32"), Op("Nil", [])))
        )
      , SDefT(
          "m_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2p"), Op("Nil", [])))
        )
      , SDefT(
          "n_5"
        , []
        , []
        , Build(Anno(Str("1000000"), Op("Nil", [])))
        )
      , SDefT(
          "o_5"
        , []
        , []
        , Build(Anno(Int("64"), Op("Nil", [])))
        )
      , SDefT(
          "p_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2q"), Op("Nil", [])))
        )
      , SDefT(
          "q_5"
        , []
        , []
        , Build(Anno(Str("10000000"), Op("Nil", [])))
        )
      , SDefT(
          "r_5"
        , []
        , []
        , Build(Anno(Int("128"), Op("Nil", [])))
        )
      , SDefT(
          "s_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2r"), Op("Nil", [])))
        )
      , SDefT(
          "t_5"
        , []
        , []
        , Build(Anno(Str("100000000"), Op("Nil", [])))
        )
      , SDefT(
          "u_5"
        , []
        , []
        , Build(Anno(Int("256"), Op("Nil", [])))
        )
      , SDefT(
          "v_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2s"), Op("Nil", [])))
        )
      , SDefT(
          "w_5"
        , []
        , []
        , Build(Anno(Str("1000000000"), Op("Nil", [])))
        )
      , SDefT(
          "x_5"
        , []
        , []
        , Build(Anno(Int("512"), Op("Nil", [])))
        )
      , SDefT(
          "y_5"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2t"), Op("Nil", [])))
        )
      , SDefT(
          "z_5"
        , []
        , []
        , Build(Anno(Str("10000000000"), Op("Nil", [])))
        )
      , SDefT(
          "a_6"
        , []
        , []
        , Build(Anno(Int("1024"), Op("Nil", [])))
        )
      , SDefT(
          "b_6"
        , []
        , []
        , Build(Anno(Str("bin-string-test-2u"), Op("Nil", [])))
        )
      , SDefT(
          "c_6"
        , []
        , []
        , Build(Anno(Str("100000000000"), Op("Nil", [])))
        )
      , SDefT(
          "d_6"
        , []
        , []
        , Build(Anno(Int("2048"), Op("Nil", [])))
        )
      , SDefT(
          "e_6"
        , []
        , []
        , Build(Anno(Str("bin-string-test-a"), Op("Nil", [])))
        )
      , SDefT(
          "f_6"
        , []
        , []
        , Build(Anno(Str("1010"), Op("Nil", [])))
        )
      , SDefT(
          "g_6"
        , []
        , []
        , Build(Anno(Int("10"), Op("Nil", [])))
        )
      , SDefT(
          "h_6"
        , []
        , []
        , Build(Anno(Str("bin-string-test-c"), Op("Nil", [])))
        )
      , SDefT(
          "i_6"
        , []
        , []
        , Build(Anno(Str("10110000"), Op("Nil", [])))
        )
      , SDefT(
          "j_6"
        , []
        , []
        , Build(Anno(Int("176"), Op("Nil", [])))
        )
      , SDefT(
          "k_6"
        , []
        , []
        , Build(Anno(Str("bin-string-test-b"), Op("Nil", [])))
        )
      , SDefT(
          "l_6"
        , []
        , []
        , Build(Anno(Str("111100011"), Op("Nil", [])))
        )
      , SDefT(
          "m_6"
        , []
        , []
        , Build(Anno(Int("483"), Op("Nil", [])))
        )
      , SDefT(
          "n_6"
        , []
        , []
        , Build(Anno(Str("bin-string-test-d"), Op("Nil", [])))
        )
      , SDefT(
          "o_6"
        , []
        , []
        , Build(Anno(Str("101010101"), Op("Nil", [])))
        )
      , SDefT(
          "p_6"
        , []
        , []
        , Build(Anno(Int("341"), Op("Nil", [])))
        )
      , SDefT(
          "bin_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("j_2"), [], [])
              , CallT(SVar("bin_string_to_int_0_0"), [], [])
              , CallT(SVar("k_2"), [], [])
              , CallT(SVar("l_2"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("m_2"), [], [])
                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                , CallT(SVar("n_2"), [], [])
                , CallT(SVar("o_2"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("p_2"), [], [])
                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                  , CallT(SVar("q_2"), [], [])
                  , CallT(SVar("r_2"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("s_2"), [], [])
                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                    , CallT(SVar("t_2"), [], [])
                    , CallT(SVar("u_2"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("v_2"), [], [])
                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                      , CallT(SVar("w_2"), [], [])
                      , CallT(SVar("x_2"), [], [])
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("y_2"), [], [])
                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                        , CallT(SVar("z_2"), [], [])
                        , CallT(SVar("a_3"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ CallT(SVar("b_3"), [], [])
                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                          , CallT(SVar("c_3"), [], [])
                          , CallT(SVar("d_3"), [], [])
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("e_3"), [], [])
                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                            , CallT(SVar("f_3"), [], [])
                            , CallT(SVar("g_3"), [], [])
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ CallT(SVar("h_3"), [], [])
                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                              , CallT(SVar("i_3"), [], [])
                              , CallT(SVar("j_3"), [], [])
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ CallT(SVar("k_3"), [], [])
                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                , CallT(SVar("l_3"), [], [])
                                , CallT(SVar("m_3"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ CallT(SVar("n_3"), [], [])
                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                  , CallT(SVar("o_3"), [], [])
                                  , CallT(SVar("p_3"), [], [])
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ CallT(SVar("q_3"), [], [])
                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                    , CallT(SVar("r_3"), [], [])
                                    , CallT(SVar("s_3"), [], [])
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ CallT(SVar("t_3"), [], [])
                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                      , CallT(SVar("u_3"), [], [])
                                      , CallT(SVar("v_3"), [], [])
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ CallT(SVar("w_3"), [], [])
                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                        , CallT(SVar("x_3"), [], [])
                                        , CallT(SVar("y_3"), [], [])
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ CallT(SVar("z_3"), [], [])
                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                          , CallT(SVar("a_4"), [], [])
                                          , CallT(SVar("b_4"), [], [])
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ CallT(SVar("c_4"), [], [])
                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                            , CallT(SVar("d_4"), [], [])
                                            , CallT(SVar("e_4"), [], [])
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ CallT(SVar("f_4"), [], [])
                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                              , CallT(SVar("g_4"), [], [])
                                              , CallT(SVar("h_4"), [], [])
                                              ]
                                            , []
                                            )
                                          , Seq(
                                              CallT(
                                                SVar("apply_test_4_0")
                                              , [ CallT(SVar("i_4"), [], [])
                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                , CallT(SVar("j_4"), [], [])
                                                , CallT(SVar("k_4"), [], [])
                                                ]
                                              , []
                                              )
                                            , Seq(
                                                CallT(
                                                  SVar("apply_test_4_0")
                                                , [ CallT(SVar("l_4"), [], [])
                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                  , CallT(SVar("m_4"), [], [])
                                                  , CallT(SVar("n_4"), [], [])
                                                  ]
                                                , []
                                                )
                                              , Seq(
                                                  CallT(
                                                    SVar("apply_test_4_0")
                                                  , [ CallT(SVar("o_4"), [], [])
                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                    , CallT(SVar("p_4"), [], [])
                                                    , CallT(SVar("q_4"), [], [])
                                                    ]
                                                  , []
                                                  )
                                                , Seq(
                                                    CallT(
                                                      SVar("apply_test_4_0")
                                                    , [ CallT(SVar("r_4"), [], [])
                                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                      , CallT(SVar("s_4"), [], [])
                                                      , CallT(SVar("t_4"), [], [])
                                                      ]
                                                    , []
                                                    )
                                                  , Seq(
                                                      CallT(
                                                        SVar("apply_test_4_0")
                                                      , [ CallT(SVar("u_4"), [], [])
                                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                        , CallT(SVar("v_4"), [], [])
                                                        , CallT(SVar("w_4"), [], [])
                                                        ]
                                                      , []
                                                      )
                                                    , Seq(
                                                        CallT(
                                                          SVar("apply_test_4_0")
                                                        , [ CallT(SVar("x_4"), [], [])
                                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                          , CallT(SVar("y_4"), [], [])
                                                          , CallT(SVar("z_4"), [], [])
                                                          ]
                                                        , []
                                                        )
                                                      , Seq(
                                                          CallT(
                                                            SVar("apply_test_4_0")
                                                          , [ CallT(SVar("a_5"), [], [])
                                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                            , CallT(SVar("b_5"), [], [])
                                                            , CallT(SVar("c_5"), [], [])
                                                            ]
                                                          , []
                                                          )
                                                        , Seq(
                                                            CallT(
                                                              SVar("apply_test_4_0")
                                                            , [ CallT(SVar("d_5"), [], [])
                                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                              , CallT(SVar("e_5"), [], [])
                                                              , CallT(SVar("f_5"), [], [])
                                                              ]
                                                            , []
                                                            )
                                                          , Seq(
                                                              CallT(
                                                                SVar("apply_test_4_0")
                                                              , [ CallT(SVar("g_5"), [], [])
                                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                , CallT(SVar("h_5"), [], [])
                                                                , CallT(SVar("i_5"), [], [])
                                                                ]
                                                              , []
                                                              )
                                                            , Seq(
                                                                CallT(
                                                                  SVar("apply_test_4_0")
                                                                , [ CallT(SVar("j_5"), [], [])
                                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                  , CallT(SVar("k_5"), [], [])
                                                                  , CallT(SVar("l_5"), [], [])
                                                                  ]
                                                                , []
                                                                )
                                                              , Seq(
                                                                  CallT(
                                                                    SVar("apply_test_4_0")
                                                                  , [ CallT(SVar("m_5"), [], [])
                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                    , CallT(SVar("n_5"), [], [])
                                                                    , CallT(SVar("o_5"), [], [])
                                                                    ]
                                                                  , []
                                                                  )
                                                                , Seq(
                                                                    CallT(
                                                                      SVar("apply_test_4_0")
                                                                    , [ CallT(SVar("p_5"), [], [])
                                                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                      , CallT(SVar("q_5"), [], [])
                                                                      , CallT(SVar("r_5"), [], [])
                                                                      ]
                                                                    , []
                                                                    )
                                                                  , Seq(
                                                                      CallT(
                                                                        SVar("apply_test_4_0")
                                                                      , [ CallT(SVar("s_5"), [], [])
                                                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                        , CallT(SVar("t_5"), [], [])
                                                                        , CallT(SVar("u_5"), [], [])
                                                                        ]
                                                                      , []
                                                                      )
                                                                    , Seq(
                                                                        CallT(
                                                                          SVar("apply_test_4_0")
                                                                        , [ CallT(SVar("v_5"), [], [])
                                                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                          , CallT(SVar("w_5"), [], [])
                                                                          , CallT(SVar("x_5"), [], [])
                                                                          ]
                                                                        , []
                                                                        )
                                                                      , Seq(
                                                                          CallT(
                                                                            SVar("apply_test_4_0")
                                                                          , [ CallT(SVar("y_5"), [], [])
                                                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                            , CallT(SVar("z_5"), [], [])
                                                                            , CallT(SVar("a_6"), [], [])
                                                                            ]
                                                                          , []
                                                                          )
                                                                        , Seq(
                                                                            CallT(
                                                                              SVar("apply_test_4_0")
                                                                            , [ CallT(SVar("b_6"), [], [])
                                                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                              , CallT(SVar("c_6"), [], [])
                                                                              , CallT(SVar("d_6"), [], [])
                                                                              ]
                                                                            , []
                                                                            )
                                                                          , Seq(
                                                                              CallT(
                                                                                SVar("apply_test_4_0")
                                                                              , [ CallT(SVar("e_6"), [], [])
                                                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                , CallT(SVar("f_6"), [], [])
                                                                                , CallT(SVar("g_6"), [], [])
                                                                                ]
                                                                              , []
                                                                              )
                                                                            , Seq(
                                                                                CallT(
                                                                                  SVar("apply_test_4_0")
                                                                                , [ CallT(SVar("h_6"), [], [])
                                                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                  , CallT(SVar("i_6"), [], [])
                                                                                  , CallT(SVar("j_6"), [], [])
                                                                                  ]
                                                                                , []
                                                                                )
                                                                              , Seq(
                                                                                  CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ CallT(SVar("k_6"), [], [])
                                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                    , CallT(SVar("l_6"), [], [])
                                                                                    , CallT(SVar("m_6"), [], [])
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                , CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ CallT(SVar("n_6"), [], [])
                                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                    , CallT(SVar("o_6"), [], [])
                                                                                    , CallT(SVar("p_6"), [], [])
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "hex_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["e_10", "d_0"]
          , Seq(
              Match(Var("d_0"))
            , Seq(
                Match(Var("e_10"))
              , Seq(
                  Build(Var("d_0"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("e_10"), Anno(Int("16"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("generic_string_to_int_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "q_6"
        , []
        , []
        , Build(Anno(Str("hex-string-test-a"), Op("Nil", [])))
        )
      , SDefT(
          "r_6"
        , []
        , []
        , Build(Anno(Str("0"), Op("Nil", [])))
        )
      , SDefT(
          "s_6"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "t_6"
        , []
        , []
        , Build(Anno(Str("hex-string-test-b"), Op("Nil", [])))
        )
      , SDefT(
          "u_6"
        , []
        , []
        , Build(Anno(Str("1"), Op("Nil", [])))
        )
      , SDefT(
          "v_6"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "w_6"
        , []
        , []
        , Build(Anno(Str("hex-string-test-c"), Op("Nil", [])))
        )
      , SDefT(
          "x_6"
        , []
        , []
        , Build(Anno(Str("2"), Op("Nil", [])))
        )
      , SDefT(
          "y_6"
        , []
        , []
        , Build(Anno(Int("2"), Op("Nil", [])))
        )
      , SDefT(
          "z_6"
        , []
        , []
        , Build(Anno(Str("hex-string-test-d"), Op("Nil", [])))
        )
      , SDefT(
          "a_7"
        , []
        , []
        , Build(Anno(Str("3"), Op("Nil", [])))
        )
      , SDefT(
          "b_7"
        , []
        , []
        , Build(Anno(Int("3"), Op("Nil", [])))
        )
      , SDefT(
          "c_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-e"), Op("Nil", [])))
        )
      , SDefT(
          "d_7"
        , []
        , []
        , Build(Anno(Str("4"), Op("Nil", [])))
        )
      , SDefT(
          "e_7"
        , []
        , []
        , Build(Anno(Int("4"), Op("Nil", [])))
        )
      , SDefT(
          "f_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-f"), Op("Nil", [])))
        )
      , SDefT(
          "g_7"
        , []
        , []
        , Build(Anno(Str("5"), Op("Nil", [])))
        )
      , SDefT(
          "h_7"
        , []
        , []
        , Build(Anno(Int("5"), Op("Nil", [])))
        )
      , SDefT(
          "i_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-g"), Op("Nil", [])))
        )
      , SDefT(
          "j_7"
        , []
        , []
        , Build(Anno(Str("6"), Op("Nil", [])))
        )
      , SDefT(
          "k_7"
        , []
        , []
        , Build(Anno(Int("6"), Op("Nil", [])))
        )
      , SDefT(
          "l_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-h"), Op("Nil", [])))
        )
      , SDefT(
          "m_7"
        , []
        , []
        , Build(Anno(Str("7"), Op("Nil", [])))
        )
      , SDefT(
          "n_7"
        , []
        , []
        , Build(Anno(Int("7"), Op("Nil", [])))
        )
      , SDefT(
          "o_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-i"), Op("Nil", [])))
        )
      , SDefT(
          "p_7"
        , []
        , []
        , Build(Anno(Str("8"), Op("Nil", [])))
        )
      , SDefT(
          "q_7"
        , []
        , []
        , Build(Anno(Int("8"), Op("Nil", [])))
        )
      , SDefT(
          "r_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-j"), Op("Nil", [])))
        )
      , SDefT(
          "s_7"
        , []
        , []
        , Build(Anno(Str("9"), Op("Nil", [])))
        )
      , SDefT(
          "t_7"
        , []
        , []
        , Build(Anno(Int("9"), Op("Nil", [])))
        )
      , SDefT(
          "u_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-k"), Op("Nil", [])))
        )
      , SDefT(
          "v_7"
        , []
        , []
        , Build(Anno(Str("A"), Op("Nil", [])))
        )
      , SDefT(
          "w_7"
        , []
        , []
        , Build(Anno(Int("10"), Op("Nil", [])))
        )
      , SDefT(
          "x_7"
        , []
        , []
        , Build(Anno(Str("hex-string-test-l"), Op("Nil", [])))
        )
      , SDefT(
          "y_7"
        , []
        , []
        , Build(Anno(Str("B"), Op("Nil", [])))
        )
      , SDefT(
          "z_7"
        , []
        , []
        , Build(Anno(Int("11"), Op("Nil", [])))
        )
      , SDefT(
          "a_8"
        , []
        , []
        , Build(Anno(Str("hex-string-test-m"), Op("Nil", [])))
        )
      , SDefT(
          "b_8"
        , []
        , []
        , Build(Anno(Str("C"), Op("Nil", [])))
        )
      , SDefT(
          "c_8"
        , []
        , []
        , Build(Anno(Int("12"), Op("Nil", [])))
        )
      , SDefT(
          "d_8"
        , []
        , []
        , Build(Anno(Str("hex-string-test-n"), Op("Nil", [])))
        )
      , SDefT(
          "e_8"
        , []
        , []
        , Build(Anno(Str("D"), Op("Nil", [])))
        )
      , SDefT(
          "f_8"
        , []
        , []
        , Build(Anno(Int("13"), Op("Nil", [])))
        )
      , SDefT(
          "g_8"
        , []
        , []
        , Build(Anno(Str("hex-string-test-o"), Op("Nil", [])))
        )
      , SDefT(
          "h_8"
        , []
        , []
        , Build(Anno(Str("E"), Op("Nil", [])))
        )
      , SDefT(
          "i_8"
        , []
        , []
        , Build(Anno(Int("14"), Op("Nil", [])))
        )
      , SDefT(
          "j_8"
        , []
        , []
        , Build(Anno(Str("hex-string-test-p"), Op("Nil", [])))
        )
      , SDefT(
          "k_8"
        , []
        , []
        , Build(Anno(Str("F"), Op("Nil", [])))
        )
      , SDefT(
          "l_8"
        , []
        , []
        , Build(Anno(Int("15"), Op("Nil", [])))
        )
      , SDefT(
          "m_8"
        , []
        , []
        , Build(Anno(Str("hex-string-test-q"), Op("Nil", [])))
        )
      , SDefT(
          "n_8"
        , []
        , []
        , Build(Anno(Str("FF"), Op("Nil", [])))
        )
      , SDefT(
          "o_8"
        , []
        , []
        , Build(Anno(Int("255"), Op("Nil", [])))
        )
      , SDefT(
          "p_8"
        , []
        , []
        , Build(Anno(Str("hex-string-test-r"), Op("Nil", [])))
        )
      , SDefT(
          "q_8"
        , []
        , []
        , Build(Anno(Str("FFFF"), Op("Nil", [])))
        )
      , SDefT(
          "r_8"
        , []
        , []
        , Build(Anno(Int("65535"), Op("Nil", [])))
        )
      , SDefT(
          "hex_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("q_6"), [], [])
              , CallT(SVar("hex_string_to_int_0_0"), [], [])
              , CallT(SVar("r_6"), [], [])
              , CallT(SVar("s_6"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("t_6"), [], [])
                , CallT(SVar("hex_string_to_int_0_0"), [], [])
                , CallT(SVar("u_6"), [], [])
                , CallT(SVar("v_6"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("w_6"), [], [])
                  , CallT(SVar("hex_string_to_int_0_0"), [], [])
                  , CallT(SVar("x_6"), [], [])
                  , CallT(SVar("y_6"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("z_6"), [], [])
                    , CallT(SVar("hex_string_to_int_0_0"), [], [])
                    , CallT(SVar("a_7"), [], [])
                    , CallT(SVar("b_7"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("c_7"), [], [])
                      , CallT(SVar("hex_string_to_int_0_0"), [], [])
                      , CallT(SVar("d_7"), [], [])
                      , CallT(SVar("e_7"), [], [])
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("f_7"), [], [])
                        , CallT(SVar("hex_string_to_int_0_0"), [], [])
                        , CallT(SVar("g_7"), [], [])
                        , CallT(SVar("h_7"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ CallT(SVar("i_7"), [], [])
                          , CallT(SVar("hex_string_to_int_0_0"), [], [])
                          , CallT(SVar("j_7"), [], [])
                          , CallT(SVar("k_7"), [], [])
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("l_7"), [], [])
                            , CallT(SVar("hex_string_to_int_0_0"), [], [])
                            , CallT(SVar("m_7"), [], [])
                            , CallT(SVar("n_7"), [], [])
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ CallT(SVar("o_7"), [], [])
                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                              , CallT(SVar("p_7"), [], [])
                              , CallT(SVar("q_7"), [], [])
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ CallT(SVar("r_7"), [], [])
                                , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                , CallT(SVar("s_7"), [], [])
                                , CallT(SVar("t_7"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ CallT(SVar("u_7"), [], [])
                                  , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                  , CallT(SVar("v_7"), [], [])
                                  , CallT(SVar("w_7"), [], [])
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ CallT(SVar("x_7"), [], [])
                                    , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                    , CallT(SVar("y_7"), [], [])
                                    , CallT(SVar("z_7"), [], [])
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ CallT(SVar("a_8"), [], [])
                                      , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                      , CallT(SVar("b_8"), [], [])
                                      , CallT(SVar("c_8"), [], [])
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ CallT(SVar("d_8"), [], [])
                                        , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                        , CallT(SVar("e_8"), [], [])
                                        , CallT(SVar("f_8"), [], [])
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ CallT(SVar("g_8"), [], [])
                                          , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                          , CallT(SVar("h_8"), [], [])
                                          , CallT(SVar("i_8"), [], [])
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ CallT(SVar("j_8"), [], [])
                                            , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                            , CallT(SVar("k_8"), [], [])
                                            , CallT(SVar("l_8"), [], [])
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ CallT(SVar("m_8"), [], [])
                                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                              , CallT(SVar("n_8"), [], [])
                                              , CallT(SVar("o_8"), [], [])
                                              ]
                                            , []
                                            )
                                          , CallT(
                                              SVar("apply_test_4_0")
                                            , [ CallT(SVar("p_8"), [], [])
                                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                              , CallT(SVar("q_8"), [], [])
                                              , CallT(SVar("r_8"), [], [])
                                              ]
                                            , []
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["y_24", "z_24", "a_25"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("y_24")
                        , Anno(
                            Op("Cons", [Var("a_25"), Var("z_24")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("a_25"))
            )
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["d_34", "e_34"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("d_34"), Var("e_34")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("d_34"), Var("e_34")])
              , Id
              , PrimT("SSL_subtr", [], [Var("d_34"), Var("e_34")])
              )
            )
          )
        )
      , SDefT(
          "is_num_0_0"
        , []
        , []
        , Scope(
            ["h_0", "x_146", "f_0"]
          , Seq(
              Match(Var("h_0"))
            , Seq(
                Match(Var("f_0"))
              , Seq(
                  Match(Var("x_146"))
                , Seq(
                    Build(Var("f_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Int("48"), Op("Nil", []))
                            , Var("x_146")
                            , Anno(Int("57"), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(Var("h_0"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "char_to_digit_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["r_30", "w_10", "m_0", "x_10", "l_0", "k_0"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [Var("r_30"), Anno(Int("16"), Wld)]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("k_0"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("65"), Op("Nil", []))
                          , Var("r_30")
                          , Anno(Int("70"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("leq_leq_0_0"), [], [])
                    , Seq(
                        Build(Var("k_0"))
                      , Seq(
                          Match(Var("m_0"))
                        , Seq(
                            Match(Var("l_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Var("r_30"), Anno(Int("65"), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("subt_0_0"), [], [])
                              , Seq(
                                  Match(Var("x_10"))
                                , Seq(
                                    Build(Var("l_0"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op(
                                            ""
                                          , [Anno(Int("10"), Op("Nil", [])), Var("x_10")]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("add_0_0"), [], [])
                                      , Seq(
                                          Match(Var("w_10"))
                                        , Seq(Build(Var("m_0")), Build(Var("w_10")))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["q_30", "u_10", "p_0", "v_10", "o_0", "n_0"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("q_30"), Anno(Int("16"), Wld)]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("n_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Int("97"), Op("Nil", []))
                            , Var("q_30")
                            , Anno(Int("102"), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("leq_leq_0_0"), [], [])
                      , Seq(
                          Build(Var("n_0"))
                        , Seq(
                            Match(Var("p_0"))
                          , Seq(
                              Match(Var("o_0"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Var("q_30"), Anno(Int("97"), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("subt_0_0"), [], [])
                                , Seq(
                                    Match(Var("v_10"))
                                  , Seq(
                                      Build(Var("o_0"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op(
                                              ""
                                            , [Anno(Int("10"), Op("Nil", [])), Var("v_10")]
                                            )
                                          , Op("Nil", [])
                                          )
                                        )
                                      , Seq(
                                          CallT(SVar("add_0_0"), [], [])
                                        , Seq(
                                            Match(Var("u_10"))
                                          , Seq(Build(Var("p_0")), Build(Var("u_10")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Id
            , Scope(
                ["n_30", "o_30", "p_30", "q_0"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("n_30"), Var("p_30")])
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("q_0"))
                  , Seq(
                      Build(Var("n_30"))
                    , Seq(
                        CallT(SVar("is_num_0_0"), [], [])
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [Var("n_30"), Anno(Int("48"), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("subt_0_0"), [], [])
                          , Seq(
                              Match(Var("o_30"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("o_30"), Var("p_30")])
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("lt_0_0"), [], [])
                                , Seq(Build(Var("q_0")), Build(Var("o_30")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "FoldL_1_0"
        , [ VarDec(
              "z_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["m_28", "n_28", "o_28", "d_9", "r_0"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("n_28"), Var("m_28")])
                      , Wld
                      )
                    , Var("o_28")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("r_0"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("n_28"), Var("o_28")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("z_112"), [], [])
                  , Seq(
                      Match(Var("d_9"))
                    , Seq(
                        Build(Var("r_0"))
                      , Build(
                          Anno(
                            Op("", [Var("m_28"), Var("d_9")])
                          , Op("Nil", [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "foldl_1_0"
        , [ VarDec(
              "g_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "h_112"
              , []
              , []
              , GuardedLChoice(
                  Scope(
                    ["f_27"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [Anno(Op("Nil", []), Wld), Var("f_27")]
                          )
                        , Wld
                        )
                      )
                    , Build(Var("f_27"))
                    )
                  )
                , Id
                , Seq(
                    CallT(
                      SVar("FoldL_1_0")
                    , [CallT(SVar("g_112"), [], [])]
                    , []
                    )
                  , CallT(SVar("h_112"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("h_112"), [], [])
          )
        )
      , SDefT(
          "pos_chars_to_int_0_0"
        , []
        , []
        , Scope(
            ["k_30", "l_30", "m_30", "p_10", "t_0"]
          , Let(
              [ SDefT(
                  "s_8"
                , []
                , []
                , Scope(
                    ["q_10", "r_10", "x_0", "t_10", "w_0", "v_0", "s_10", "u_0"]
                  , Seq(
                      Match(Var("v_0"))
                    , Seq(
                        Match(Var("u_0"))
                      , Seq(
                          CallT(SVar("Fst_0_0"), [], [])
                        , Seq(
                            Match(Var("s_10"))
                          , Seq(
                              Build(Var("u_0"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("s_10"), Var("m_30")])
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("char_to_digit_0_0"), [], [])
                                , Seq(
                                    Match(Var("q_10"))
                                  , Seq(
                                      Build(Var("v_0"))
                                    , Seq(
                                        Match(Var("x_0"))
                                      , Seq(
                                          Match(Var("w_0"))
                                        , Seq(
                                            CallT(SVar("Snd_0_0"), [], [])
                                          , Seq(
                                              Match(Var("t_10"))
                                            , Seq(
                                                Build(Var("w_0"))
                                              , Seq(
                                                  Build(
                                                    Anno(
                                                      Op("", [Var("t_10"), Var("m_30")])
                                                    , Op("Nil", [])
                                                    )
                                                  )
                                                , Seq(
                                                    CallT(SVar("mul_0_0"), [], [])
                                                  , Seq(
                                                      Match(Var("r_10"))
                                                    , Seq(
                                                        Build(Var("x_0"))
                                                      , Seq(
                                                          Build(
                                                            Anno(
                                                              Op("", [Var("q_10"), Var("r_10")])
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        , CallT(SVar("add_0_0"), [], [])
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [ Anno(
                          Op("Cons", [Var("l_30"), Var("k_30")])
                        , Wld
                        )
                      , Var("m_30")
                      ]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("t_0"))
                , Seq(
                    Build(
                      Anno(
                        Op("", [Var("l_30"), Var("m_30")])
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("char_to_digit_0_0"), [], [])
                    , Seq(
                        Match(Var("p_10"))
                      , Seq(
                          Build(Var("t_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("k_30"), Var("p_10")])
                              , Op("Nil", [])
                              )
                            )
                          , CallT(
                              SVar("foldl_1_0")
                            , [CallT(SVar("s_8"), [], [])]
                            , []
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "mul_0_0"
        , []
        , []
        , Scope(
            ["j_34", "k_34"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("j_34"), Var("k_34")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_muli", [], [Var("j_34"), Var("k_34")])
              , Id
              , PrimT("SSL_mulr", [], [Var("j_34"), Var("k_34")])
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "foldr_3_0"
        , [ VarDec(
              "d_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "e_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "f_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("Nil_0_0"), [], [])
            , CallT(SVar("d_112"), [], [])
            )
          , Id
          , Scope(
              ["d_27", "e_27", "t_8", "b_1", "u_8", "v_8", "a_1", "y_0"]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("d_27"), Var("e_27")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("b_1"))
                , Seq(
                    Match(Var("y_0"))
                  , Seq(
                      Build(Var("d_27"))
                    , Seq(
                        CallT(SVar("f_112"), [], [])
                      , Seq(
                          Match(Var("u_8"))
                        , Seq(
                            Build(Var("y_0"))
                          , Seq(
                              Match(Var("a_1"))
                            , Seq(
                                Build(Var("e_27"))
                              , Seq(
                                  CallT(
                                    SVar("foldr_3_0")
                                  , [ CallT(SVar("d_112"), [], [])
                                    , CallT(SVar("e_112"), [], [])
                                    , CallT(SVar("f_112"), [], [])
                                    ]
                                  , []
                                  )
                                , Seq(
                                    Match(Var("v_8"))
                                  , Seq(
                                      Build(Var("a_1"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op("", [Var("u_8"), Var("v_8")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      , Seq(
                                          CallT(SVar("e_112"), [], [])
                                        , Seq(
                                            Match(Var("t_8"))
                                          , Seq(Build(Var("b_1")), Build(Var("t_8")))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "w_8"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "x_8"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "length_0_0"
        , []
        , []
        , CallT(
            SVar("foldr_3_0")
          , [ CallT(SVar("w_8"), [], [])
            , CallT(SVar("add_0_0"), [], [])
            , CallT(SVar("x_8"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "neg_chars_to_int_0_0"
        , []
        , []
        , Scope(
            ["i_30", "j_30", "n_10", "f_1", "o_10", "e_1", "d_1", "m_10", "c_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("45"), Wld), Var("j_30")]
                        )
                      , Wld
                      )
                    , Var("i_30")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("d_1"))
              , Seq(
                  Match(Var("c_1"))
                , Seq(
                    Build(Var("j_30"))
                  , Seq(
                      CallT(SVar("length_0_0"), [], [])
                    , Seq(
                        Match(Var("m_10"))
                      , Seq(
                          Build(Var("c_1"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("m_10"), Anno(Int("0"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("gt_0_0"), [], [])
                            , Seq(
                                Build(Var("d_1"))
                              , Seq(
                                  Match(Var("f_1"))
                                , Seq(
                                    Match(Var("e_1"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("j_30"), Var("i_30")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("pos_chars_to_int_0_0"), [], [])
                                      , Seq(
                                          Match(Var("o_10"))
                                        , Seq(
                                            Build(Var("e_1"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op(
                                                    ""
                                                  , [Anno(Int("-1"), Op("Nil", [])), Var("o_10")]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                CallT(SVar("mul_0_0"), [], [])
                                              , Seq(
                                                  Match(Var("n_10"))
                                                , Seq(Build(Var("f_1")), Build(Var("n_10")))
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "generic_chars_to_int_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("neg_chars_to_int_0_0"), [], [])
          , Id
          , CallT(SVar("pos_chars_to_int_0_0"), [], [])
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["r_63"]
          , Seq(
              Match(Var("r_63"))
            , PrimT("SSL_explode_string", [], [Var("r_63")])
            )
          )
        )
      , SDefT(
          "generic_string_to_int_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("explode_string_0_0"), [], [])
              , CallT(SVar("_id"), [], [])
              ]
            , []
            )
          , CallT(SVar("generic_chars_to_int_0_0"), [], [])
          )
        )
      , SDefT(
          "dec_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["f_10", "h_1"]
          , Seq(
              Match(Var("h_1"))
            , Seq(
                Match(Var("f_10"))
              , Seq(
                  Build(Var("h_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("f_10"), Anno(Int("10"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("generic_string_to_int_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "y_8"
        , []
        , []
        , Build(Anno(Str("dec-string-test-a"), Op("Nil", [])))
        )
      , SDefT(
          "z_8"
        , []
        , []
        , Build(Anno(Str("0"), Op("Nil", [])))
        )
      , SDefT(
          "a_9"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "b_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-b"), Op("Nil", [])))
        )
      , SDefT(
          "c_9"
        , []
        , []
        , Build(Anno(Str("1"), Op("Nil", [])))
        )
      , SDefT(
          "e_9"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "f_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-c"), Op("Nil", [])))
        )
      , SDefT(
          "g_9"
        , []
        , []
        , Build(Anno(Str("10"), Op("Nil", [])))
        )
      , SDefT(
          "h_9"
        , []
        , []
        , Build(Anno(Int("10"), Op("Nil", [])))
        )
      , SDefT(
          "i_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-d"), Op("Nil", [])))
        )
      , SDefT(
          "j_9"
        , []
        , []
        , Build(Anno(Str("100"), Op("Nil", [])))
        )
      , SDefT(
          "k_9"
        , []
        , []
        , Build(Anno(Int("100"), Op("Nil", [])))
        )
      , SDefT(
          "l_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-e"), Op("Nil", [])))
        )
      , SDefT(
          "m_9"
        , []
        , []
        , Build(Anno(Str("101"), Op("Nil", [])))
        )
      , SDefT(
          "n_9"
        , []
        , []
        , Build(Anno(Int("101"), Op("Nil", [])))
        )
      , SDefT(
          "o_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-f"), Op("Nil", [])))
        )
      , SDefT(
          "p_9"
        , []
        , []
        , Build(Anno(Str("34673"), Op("Nil", [])))
        )
      , SDefT(
          "q_9"
        , []
        , []
        , Build(Anno(Int("34673"), Op("Nil", [])))
        )
      , SDefT(
          "r_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-g"), Op("Nil", [])))
        )
      , SDefT(
          "s_9"
        , []
        , []
        , Build(Anno(Str("-0"), Op("Nil", [])))
        )
      , SDefT(
          "t_9"
        , []
        , []
        , Build(Anno(Int("-0"), Op("Nil", [])))
        )
      , SDefT(
          "u_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-h"), Op("Nil", [])))
        )
      , SDefT(
          "v_9"
        , []
        , []
        , Build(Anno(Str("-1"), Op("Nil", [])))
        )
      , SDefT(
          "w_9"
        , []
        , []
        , Build(Anno(Int("-1"), Op("Nil", [])))
        )
      , SDefT(
          "x_9"
        , []
        , []
        , Build(Anno(Str("dec-string-test-i"), Op("Nil", [])))
        )
      , SDefT(
          "y_9"
        , []
        , []
        , Build(Anno(Str("-10"), Op("Nil", [])))
        )
      , SDefT(
          "z_9"
        , []
        , []
        , Build(Anno(Int("-10"), Op("Nil", [])))
        )
      , SDefT(
          "a_10"
        , []
        , []
        , Build(Anno(Str("dec-string-test-j"), Op("Nil", [])))
        )
      , SDefT(
          "b_10"
        , []
        , []
        , Build(Anno(Str("-100"), Op("Nil", [])))
        )
      , SDefT(
          "c_10"
        , []
        , []
        , Build(Anno(Int("-100"), Op("Nil", [])))
        )
      , SDefT(
          "d_10"
        , []
        , []
        , Build(Anno(Str("dec-string-test-k"), Op("Nil", [])))
        )
      , SDefT(
          "g_10"
        , []
        , []
        , Build(Anno(Str("-101"), Op("Nil", [])))
        )
      , SDefT(
          "i_10"
        , []
        , []
        , Build(Anno(Int("-101"), Op("Nil", [])))
        )
      , SDefT(
          "j_10"
        , []
        , []
        , Build(Anno(Str("dec-string-test-l"), Op("Nil", [])))
        )
      , SDefT(
          "k_10"
        , []
        , []
        , Build(Anno(Str("-34673"), Op("Nil", [])))
        )
      , SDefT(
          "l_10"
        , []
        , []
        , Build(Anno(Int("-34673"), Op("Nil", [])))
        )
      , SDefT(
          "dec_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("y_8"), [], [])
              , CallT(SVar("dec_string_to_int_0_0"), [], [])
              , CallT(SVar("z_8"), [], [])
              , CallT(SVar("a_9"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("b_9"), [], [])
                , CallT(SVar("dec_string_to_int_0_0"), [], [])
                , CallT(SVar("c_9"), [], [])
                , CallT(SVar("e_9"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("f_9"), [], [])
                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                  , CallT(SVar("g_9"), [], [])
                  , CallT(SVar("h_9"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("i_9"), [], [])
                    , CallT(SVar("dec_string_to_int_0_0"), [], [])
                    , CallT(SVar("j_9"), [], [])
                    , CallT(SVar("k_9"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("l_9"), [], [])
                      , CallT(SVar("dec_string_to_int_0_0"), [], [])
                      , CallT(SVar("m_9"), [], [])
                      , CallT(SVar("n_9"), [], [])
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("o_9"), [], [])
                        , CallT(SVar("dec_string_to_int_0_0"), [], [])
                        , CallT(SVar("p_9"), [], [])
                        , CallT(SVar("q_9"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ CallT(SVar("r_9"), [], [])
                          , CallT(SVar("dec_string_to_int_0_0"), [], [])
                          , CallT(SVar("s_9"), [], [])
                          , CallT(SVar("t_9"), [], [])
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("u_9"), [], [])
                            , CallT(SVar("dec_string_to_int_0_0"), [], [])
                            , CallT(SVar("v_9"), [], [])
                            , CallT(SVar("w_9"), [], [])
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ CallT(SVar("x_9"), [], [])
                              , CallT(SVar("dec_string_to_int_0_0"), [], [])
                              , CallT(SVar("y_9"), [], [])
                              , CallT(SVar("z_9"), [], [])
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ CallT(SVar("a_10"), [], [])
                                , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                , CallT(SVar("b_10"), [], [])
                                , CallT(SVar("c_10"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ CallT(SVar("d_10"), [], [])
                                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                  , CallT(SVar("g_10"), [], [])
                                  , CallT(SVar("i_10"), [], [])
                                  ]
                                , []
                                )
                              , CallT(
                                  SVar("apply_test_4_0")
                                , [ CallT(SVar("j_10"), [], [])
                                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                  , CallT(SVar("k_10"), [], [])
                                  , CallT(SVar("l_10"), [], [])
                                  ]
                                , []
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "leq_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "lt_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("lt_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "comp_comp_2_0"
        , [ VarDec(
              "a_115"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_115"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["t_33", "u_33", "v_33", "i_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("t_33"), Var("u_33"), Var("v_33")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("i_1"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("t_33"), Var("u_33")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("a_115"), [], [])
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("u_33"), Var("v_33")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("b_115"), [], [])
                      , Build(Var("i_1"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "lt_lt_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("lt_0_0"), [], [])
            , CallT(SVar("lt_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "y_10"
        , []
        , []
        , Build(Anno(Str("x <= y <= z a"), Op("Nil", [])))
        )
      , SDefT(
          "z_10"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("3"), Op("Nil", []))
                , Anno(Int("4"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "a_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("3"), Op("Nil", []))
                , Anno(Int("4"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "b_11"
        , []
        , []
        , Build(Anno(Str("x <  y <  z b"), Op("Nil", [])))
        )
      , SDefT(
          "c_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("3"), Op("Nil", []))
                , Anno(Int("4"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "d_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("3"), Op("Nil", []))
                , Anno(Int("4"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "e_11"
        , []
        , []
        , Build(Anno(Str("x <= y <= z c"), Op("Nil", [])))
        )
      , SDefT(
          "f_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "g_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "h_11"
        , []
        , []
        , Build(Anno(Str("x <  y <= z d"), Op("Nil", [])))
        )
      , SDefT(
          "i_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "j_11"
        , []
        , []
        , Build(Anno(Str("x <= y <= z e"), Op("Nil", [])))
        )
      , SDefT(
          "k_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("2"), Op("Nil", []))
                , Anno(Int("1"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "l_11"
        , []
        , []
        , Build(Anno(Str("x <= y <= z f"), Op("Nil", [])))
        )
      , SDefT(
          "m_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("1"), Op("Nil", []))
                , Anno(Int("2"), Op("Nil", []))
                , Anno(Int("1"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "lt_lt_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("y_10"), [], [])
              , CallT(SVar("leq_leq_0_0"), [], [])
              , CallT(SVar("z_10"), [], [])
              , CallT(SVar("a_11"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("b_11"), [], [])
                , CallT(SVar("lt_lt_0_0"), [], [])
                , CallT(SVar("c_11"), [], [])
                , CallT(SVar("d_11"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("e_11"), [], [])
                  , CallT(SVar("leq_leq_0_0"), [], [])
                  , CallT(SVar("f_11"), [], [])
                  , CallT(SVar("g_11"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ CallT(SVar("h_11"), [], [])
                    , CallT(SVar("lt_leq_0_0"), [], [])
                    , CallT(SVar("i_11"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_and_fail_3_0")
                    , [ CallT(SVar("j_11"), [], [])
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      , CallT(SVar("k_11"), [], [])
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_and_fail_3_0")
                    , [ CallT(SVar("l_11"), [], [])
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      , CallT(SVar("m_11"), [], [])
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["d_35"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("d_35"), Var("d_35")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "ltS_0_0"
        , []
        , []
        , Scope(
            ["j_1"]
          , Seq(
              Match(Var("j_1"))
            , Seq(
                CallT(
                  SVar("_2_0")
                , [ CallT(SVar("string_to_int_0_0"), [], [])
                  , CallT(SVar("string_to_int_0_0"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(SVar("lt_0_0"), [], [])
                , Build(Var("j_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "int_to_string_0_0"
        , []
        , []
        , Scope(
            ["s_30"]
          , Seq(
              Match(Var("s_30"))
            , PrimT("SSL_int_to_string", [], [Var("s_30")])
            )
          )
        )
      , SDefT(
          "string_to_int_0_0"
        , []
        , []
        , Scope(
            ["t_30"]
          , Seq(
              Match(Var("t_30"))
            , PrimT("SSL_string_to_int", [], [Var("t_30")])
            )
          )
        )
      , SDefT(
          "addS_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("string_to_int_0_0"), [], [])
              , CallT(SVar("string_to_int_0_0"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(SVar("add_0_0"), [], [])
            , CallT(SVar("int_to_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "n_11"
        , []
        , []
        , Build(Anno(Str("test3"), Op("Nil", [])))
        )
      , SDefT(
          "o_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("5"), Op("Nil", []))
                , Anno(Str("3"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "p_11"
        , []
        , []
        , Build(Anno(Str("8"), Op("Nil", [])))
        )
      , SDefT(
          "q_11"
        , []
        , []
        , Build(Anno(Str("test3"), Op("Nil", [])))
        )
      , SDefT(
          "r_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("3"), Op("Nil", []))
                , Anno(Str("5"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "s_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("3"), Op("Nil", []))
                , Anno(Str("5"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "test3_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("n_11"), [], [])
              , CallT(SVar("addS_0_0"), [], [])
              , CallT(SVar("o_11"), [], [])
              , CallT(SVar("p_11"), [], [])
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("q_11"), [], [])
              , CallT(SVar("ltS_0_0"), [], [])
              , CallT(SVar("r_11"), [], [])
              , CallT(SVar("s_11"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["w_24", "x_24"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("x_24"), Var("w_24")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("x_24"))
            )
          )
        )
      , SDefT(
          "repeat_2_0"
        , [ VarDec(
              "r_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "s_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "t_125"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(SVar("r_125"), [], [])
                  , CallT(SVar("t_125"), [], [])
                  )
                , Id
                , CallT(SVar("s_125"), [], [])
                )
              )
            ]
          , CallT(SVar("t_125"), [], [])
          )
        )
      , SDefT(
          "repeat_1_0"
        , [ VarDec(
              "u_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("repeat_2_0")
          , [ CallT(SVar("u_125"), [], [])
            , CallT(SVar("_id"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "t_11"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("u_11"), [], [])
            , CallT(SVar("inc_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "u_11"
        , []
        , []
        , Scope(
            ["o_12", "p_12", "o_1", "r_12", "n_1", "m_1", "q_12", "l_1"]
          , Seq(
              Match(Var("m_1"))
            , Seq(
                Match(Var("l_1"))
              , Seq(
                  Match(Var("q_12"))
                , Seq(
                    Build(Var("l_1"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("q_12"), Anno(Int("2"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("divi_0_0"), [], [])
                      , Seq(
                          Match(Var("o_12"))
                        , Seq(
                            Build(Var("m_1"))
                          , Seq(
                              Match(Var("o_1"))
                            , Seq(
                                Match(Var("n_1"))
                              , Seq(
                                  Match(Var("r_12"))
                                , Seq(
                                    Build(Var("n_1"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op(
                                            ""
                                          , [Var("r_12"), Anno(Int("2"), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("mod_0_0"), [], [])
                                      , Seq(
                                          Match(Anno(Int("0"), Wld))
                                        , Seq(
                                            Match(Var("p_12"))
                                          , Seq(
                                              Build(Var("o_1"))
                                            , Seq(
                                                Build(
                                                  Anno(
                                                    Op("", [Var("o_12"), Var("p_12")])
                                                  , Op("Nil", [])
                                                  )
                                                )
                                              , CallT(SVar("Fst_0_0"), [], [])
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "log2_0_0"
        , []
        , []
        , Scope(
            ["s_12", "n_12", "k_1"]
          , Seq(
              Match(Var("k_1"))
            , Seq(
                Match(Var("n_12"))
              , Seq(
                  Build(Var("k_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("n_12"), Anno(Int("0"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(
                        SVar("repeat_1_0")
                      , [CallT(SVar("t_11"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(
                          Anno(
                            Op(
                              ""
                            , [Anno(Int("1"), Wld), Var("s_12")]
                            )
                          , Wld
                          )
                        )
                      , Build(Var("s_12"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "m_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "n_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "v_11"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("sunit_create_input_1_0")
                    , [CallT(SVar("o_104"), [], [])]
                    , []
                    )
                  , GuardedLChoice(CallT(SVar("n_104"), [], []), Fail, Id)
                  )
                , Id
                , Seq(
                    Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                  , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                  )
                )
              )
            ]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("m_104"), [], [])
              , CallT(SVar("v_11"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "w_11"
        , []
        , []
        , Build(Anno(Op("", []), Op("Nil", [])))
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "j_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("j_104"), [], [])
            , CallT(SVar("k_104"), [], [])
            , CallT(SVar("l_104"), [], [])
            , CallT(SVar("w_11"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "mod_0_0"
        , []
        , []
        , Scope(
            ["v_34", "w_34"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("v_34"), Var("w_34")])
                , Wld
                )
              )
            , PrimT("SSL_mod", [], [Var("v_34"), Var("w_34")])
            )
          )
        )
      , SDefT(
          "divi_0_0"
        , []
        , []
        , Scope(
            ["r_34", "s_34"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("r_34"), Var("s_34")])
                , Wld
                )
              )
            , PrimT("SSL_divi", [], [Var("r_34"), Var("s_34")])
            )
          )
        )
      , SDefT(
          "x_11"
        , []
        , []
        , Build(Anno(Str("test2a"), Op("Nil", [])))
        )
      , SDefT(
          "y_11"
        , []
        , []
        , Scope(
            ["c_0", "e_0", "s_1", "j_0", "r_1", "q_1", "g_0", "p_1"]
          , Seq(
              Match(Var("q_1"))
            , Seq(
                Match(Var("p_1"))
              , Seq(
                  Match(Var("g_0"))
                , Seq(
                    Build(Var("p_1"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("g_0"), Anno(Int("2"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("divi_0_0"), [], [])
                      , Seq(
                          Match(Var("c_0"))
                        , Seq(
                            Build(Var("q_1"))
                          , Seq(
                              Match(Var("s_1"))
                            , Seq(
                                Match(Var("r_1"))
                              , Seq(
                                  Match(Var("j_0"))
                                , Seq(
                                    Build(Var("r_1"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op(
                                            ""
                                          , [Var("j_0"), Anno(Int("2"), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("mod_0_0"), [], [])
                                      , Seq(
                                          Match(Anno(Int("0"), Wld))
                                        , Seq(
                                            Match(Var("e_0"))
                                          , Seq(
                                              Build(Var("s_1"))
                                            , Build(
                                                Anno(
                                                  Op("", [Var("c_0"), Var("e_0")])
                                                , Op("Nil", [])
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "z_11"
        , []
        , []
        , Build(Anno(Int("16"), Op("Nil", [])))
        )
      , SDefT(
          "a_12"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("8"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "b_12"
        , []
        , []
        , Build(Anno(Str("test2b"), Op("Nil", [])))
        )
      , SDefT(
          "c_12"
        , []
        , []
        , Build(Anno(Int("16"), Op("Nil", [])))
        )
      , SDefT(
          "d_12"
        , []
        , []
        , Build(Anno(Int("4"), Op("Nil", [])))
        )
      , SDefT(
          "e_12"
        , []
        , []
        , Build(Anno(Str("test2c"), Op("Nil", [])))
        )
      , SDefT(
          "f_12"
        , []
        , []
        , Build(Anno(Int("6"), Op("Nil", [])))
        )
      , SDefT(
          "test2_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("x_11"), [], [])
              , CallT(SVar("y_11"), [], [])
              , CallT(SVar("z_11"), [], [])
              , CallT(SVar("a_12"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("b_12"), [], [])
                , CallT(SVar("log2_0_0"), [], [])
                , CallT(SVar("c_12"), [], [])
                , CallT(SVar("d_12"), [], [])
                ]
              , []
              )
            , CallT(
                SVar("apply_and_fail_3_0")
              , [ CallT(SVar("e_12"), [], [])
                , CallT(SVar("log2_0_0"), [], [])
                , CallT(SVar("f_12"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["x_34", "y_34", "t_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("x_34"), Var("y_34")])
                , Wld
                )
              )
            , Seq(
                Match(Var("t_1"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("x_34"), Var("y_34")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("x_34"), Var("y_34")])
                  )
                , Build(Var("t_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "leq_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("gt_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "g_12"
        , []
        , []
        , Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "k_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("k_103"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [CallT(SVar("g_12"), [], [])]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["v_1", "m_151", "u_1"]
          , Seq(
              Match(Var("v_1"))
            , Seq(
                Match(Var("u_1"))
              , Seq(
                  Match(Var("m_151"))
                , Seq(
                    Build(Var("u_1"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [Var("m_151"), Anno(Op("Nil", []), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("v_1"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "k_127"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["w_1"]
          , Seq(
              Match(Var("w_1"))
            , Seq(
                CallT(SVar("k_127"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("w_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "h_12"
        , []
        , []
        , Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "j_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("j_103"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [CallT(SVar("h_12"), [], [])]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("_id"), [], [])
            , CallT(SVar("inc_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["x_33", "y_33"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("x_33"), Var("y_33")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("x_33"), Var("y_33")])
              , Id
              , PrimT("SSL_addr", [], [Var("x_33"), Var("y_33")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["l_12", "x_1"]
          , Seq(
              Match(Var("x_1"))
            , Seq(
                Match(Var("l_12"))
              , Seq(
                  Build(Var("x_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("l_12"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("inc_0_0"), [], [])
            , CallT(SVar("_id"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "l_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_1"]
          , Seq(
              Match(Var("y_1"))
            , Seq(
                CallT(SVar("l_103"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("y_1"))
                  , GuardedLChoice(
                      Scope(
                        ["z_1"]
                      , Seq(
                          Match(Var("z_1"))
                        , Seq(
                            CallT(SVar("m_103"), [], [])
                          , Seq(
                              Build(Var("z_1"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "j_12"
        , []
        , []
        , Build(Anno(Str("  result not equal : "), Op("Nil", [])))
        )
      , SDefT(
          "k_12"
        , []
        , []
        , Build(Anno(Str("  expected         : "), Op("Nil", [])))
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "y_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_14", "v_14"]
          , Let(
              [ SDefT(
                  "i_12"
                , []
                , []
                , Seq(
                    GuardedLChoice(
                      Seq(
                        CallT(
                          SVar("sunit_create_input_1_0")
                        , [CallT(SVar("a_104"), [], [])]
                        , []
                        )
                      , CallT(SVar("z_103"), [], [])
                      )
                    , Id
                    , Seq(
                        Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                      , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                      )
                    )
                  , Seq(
                      Match(Var("u_14"))
                    , Seq(
                        CallT(
                          SVar("sunit_create_output_1_0")
                        , [CallT(SVar("b_104"), [], [])]
                        , []
                        )
                      , Seq(
                          Match(Var("v_14"))
                        , GuardedLChoice(
                            Seq(Build(Var("v_14")), Match(Var("u_14")))
                          , Id
                          , Seq(
                              Build(Var("u_14"))
                            , Seq(
                                CallT(
                                  SVar("debug_1_0")
                                , [CallT(SVar("j_12"), [], [])]
                                , []
                                )
                              , Seq(
                                  Build(Var("v_14"))
                                , Seq(
                                    CallT(
                                      SVar("debug_1_0")
                                    , [CallT(SVar("k_12"), [], [])]
                                    , []
                                    )
                                  , Fail
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , CallT(
                SVar("do_test_2_0")
              , [ CallT(SVar("y_103"), [], [])
                , CallT(SVar("i_12"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "m_12"
        , []
        , []
        , Build(Anno(Str("test1"), Op("Nil", [])))
        )
      , SDefT(
          "t_12"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("5"), Op("Nil", []))
                , Anno(Int("5"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "u_12"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("5"), Op("Nil", []))
                , Anno(Int("5"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "test1_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("m_12"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("t_12"), [], [])
            , CallT(SVar("u_12"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "v_12"
        , []
        , []
        , Match(Anno(Int("0"), Wld))
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("_id"), [], [])
            , CallT(SVar("v_12"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "i_91"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_91"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["g_2", "e_2", "f_2", "h_2", "i_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("e_2"), Var("f_2")])
                , Var("g_2")
                )
              )
            , Seq(
                Build(Var("e_2"))
              , Seq(
                  CallT(SVar("i_91"), [], [])
                , Seq(
                    Match(Var("h_2"))
                  , Seq(
                      Build(Var("f_2"))
                    , Seq(
                        CallT(SVar("j_91"), [], [])
                      , Seq(
                          Match(Var("i_2"))
                        , Build(
                            Anno(
                              Op("", [Var("h_2"), Var("i_2")])
                            , Var("g_2")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "w_12"
        , []
        , []
        , CallT(
            SVar("debug_1_0")
          , [CallT(SVar("y_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "x_12"
        , []
        , []
        , CallT(
            SVar("debug_1_0")
          , [CallT(SVar("z_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "y_12"
        , []
        , []
        , Build(Anno(Str("successes: "), Op("Nil", [])))
        )
      , SDefT(
          "z_12"
        , []
        , []
        , Build(Anno(Str("failures: "), Op("Nil", [])))
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("w_12"), [], [])
            , CallT(SVar("x_12"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["a_67", "b_67", "a_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("a_67"), Var("b_67")])
                , Wld
                )
              )
            , Seq(
                Match(Var("a_2"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("a_67"), Var("b_67")])
                , Build(Var("a_2"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "t_127"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_2", "n_151", "o_151", "c_2", "b_2"]
          , Seq(
              Match(Var("d_2"))
            , Seq(
                Match(Var("b_2"))
              , Seq(
                  CallT(SVar("t_127"), [], [])
                , Seq(
                    Match(Var("n_151"))
                  , Seq(
                      Build(Var("b_2"))
                    , Seq(
                        Match(Var("c_2"))
                      , Seq(
                          Match(Var("o_151"))
                        , Seq(
                            Build(Var("c_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Anno(Op("stderr", []), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Var("n_151")
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [Var("o_151"), Anno(Op("Nil", []), Op("Nil", []))]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("printnl_0_0"), [], [])
                              , Build(Var("d_2"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "a_13"
        , []
        , []
        , Build(Anno(Str("test suite: "), Op("Nil", [])))
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "w_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("w_103"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [CallT(SVar("a_13"), [], [])]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("x_103"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "b_13"
        , []
        , []
        , Build(Anno(Str("integers-test"), Op("Nil", [])))
        )
      , SDefT(
          "c_13"
        , []
        , []
        , Seq(
            CallT(SVar("test1_0_0"), [], [])
          , Seq(
              CallT(SVar("test2_0_0"), [], [])
            , Seq(
                CallT(SVar("test3_0_0"), [], [])
              , Seq(
                  CallT(SVar("lt_lt_test_0_0"), [], [])
                , Seq(
                    CallT(SVar("dec_string_test_0_0"), [], [])
                  , Seq(
                      CallT(SVar("hex_string_test_0_0"), [], [])
                    , CallT(SVar("bin_string_test_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ CallT(SVar("b_13"), [], [])
            , CallT(SVar("c_13"), [], [])
            ]
          , []
          )
        )
      ]
    )
  ]
)
