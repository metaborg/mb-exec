Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "set_eq_test_5_0_0"
        , []
        , []
        , Scope(
            ["i_0", "j_0", "l_0", "k_0"]
          , Seq(
              Seq(
                Match(Var("k_0"))
              , Seq(
                  Build(Anno(Str("set-eq-test-5"), Op("Nil", [])))
                , Seq(Match(Var("i_0")), Build(Var("k_0")))
                )
              )
            , Seq(
                Match(Var("l_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("2"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("4"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("1"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("2"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    Match(Var("j_0"))
                  , Seq(
                      Build(Var("l_0"))
                    , CallT(
                        SVar("apply_and_fail_1_2")
                      , [ CallT(
                            SVar("set_eq_1_0")
                          , [CallT(SVar("eq_0_0"), [], [])]
                          , []
                          )
                        ]
                      , [Var("i_0"), Var("j_0")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "set_eq_test_4_0_0"
        , []
        , []
        , Scope(
            ["g_0", "h_0", "n_0", "m_0"]
          , Seq(
              Seq(
                Match(Var("m_0"))
              , Seq(
                  Build(Anno(Str("set-eq-test-4"), Op("Nil", [])))
                , Seq(Match(Var("g_0")), Build(Var("m_0")))
                )
              )
            , Seq(
                Match(Var("n_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("2"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("4"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("1"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("2"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    Match(Var("h_0"))
                  , Seq(
                      Build(Var("n_0"))
                    , CallT(
                        SVar("apply_and_fail_1_2")
                      , [ CallT(
                            SVar("set_eq_1_0")
                          , [CallT(SVar("eq_0_0"), [], [])]
                          , []
                          )
                        ]
                      , [Var("g_0"), Var("h_0")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "set_eq_test_3_0_0"
        , []
        , []
        , Scope(
            ["e_0", "f_0", "p_0", "o_0"]
          , Seq(
              Seq(
                Match(Var("o_0"))
              , Seq(
                  Build(Anno(Str("set-eq-test-3"), Op("Nil", [])))
                , Seq(Match(Var("e_0")), Build(Var("o_0")))
                )
              )
            , Seq(
                Match(Var("p_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("2"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("4"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    Match(Var("f_0"))
                  , Seq(
                      Build(Var("p_0"))
                    , CallT(
                        SVar("apply_and_fail_1_2")
                      , [ CallT(
                            SVar("set_eq_1_0")
                          , [CallT(SVar("eq_0_0"), [], [])]
                          , []
                          )
                        ]
                      , [Var("e_0"), Var("f_0")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "w_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("w_86"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("y_86"), [], [])]
                  , []
                  )
                , GuardedLChoice(CallT(SVar("x_86"), [], []), Fail, Id)
                )
              , Id
              , Seq(
                  Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "t_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "v_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("t_86"), [], [])
            , CallT(SVar("u_86"), [], [])
            , CallT(SVar("v_86"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_1_2"
        , [ VarDec(
              "d_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , [ VarDec("n_9", ConstType(Sort("ATerm", [])))
          , VarDec("o_9", ConstType(Sort("ATerm", [])))
          ]
        , CallT(
            SVar("apply_and_fail_3_0")
          , [ Build(Var("n_9"))
            , CallT(SVar("d_86"), [], [])
            , Build(Var("o_9"))
            ]
          , []
          )
        )
      , SDefT(
          "set_eq_test_2_0_0"
        , []
        , []
        , Scope(
            ["c_0", "d_0", "r_0", "q_0"]
          , Seq(
              Seq(
                Match(Var("q_0"))
              , Seq(
                  Build(Anno(Str("set-eq-test-2"), Op("Nil", [])))
                , Seq(Match(Var("c_0")), Build(Var("q_0")))
                )
              )
            , Seq(
                Match(Var("r_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("2"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("4"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("4"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("1"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("0"), Op("Nil", []))
                                                , Anno(
                                                    Op(
                                                      "Cons"
                                                    , [ Anno(Int("2"), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  , Op("Nil", [])
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    Match(Var("d_0"))
                  , Seq(
                      Build(Var("r_0"))
                    , CallT(
                        SVar("apply_and_fail_1_2")
                      , [ CallT(
                            SVar("set_eq_1_0")
                          , [CallT(SVar("eq_0_0"), [], [])]
                          , []
                          )
                        ]
                      , [Var("c_0"), Var("d_0")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "x_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "y_95"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("x_95"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("y_95"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("y_95"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "g_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["o_25", "e_124", "s_0"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("g_97"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Id, Match(Var("o_25"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("s_0"))
              , Seq(
                  Match(Var("e_124"))
                , Seq(
                    Build(Var("s_0"))
                  , Build(
                      Anno(
                        Op("", [Var("e_124"), Var("o_25")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "subset_gen_2_0"
        , [ VarDec(
              "k_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_0"]
          , Seq(
              Match(Var("u_0"))
            , Seq(
                Let(
                  [ SDefT(
                      "m_100"
                    , []
                    , []
                    , Scope(
                        ["n_45", "o_45", "p_45", "q_45", "r_45"]
                      , GuardedLChoice(
                          CallT(
                            SVar("_2_0")
                          , [ CallT(SVar("Nil_0_0"), [], [])
                            , CallT(SVar("l_100"), [], [])
                            ]
                          , []
                          )
                        , Id
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [ Anno(
                                      Op("Cons", [Var("n_45"), Var("o_45")])
                                    , Wld
                                    )
                                  , Var("r_45")
                                  ]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Build(Var("r_45"))
                            , Seq(
                                CallT(
                                  SVar("split_fetch_1_0")
                                , [ Scope(
                                      ["s_45", "a_131", "t_0"]
                                    , Seq(
                                        Match(Var("s_45"))
                                      , Seq(
                                          Match(Var("t_0"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op("", [Var("n_45"), Var("s_45")])
                                              , Op("Nil", [])
                                              )
                                            )
                                          , Seq(
                                              CallT(SVar("k_100"), [], [])
                                            , Seq(
                                                Match(Var("a_131"))
                                              , Seq(Build(Var("t_0")), Build(Var("a_131")))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(SVar("conc_0_0"), [], [])
                                , Seq(
                                    Match(Var("q_45"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("o_45"), Var("q_45")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , CallT(SVar("m_100"), [], [])
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                , CallT(SVar("m_100"), [], [])
                )
              , Build(Var("u_0"))
              )
            )
          )
        )
      , SDefT(
          "set_eq_1_0"
        , [ VarDec(
              "h_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("subset_gen_2_0")
          , [ CallT(SVar("h_100"), [], [])
            , Match(Anno(Op("Nil", []), Wld))
            ]
          , []
          )
        )
      , SDefT(
          "apply_test_3_0"
        , [ VarDec(
              "m_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "n_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("m_86"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("o_86"), [], [])]
                  , []
                  )
                , CallT(SVar("n_86"), [], [])
                )
              , Id
              , Seq(
                  Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_test_1_2"
        , [ VarDec(
              "b_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , [ VarDec("i_9", ConstType(Sort("ATerm", [])))
          , VarDec("j_9", ConstType(Sort("ATerm", [])))
          ]
        , CallT(
            SVar("apply_test_3_0")
          , [ Build(Var("i_9"))
            , CallT(SVar("b_86"), [], [])
            , Build(Var("j_9"))
            ]
          , []
          )
        )
      , SDefT(
          "set_eq_test_1_0_0"
        , []
        , []
        , Scope(
            ["a_0", "b_0", "y_0", "v_0"]
          , Seq(
              Seq(
                Match(Var("v_0"))
              , Seq(
                  Build(Anno(Str("set-eq-test-1"), Op("Nil", [])))
                , Seq(Match(Var("a_0")), Build(Var("v_0")))
                )
              )
            , Seq(
                Match(Var("y_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("2"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("4"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("4"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("1"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("3"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("2"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    Match(Var("b_0"))
                  , Seq(
                      Build(Var("y_0"))
                    , CallT(
                        SVar("apply_test_1_2")
                      , [ CallT(
                            SVar("set_eq_1_0")
                          , [CallT(SVar("eq_0_0"), [], [])]
                          , []
                          )
                        ]
                      , [Var("a_0"), Var("b_0")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test4e_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test4e"), Op("Nil", [])))
            , CallT(SVar("sym_diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test4d_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test4d"), Op("Nil", [])))
            , CallT(SVar("sym_diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test4c_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test4c"), Op("Nil", [])))
            , CallT(SVar("sym_diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("c"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("d"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test4b_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test4b"), Op("Nil", [])))
            , CallT(SVar("sym_diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("d"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "Swap_0_0"
        , []
        , []
        , Scope(
            ["t_20", "u_20"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("u_20"), Var("t_20")])
                , Wld
                )
              )
            , Build(
                Anno(
                  Op("", [Var("t_20"), Var("u_20")])
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "sym_diff_1_0"
        , [ VarDec(
              "r_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["e_131", "f_131", "b_1", "a_1"]
          , Seq(
              Seq(
                Match(Var("a_1"))
              , Seq(
                  CallT(
                    SVar("diff_1_0")
                  , [CallT(SVar("r_100"), [], [])]
                  , []
                  )
                , Seq(Match(Var("e_131")), Build(Var("a_1")))
                )
              )
            , Seq(
                Match(Var("b_1"))
              , Seq(
                  CallT(SVar("Swap_0_0"), [], [])
                , Seq(
                    CallT(
                      SVar("diff_1_0")
                    , [CallT(SVar("r_100"), [], [])]
                    , []
                    )
                  , Seq(
                      Match(Var("f_131"))
                    , Seq(
                        Build(Var("b_1"))
                      , Seq(
                          Build(
                            Anno(
                              Op("", [Var("e_131"), Var("f_131")])
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("union_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "sym_diff_0_0"
        , []
        , []
        , CallT(
            SVar("sym_diff_1_0")
          , [CallT(SVar("eq_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "test4a_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test4a"), Op("Nil", [])))
            , CallT(SVar("sym_diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("c"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str("d"), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test3e_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test3e"), Op("Nil", [])))
            , CallT(SVar("diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test3d_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test3d"), Op("Nil", [])))
            , CallT(SVar("diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test3c_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test3c"), Op("Nil", [])))
            , CallT(SVar("diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test3b_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test3b"), Op("Nil", [])))
            , CallT(SVar("diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "diff_1_0"
        , [ VarDec(
              "p_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_45", "w_45", "d_131", "c_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_45"), Var("v_45")])
                , Wld
                )
              )
            , Seq(
                Match(Var("c_1"))
              , Seq(
                  Let(
                    [ SDefT(
                        "q_100"
                      , []
                      , []
                      , GuardedLChoice(
                          CallT(SVar("Nil_0_0"), [], [])
                        , Id
                        , GuardedLChoice(
                            Seq(
                              CallT(
                                SVar("HdMember_p__2_0")
                              , [CallT(SVar("p_100"), [], []), Build(Var("v_45"))]
                              , []
                              )
                            , CallT(SVar("q_100"), [], [])
                            )
                          , Id
                          , CallT(
                              SVar("Cons_2_0")
                            , [Id, CallT(SVar("q_100"), [], [])]
                            , []
                            )
                          )
                        )
                      )
                    ]
                  , Seq(
                      Build(Var("w_45"))
                    , CallT(SVar("q_100"), [], [])
                    )
                  )
                , Seq(
                    Match(Var("d_131"))
                  , Seq(Build(Var("c_1")), Build(Var("d_131")))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "UfShift_0_0"
        , []
        , []
        , Scope(
            ["d_69", "e_69", "f_69"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Var("e_69")
                    , Anno(
                        Op("Cons", [Var("d_69"), Var("f_69")])
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("d_69"), Var("e_69")])
                      , Op("Nil", [])
                      )
                    , Var("f_69")
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "concat_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "s_95"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , Scope(
                    ["t_24", "u_24", "u_123", "d_1"]
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("t_24"), Var("u_24")])
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("d_1"))
                      , Seq(
                          Build(Var("t_24"))
                        , Seq(
                            CallT(
                              SVar("at_end_1_0")
                            , [Seq(
                                 Build(Var("u_24"))
                               , CallT(SVar("s_95"), [], [])
                               )]
                            , []
                            )
                          , Seq(
                              Match(Var("u_123"))
                            , Seq(Build(Var("d_1")), Build(Var("u_123")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("s_95"), [], [])
          )
        )
      , SDefT(
          "at_end_1_0"
        , [ VarDec(
              "v_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "w_95"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("w_95"), [], [])]
                  , []
                  )
                , Id
                , Seq(
                    CallT(SVar("Nil_0_0"), [], [])
                  , CallT(SVar("v_95"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("w_95"), [], [])
          )
        )
      , SDefT(
          "conc_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["q_24", "r_24", "s_123", "e_1"]
            , Seq(
                Match(
                  Anno(
                    Op("", [Var("q_24"), Var("r_24")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("e_1"))
                , Seq(
                    Build(Var("q_24"))
                  , Seq(
                      CallT(SVar("at_end_1_0"), [Build(Var("r_24"))], [])
                    , Seq(
                        Match(Var("s_123"))
                      , Seq(Build(Var("e_1")), Build(Var("s_123")))
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["s_24", "t_123", "f_1"]
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("s_24"))
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("f_1"))
                , Seq(
                    Build(Var("s_24"))
                  , Seq(
                      CallT(SVar("concat_0_0"), [], [])
                    , Seq(
                        Match(Var("t_123"))
                      , Seq(Build(Var("f_1")), Build(Var("t_123")))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Zip3_0_0"
        , []
        , []
        , Scope(
            ["d_48", "e_48"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("d_48"), Var("e_48")])
                , Wld
                )
              )
            , Build(
                Anno(
                  Op("Cons", [Var("d_48"), Var("e_48")])
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Zip2_0_0"
        , []
        , []
        , Scope(
            ["t_47", "u_47", "v_47", "w_47"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("t_47"), Var("v_47")])
                      , Wld
                      )
                    , Anno(
                        Op("Cons", [Var("u_47"), Var("w_47")])
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("", [Var("t_47"), Var("u_47")])
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op("", [Var("v_47"), Var("w_47")])
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Zip1_0_0"
        , []
        , []
        , Seq(
            Match(
              Anno(
                Op(
                  ""
                , [ Anno(Op("Nil", []), Wld)
                  , Anno(Op("Nil", []), Wld)
                  ]
                )
              , Wld
              )
            )
          , Build(Anno(Op("Nil", []), Op("Nil", [])))
          )
        )
      , SDefT(
          "genzip_4_0"
        , [ VarDec(
              "x_102"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_102"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_102"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "b_103"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("x_102"), [], [])
                , Id
                , Seq(
                    CallT(SVar("y_102"), [], [])
                  , Seq(
                      CallT(
                        SVar("_2_0")
                      , [ CallT(SVar("a_103"), [], [])
                        , CallT(SVar("b_103"), [], [])
                        ]
                      , []
                      )
                    , CallT(SVar("z_102"), [], [])
                    )
                  )
                )
              )
            ]
          , CallT(SVar("b_103"), [], [])
          )
        )
      , SDefT(
          "zip_1_0"
        , [ VarDec(
              "c_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("genzip_4_0")
          , [ CallT(SVar("Zip1_0_0"), [], [])
            , CallT(SVar("Zip2_0_0"), [], [])
            , CallT(SVar("Zip3_0_0"), [], [])
            , CallT(SVar("c_103"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "UfDecompose_0_0"
        , []
        , []
        , Scope(
            ["j_69", "k_69", "l_69", "m_69", "s_142", "h_1", "t_142", "g_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(
                        Op(
                          ""
                        , [ Anno(Explode(Var("j_69"), Var("k_69")), Wld)
                          , Anno(Explode(Var("j_69"), Var("l_69")), Wld)
                          ]
                        )
                      , Wld
                      )
                    , Var("m_69")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("h_1"))
              , Seq(
                  Seq(
                    Seq(
                      Match(Var("g_1"))
                    , Seq(
                        Build(
                          Anno(
                            Op("", [Var("k_69"), Var("l_69")])
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("zip_1_0"), [Id], [])
                        , Seq(
                            Match(Var("t_142"))
                          , Seq(
                              Build(Var("g_1"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("t_142"), Var("m_69")])
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("conc_0_0"), [], [])
                                , Match(Var("s_142"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , Build(Var("h_1"))
                  )
                , Build(Var("s_142"))
                )
              )
            )
          )
        )
      , SDefT(
          "UfIdem_0_0"
        , []
        , []
        , Scope(
            ["h_69", "i_69"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(
                        Op("", [Var("h_69"), Var("h_69")])
                      , Wld
                      )
                    , Var("i_69")
                    ]
                  )
                , Wld
                )
              )
            , Build(Var("i_69"))
            )
          )
        )
      , SDefT(
          "while_not_2_0"
        , [ VarDec(
              "f_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "h_108"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("f_108"), [], [])
                , Id
                , Seq(
                    CallT(SVar("g_108"), [], [])
                  , CallT(SVar("h_108"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("h_108"), [], [])
          )
        )
      , SDefT(
          "for_3_0"
        , [ VarDec(
              "i_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("i_108"), [], [])
          , CallT(
              SVar("while_not_2_0")
            , [ CallT(SVar("j_108"), [], [])
              , CallT(SVar("k_108"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "diff_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(
              SVar("for_3_0")
            , [ Scope(
                  ["g_69"]
                , Seq(
                    Match(Var("g_69"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [Anno(Op("Nil", []), Op("Nil", [])), Var("g_69")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              , CallT(
                  SVar("_2_0")
                , [Id, CallT(SVar("Nil_0_0"), [], [])]
                , []
                )
              , GuardedLChoice(
                  CallT(
                    SVar("_2_0")
                  , [ Id
                    , GuardedLChoice(
                        CallT(SVar("UfIdem_0_0"), [], [])
                      , Id
                      , CallT(SVar("UfDecompose_0_0"), [], [])
                      )
                    ]
                  , []
                  )
                , Id
                , CallT(SVar("UfShift_0_0"), [], [])
                )
              ]
            , []
            )
          , Id
          , CallT(
              SVar("diff_1_0")
            , [CallT(SVar("eq_0_0"), [], [])]
            , []
            )
          )
        )
      , SDefT(
          "test3a_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test3a"), Op("Nil", [])))
            , CallT(SVar("diff_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test2e_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test2e"), Op("Nil", [])))
            , CallT(SVar("isect_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test2d_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test2d"), Op("Nil", [])))
            , CallT(SVar("isect_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test2c_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test2c"), Op("Nil", [])))
            , CallT(SVar("isect_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test2b_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test2b"), Op("Nil", [])))
            , CallT(SVar("isect_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("b"), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "isect_1_0"
        , [ VarDec(
              "n_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["t_45", "u_45", "b_131", "j_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("u_45"), Var("t_45")])
                , Wld
                )
              )
            , Seq(
                Match(Var("j_1"))
              , Seq(
                  Let(
                    [ SDefT(
                        "o_100"
                      , []
                      , []
                      , GuardedLChoice(
                          CallT(SVar("Nil_0_0"), [], [])
                        , Id
                        , GuardedLChoice(
                            Scope(
                              ["i_1"]
                            , Seq(
                                Match(Var("i_1"))
                              , Seq(
                                  CallT(
                                    SVar("HdMember_p__2_0")
                                  , [CallT(SVar("n_100"), [], []), Build(Var("t_45"))]
                                  , []
                                  )
                                , Seq(
                                    Build(Var("i_1"))
                                  , CallT(
                                      SVar("Cons_2_0")
                                    , [Id, CallT(SVar("o_100"), [], [])]
                                    , []
                                    )
                                  )
                                )
                              )
                            )
                          , Id
                          , Scope(
                              ["c_131"]
                            , Seq(
                                Match(
                                  Anno(Op("Cons", [Wld, Var("c_131")]), Wld)
                                )
                              , Seq(
                                  Build(Var("c_131"))
                                , CallT(SVar("o_100"), [], [])
                                )
                              )
                            )
                          )
                        )
                      )
                    ]
                  , Seq(
                      Build(Var("u_45"))
                    , CallT(SVar("o_100"), [], [])
                    )
                  )
                , Seq(
                    Match(Var("b_131"))
                  , Seq(Build(Var("j_1")), Build(Var("b_131")))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "isect_0_0"
        , []
        , []
        , CallT(
            SVar("isect_1_0")
          , [CallT(SVar("eq_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "test2a_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test2a"), Op("Nil", [])))
            , CallT(SVar("isect_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test1e_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1e"), Op("Nil", [])))
            , CallT(SVar("union_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "test1d_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1d"), Op("Nil", [])))
            , CallT(SVar("union_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test1c_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1c"), Op("Nil", [])))
            , CallT(SVar("union_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Op("Nil", []), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("c"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("d"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "test1b_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1b"), Op("Nil", [])))
            , CallT(SVar("union_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["b_22"]
          , Match(
              Anno(
                Op("", [Var("b_22"), Var("b_22")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "t_84"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_84"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_0", "w_0", "x_0", "y_1", "a_2"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("w_0"), Var("x_0")])
                , Var("z_0")
                )
              )
            , Seq(
                Build(Var("w_0"))
              , Seq(
                  CallT(SVar("t_84"), [], [])
                , Seq(
                    Match(Var("y_1"))
                  , Seq(
                      Build(Var("x_0"))
                    , Seq(
                        CallT(SVar("u_84"), [], [])
                      , Seq(
                          Match(Var("a_2"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("y_1"), Var("a_2")])
                            , Var("z_0")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "d_97"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "e_97"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("d_97"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("e_97"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("e_97"), [], [])
          )
        )
      , SDefT(
          "HdMember_p__2_0"
        , [ VarDec(
              "w_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["b_46", "c_46", "l_1"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("c_46"), Var("b_46")])
                , Wld
                )
              )
            , Seq(
                Match(Var("l_1"))
              , Seq(
                  CallT(SVar("x_100"), [], [])
                , Seq(
                    CallT(
                      SVar("fetch_1_0")
                    , [ Scope(
                          ["d_46", "i_131", "k_1"]
                        , Seq(
                            Match(Var("d_46"))
                          , Seq(
                              Match(Var("k_1"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("c_46"), Var("d_46")])
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("w_100"), [], [])
                                , Seq(
                                    Match(Var("i_131"))
                                  , Seq(Build(Var("k_1")), Build(Var("i_131")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    , []
                    )
                  , Seq(Build(Var("l_1")), Build(Var("b_46")))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "union_1_0"
        , [ VarDec(
              "t_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["x_45", "y_45", "g_131", "m_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("y_45"), Var("x_45")])
                , Wld
                )
              )
            , Seq(
                Match(Var("m_1"))
              , Seq(
                  Let(
                    [ SDefT(
                        "u_100"
                      , []
                      , []
                      , GuardedLChoice(
                          Seq(
                            CallT(SVar("Nil_0_0"), [], [])
                          , Build(Var("x_45"))
                          )
                        , Id
                        , GuardedLChoice(
                            Seq(
                              CallT(
                                SVar("HdMember_p__2_0")
                              , [CallT(SVar("t_100"), [], []), Build(Var("x_45"))]
                              , []
                              )
                            , CallT(SVar("u_100"), [], [])
                            )
                          , Id
                          , CallT(
                              SVar("Cons_2_0")
                            , [Id, CallT(SVar("u_100"), [], [])]
                            , []
                            )
                          )
                        )
                      )
                    ]
                  , Seq(
                      Build(Var("y_45"))
                    , CallT(SVar("u_100"), [], [])
                    )
                  )
                , Seq(
                    Match(Var("g_131"))
                  , Seq(Build(Var("m_1")), Build(Var("g_131")))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "union_0_0"
        , []
        , []
        , CallT(
            SVar("union_1_0")
          , [CallT(SVar("eq_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "u_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("u_85"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["o_1", "p_138", "n_1"]
          , Seq(
              Match(Var("o_1"))
            , Seq(
                Seq(
                  Match(Var("n_1"))
                , Seq(
                    Match(Var("p_138"))
                  , Seq(
                      Build(Var("n_1"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Op("stderr", []), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [Var("p_138"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("printnl_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("o_1"))
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "h_109"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_1"]
          , Seq(
              Match(Var("q_1"))
            , Seq(
                CallT(SVar("h_109"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("q_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "t_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("t_85"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["w_27", "x_27"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("w_27"), Var("x_27")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("w_27"), Var("x_27")])
              , Id
              , PrimT("SSL_addr", [], [Var("w_27"), Var("x_27")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["u_125", "r_1"]
          , Seq(
              Match(Var("r_1"))
            , Seq(
                Match(Var("u_125"))
              , Seq(
                  Build(Var("r_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("u_125"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "v_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["s_1"]
          , Seq(
              Match(Var("s_1"))
            , Seq(
                CallT(SVar("v_85"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("s_1"))
                  , GuardedLChoice(
                      Scope(
                        ["t_1"]
                      , Seq(
                          Match(Var("t_1"))
                        , Seq(
                            CallT(SVar("w_85"), [], [])
                          , Seq(
                              Build(Var("t_1"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "i_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_9", "v_9"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("i_86"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("k_86"), [], [])]
                      , []
                      )
                    , CallT(SVar("j_86"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("u_9"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("l_86"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("v_9"))
                      , GuardedLChoice(
                          Seq(Build(Var("v_9")), Match(Var("u_9")))
                        , Id
                        , Seq(
                            Build(Var("u_9"))
                          , Seq(
                              CallT(
                                SVar("debug_1_0")
                              , [Build(Anno(Str("  result not equal : "), Op("Nil", [])))]
                              , []
                              )
                            , Seq(
                                Build(Var("v_9"))
                              , Seq(
                                  CallT(
                                    SVar("debug_1_0")
                                  , [Build(Anno(Str("  expected         : "), Op("Nil", [])))]
                                  , []
                                  )
                                , Fail
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "test1a_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1a"), Op("Nil", [])))
            , CallT(SVar("union_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("a"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("b"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("c"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("d"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Str("a"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("b"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("c"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str("d"), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "y_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["g_2", "b_2", "f_2", "h_2", "i_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("b_2"), Var("f_2")])
                , Var("g_2")
                )
              )
            , Seq(
                Build(Var("b_2"))
              , Seq(
                  CallT(SVar("y_77"), [], [])
                , Seq(
                    Match(Var("h_2"))
                  , Seq(
                      Build(Var("f_2"))
                    , Seq(
                        CallT(SVar("z_77"), [], [])
                      , Seq(
                          Match(Var("i_2"))
                        , Build(
                            Anno(
                              Op("", [Var("h_2"), Var("i_2")])
                            , Var("g_2")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["q_59", "r_59", "u_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_59"), Var("r_59")])
                , Wld
                )
              )
            , Seq(
                Match(Var("u_1"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("q_59"), Var("r_59")])
                , Build(Var("u_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "q_109"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["x_1", "q_138", "r_138", "w_1", "v_1"]
          , Seq(
              Match(Var("x_1"))
            , Seq(
                Seq(
                  Seq(
                    Match(Var("v_1"))
                  , Seq(
                      CallT(SVar("q_109"), [], [])
                    , Seq(Match(Var("q_138")), Build(Var("v_1")))
                    )
                  )
                , Seq(
                    Match(Var("w_1"))
                  , Seq(
                      Match(Var("r_138"))
                    , Seq(
                        Build(Var("w_1"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("stderr", []), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("q_138")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("r_138"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("printnl_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              , Build(Var("x_1"))
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "g_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("g_86"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("h_86"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("list-set-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("test1a_0_0"), [], [])
              , Seq(
                  CallT(SVar("test1b_0_0"), [], [])
                , Seq(
                    CallT(SVar("test1c_0_0"), [], [])
                  , Seq(
                      CallT(SVar("test1d_0_0"), [], [])
                    , Seq(
                        CallT(SVar("test1e_0_0"), [], [])
                      , Seq(
                          CallT(SVar("test2a_0_0"), [], [])
                        , Seq(
                            CallT(SVar("test2b_0_0"), [], [])
                          , Seq(
                              CallT(SVar("test2c_0_0"), [], [])
                            , Seq(
                                CallT(SVar("test2d_0_0"), [], [])
                              , Seq(
                                  CallT(SVar("test2e_0_0"), [], [])
                                , Seq(
                                    CallT(SVar("test3a_0_0"), [], [])
                                  , Seq(
                                      CallT(SVar("test3b_0_0"), [], [])
                                    , Seq(
                                        CallT(SVar("test3c_0_0"), [], [])
                                      , Seq(
                                          CallT(SVar("test3d_0_0"), [], [])
                                        , Seq(
                                            CallT(SVar("test3e_0_0"), [], [])
                                          , Seq(
                                              CallT(SVar("test4a_0_0"), [], [])
                                            , Seq(
                                                CallT(SVar("test4b_0_0"), [], [])
                                              , Seq(
                                                  CallT(SVar("test4c_0_0"), [], [])
                                                , Seq(
                                                    CallT(SVar("test4d_0_0"), [], [])
                                                  , Seq(
                                                      CallT(SVar("test4e_0_0"), [], [])
                                                    , Seq(
                                                        CallT(SVar("set_eq_test_1_0_0"), [], [])
                                                      , Seq(
                                                          CallT(SVar("set_eq_test_2_0_0"), [], [])
                                                        , Seq(
                                                            CallT(SVar("set_eq_test_3_0_0"), [], [])
                                                          , Seq(
                                                              CallT(SVar("set_eq_test_4_0_0"), [], [])
                                                            , CallT(SVar("set_eq_test_5_0_0"), [], [])
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
