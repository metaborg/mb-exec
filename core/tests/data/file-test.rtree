Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("W_OK", ConstType(Sort("AccessPermission", [])))
          , OpDecl(
              "Stream"
            , FunType(
                [ConstType(Sort("ImplDep", []))]
              , ConstType(Sort("Stream", []))
              )
            )
          , OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              "Hashtable"
            , FunType(
                [ConstType(Sort("ImplDep", []))]
              , ConstType(Sort("Hashtable", []))
              )
            )
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Emergency", ConstType(Sort("Severity", [])))
          , OpDecl("Alert", ConstType(Sort("Severity", [])))
          , OpDecl("Critical", ConstType(Sort("Severity", [])))
          , OpDecl("Error", ConstType(Sort("Severity", [])))
          , OpDecl("Warning", ConstType(Sort("Severity", [])))
          , OpDecl("Notice", ConstType(Sort("Severity", [])))
          , OpDecl("Info", ConstType(Sort("Severity", [])))
          , OpDecl("Debug", ConstType(Sort("Severity", [])))
          , OpDecl("Vomit", ConstType(Sort("Severity", [])))
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT(
          "test_extension_1_0"
        , [ VarDec(
              "v_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_0"]
          , Seq(
              Match(Var("a_0"))
            , Seq(
                CallT(SVar("get_extension_0_0"), [], [])
              , Seq(
                  CallT(SVar("v_103"), [], [])
                , Build(Var("a_0"))
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_0_1"
        , []
        , [VarDec("z_79", ConstType(Sort("ATerm", [])))]
        , Let(
            [ SDefT(
                "g_5"
              , []
              , []
              , Scope(
                  ["a_80"]
                , Let(
                    [SDefT("h_5", [], [], Match(Var("a_80")))]
                  , Seq(
                      Match(Var("a_80"))
                    , Seq(
                        Build(Var("z_79"))
                      , CallT(
                          SVar("fetch_1_0")
                        , [CallT(SVar("h_5"), [], [])]
                        , []
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(
              SVar("list_tokenize_1_0")
            , [CallT(SVar("g_5"), [], [])]
            , []
            )
          )
        )
      , SDefT(
          "j_5"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Int("47"), Wld))
          , Id
          , Match(Anno(Int("92"), Wld))
          )
        )
      , SDefT(
          "get_extension_0_0"
        , []
        , []
        , Scope(
            ["s_14", "t_14", "u_14", "f_0", "g_2", "d_0"]
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                Match(Var("d_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Int("46"), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    Match(Var("g_2"))
                  , Seq(
                      Build(Var("d_0"))
                    , Seq(
                        CallT(SVar("list_tokenize_0_1"), [], [Var("g_2")])
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                "Cons"
                              , [Wld, Anno(Op("Cons", [Wld, Wld]), Wld)]
                              )
                            , Wld
                            )
                          )
                        , Seq(
                            Let(
                              [ SDefT(
                                  "i_5"
                                , []
                                , []
                                , Seq(
                                    Match(
                                      Anno(
                                        Op(
                                          "Cons"
                                        , [ Wld
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [Wld, Anno(Op("Nil", []), Wld)]
                                              )
                                            , Wld
                                            )
                                          ]
                                        )
                                      , Wld
                                      )
                                    )
                                  , Match(Var("s_14"))
                                  )
                                )
                              ]
                            , CallT(
                                SVar("at_suffix_1_0")
                              , [CallT(SVar("i_5"), [], [])]
                              , []
                              )
                            )
                          , Seq(
                              Build(Var("s_14"))
                            , Seq(
                                Match(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("t_14")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("u_14"), Anno(Op("Nil", []), Wld)]
                                          )
                                        , Wld
                                        )
                                      ]
                                    )
                                  , Wld
                                  )
                                )
                              , Seq(
                                  Match(Var("f_0"))
                                , Seq(
                                    Build(Var("u_14"))
                                  , Seq(
                                      GuardedLChoice(
                                        CallT(
                                          SVar("fetch_1_0")
                                        , [CallT(SVar("j_5"), [], [])]
                                        , []
                                        )
                                      , Fail
                                      , Id
                                      )
                                    , Seq(
                                        Build(Var("t_14"))
                                      , Seq(
                                          CallT(SVar("last_0_0"), [], [])
                                        , Seq(
                                            GuardedLChoice(
                                              GuardedLChoice(
                                                Match(Anno(Int("47"), Wld))
                                              , Id
                                              , Match(Anno(Int("92"), Wld))
                                              )
                                            , Fail
                                            , Id
                                            )
                                          , Seq(
                                              Build(Var("f_0"))
                                            , Seq(
                                                Build(Var("u_14"))
                                              , CallT(SVar("implode_string_0_0"), [], [])
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "k_5"
        , []
        , []
        , Build(Anno(Str("has-extension(s); use has-extension(|t)"), Op("Nil", [])))
        )
      , SDefT(
          "l_5"
        , []
        , []
        , Scope(
            ["v_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("46"), Wld), Var("v_1")]
                  )
                , Wld
                )
              )
            , Build(Var("v_1"))
            )
          )
        )
      , SDefT(
          "has_extension_1_0"
        , [ VarDec(
              "n_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["j_14", "h_0"]
          , Seq(
              CallT(
                SVar("obsolete_1_0")
              , [CallT(SVar("k_5"), [], [])]
              , []
              )
            , Seq(
                Match(Var("h_0"))
              , Seq(
                  CallT(SVar("n_103"), [], [])
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , Seq(
                      CallT(
                        SVar("try_1_0")
                      , [CallT(SVar("l_5"), [], [])]
                      , []
                      )
                    , Seq(
                        CallT(SVar("implode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("j_14"))
                        , Seq(
                            Build(Var("h_0"))
                          , CallT(SVar("has_extension_0_1"), [], [Var("j_14")])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "has_extension_0_1"
        , []
        , [VarDec("o_14", ConstType(Sort("ATerm", [])))]
        , Let(
            [SDefT("m_5", [], [], Match(Var("o_14")))]
          , CallT(
              SVar("test_extension_1_0")
            , [CallT(SVar("m_5"), [], [])]
            , []
            )
          )
        )
      , SDefT(
          "add_extension_0_0"
        , []
        , []
        , Scope(
            ["p_14", "q_14", "e_2", "k_0"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("p_14"), Var("q_14")])
                , Wld
                )
              )
            , Seq(
                Match(Var("k_0"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Var("p_14")
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("."), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [Var("q_14"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("concat_strings_0_0"), [], [])
                  , Seq(
                      Match(Var("e_2"))
                    , Seq(Build(Var("k_0")), Build(Var("e_2")))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "guarantee_extension_0_1"
        , []
        , [VarDec("n_14", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["d_2", "m_0"]
          , Seq(
              CallT(SVar("remove_extension_0_0"), [], [])
            , Seq(
                Match(Var("m_0"))
              , Seq(
                  Match(Var("d_2"))
                , Seq(
                    Build(Var("m_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("d_2"), Var("n_14")])
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("add_extension_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "remove_extension_0_0"
        , []
        , []
        , Scope(
            ["r_14"]
          , GuardedLChoice(
              Scope(
                ["p_0", "f_2", "n_0"]
              , Seq(
                  Match(Var("p_0"))
                , Seq(
                    CallT(SVar("get_extension_0_0"), [], [])
                  , Seq(
                      CallT(SVar("explode_string_0_0"), [], [])
                    , Seq(
                        Match(Var("n_0"))
                      , Seq(
                          Match(Var("f_2"))
                        , Seq(
                            Build(Var("n_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [Anno(Int("46"), Op("Nil", [])), Var("f_2")]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(Match(Var("r_14")), Build(Var("p_0")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  Let(
                    [ SDefT(
                        "n_5"
                      , []
                      , []
                      , Seq(
                          Match(Var("r_14"))
                        , Build(Anno(Op("Nil", []), Op("Nil", [])))
                        )
                      )
                    ]
                  , CallT(
                      SVar("at_suffix_1_0")
                    , [CallT(SVar("n_5"), [], [])]
                    , []
                    )
                  )
                , CallT(SVar("implode_string_0_0"), [], [])
                )
              )
            , Id
            )
          )
        )
      , SDefT(
          "o_5"
        , []
        , []
        , Build(Anno(Str("remove-extension 1"), Op("Nil", [])))
        )
      , SDefT(
          "p_5"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "q_5"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "r_5"
        , []
        , []
        , Build(Anno(Str("remove-extension 2"), Op("Nil", [])))
        )
      , SDefT(
          "s_5"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "t_5"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "u_5"
        , []
        , []
        , Build(Anno(Str("remove-extension 3"), Op("Nil", [])))
        )
      , SDefT(
          "v_5"
        , []
        , []
        , Build(Anno(Str("foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "w_5"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "x_5"
        , []
        , []
        , Build(Anno(Str("remove-extension 4"), Op("Nil", [])))
        )
      , SDefT(
          "y_5"
        , []
        , []
        , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "z_5"
        , []
        , []
        , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "a_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 5"), Op("Nil", [])))
        )
      , SDefT(
          "b_6"
        , []
        , []
        , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "c_6"
        , []
        , []
        , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "d_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 6"), Op("Nil", [])))
        )
      , SDefT(
          "e_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo/fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "f_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo/fred"), Op("Nil", [])))
        )
      , SDefT(
          "g_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 7"), Op("Nil", [])))
        )
      , SDefT(
          "h_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo/fred"), Op("Nil", [])))
        )
      , SDefT(
          "i_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo/fred"), Op("Nil", [])))
        )
      , SDefT(
          "j_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 8"), Op("Nil", [])))
        )
      , SDefT(
          "k_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "l_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo"), Op("Nil", [])))
        )
      , SDefT(
          "m_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 9"), Op("Nil", [])))
        )
      , SDefT(
          "n_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo"), Op("Nil", [])))
        )
      , SDefT(
          "o_6"
        , []
        , []
        , Build(Anno(Str("/bar"), Op("Nil", [])))
        )
      , SDefT(
          "p_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 10"), Op("Nil", [])))
        )
      , SDefT(
          "q_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "r_6"
        , []
        , []
        , Build(Anno(Str("/bar.foo"), Op("Nil", [])))
        )
      , SDefT(
          "s_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 11"), Op("Nil", [])))
        )
      , SDefT(
          "t_6"
        , []
        , []
        , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "u_6"
        , []
        , []
        , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "w_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 12"), Op("Nil", [])))
        )
      , SDefT(
          "x_6"
        , []
        , []
        , Build(Anno(Str("../bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "y_6"
        , []
        , []
        , Build(Anno(Str("../bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "z_6"
        , []
        , []
        , Build(Anno(Str("remove-extension 13"), Op("Nil", [])))
        )
      , SDefT(
          "a_7"
        , []
        , []
        , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "b_7"
        , []
        , []
        , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "c_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 14"), Op("Nil", [])))
        )
      , SDefT(
          "d_7"
        , []
        , []
        , Build(Anno(Str("../bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "e_7"
        , []
        , []
        , Build(Anno(Str("../bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "f_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 15"), Op("Nil", [])))
        )
      , SDefT(
          "g_7"
        , []
        , []
        , Build(Anno(Str("./bar.foo/fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "h_7"
        , []
        , []
        , Build(Anno(Str("./bar.foo/fred"), Op("Nil", [])))
        )
      , SDefT(
          "i_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 16"), Op("Nil", [])))
        )
      , SDefT(
          "j_7"
        , []
        , []
        , Build(Anno(Str("../bar.foo/fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "k_7"
        , []
        , []
        , Build(Anno(Str("../bar.foo/fred"), Op("Nil", [])))
        )
      , SDefT(
          "l_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 17"), Op("Nil", [])))
        )
      , SDefT(
          "m_7"
        , []
        , []
        , Build(Anno(Str("./bar/../foo"), Op("Nil", [])))
        )
      , SDefT(
          "n_7"
        , []
        , []
        , Build(Anno(Str("./bar/../foo"), Op("Nil", [])))
        )
      , SDefT(
          "o_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 18"), Op("Nil", [])))
        )
      , SDefT(
          "p_7"
        , []
        , []
        , Build(Anno(Str("../bar/../foo"), Op("Nil", [])))
        )
      , SDefT(
          "q_7"
        , []
        , []
        , Build(Anno(Str("../bar/../foo"), Op("Nil", [])))
        )
      , SDefT(
          "r_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 19"), Op("Nil", [])))
        )
      , SDefT(
          "s_7"
        , []
        , []
        , Build(Anno(Str("./bar/.foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "t_7"
        , []
        , []
        , Build(Anno(Str("./bar/.foo"), Op("Nil", [])))
        )
      , SDefT(
          "v_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 20"), Op("Nil", [])))
        )
      , SDefT(
          "w_7"
        , []
        , []
        , Build(Anno(Str("../bar/.foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "x_7"
        , []
        , []
        , Build(Anno(Str("../bar/.foo"), Op("Nil", [])))
        )
      , SDefT(
          "y_7"
        , []
        , []
        , Build(Anno(Str("remove-extension 21"), Op("Nil", [])))
        )
      , SDefT(
          "z_7"
        , []
        , []
        , Build(Anno(Str("./bar/.foo"), Op("Nil", [])))
        )
      , SDefT(
          "a_8"
        , []
        , []
        , Build(Anno(Str("./bar/.foo"), Op("Nil", [])))
        )
      , SDefT(
          "b_8"
        , []
        , []
        , Build(Anno(Str("remove-extension 22"), Op("Nil", [])))
        )
      , SDefT(
          "c_8"
        , []
        , []
        , Build(Anno(Str("../bar/.foo"), Op("Nil", [])))
        )
      , SDefT(
          "d_8"
        , []
        , []
        , Build(Anno(Str("../bar/.foo"), Op("Nil", [])))
        )
      , SDefT(
          "e_8"
        , []
        , []
        , Build(Anno(Str("remove-extension 23"), Op("Nil", [])))
        )
      , SDefT(
          "f_8"
        , []
        , []
        , Build(Anno(Str("../bar/.."), Op("Nil", [])))
        )
      , SDefT(
          "g_8"
        , []
        , []
        , Build(Anno(Str("../bar/.."), Op("Nil", [])))
        )
      , SDefT(
          "h_8"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 1"), Op("Nil", [])))
        )
      , SDefT(
          "i_8"
        , []
        , []
        , Scope(
            ["c_0", "q_0"]
          , Seq(
              Match(Var("q_0"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("c_0"))
                , Seq(
                    Build(Var("q_0"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("c_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "j_8"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "k_8"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "l_8"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 2"), Op("Nil", [])))
        )
      , SDefT(
          "m_8"
        , []
        , []
        , Scope(
            ["e_0", "t_0"]
          , Seq(
              Match(Var("t_0"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("e_0"))
                , Seq(
                    Build(Var("t_0"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("e_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "n_8"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "o_8"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "p_8"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 3"), Op("Nil", [])))
        )
      , SDefT(
          "q_8"
        , []
        , []
        , Scope(
            ["g_0", "v_0"]
          , Seq(
              Match(Var("v_0"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("g_0"))
                , Seq(
                    Build(Var("v_0"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("g_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "r_8"
        , []
        , []
        , Build(Anno(Str("foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "s_8"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "t_8"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 4"), Op("Nil", [])))
        )
      , SDefT(
          "u_8"
        , []
        , []
        , Scope(
            ["j_0", "x_0"]
          , Seq(
              Match(Var("x_0"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("j_0"))
                , Seq(
                    Build(Var("x_0"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("j_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "v_8"
        , []
        , []
        , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "w_8"
        , []
        , []
        , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "x_8"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 5"), Op("Nil", [])))
        )
      , SDefT(
          "y_8"
        , []
        , []
        , Scope(
            ["l_0", "a_1"]
          , Seq(
              Match(Var("a_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("l_0"))
                , Seq(
                    Build(Var("a_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("l_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "z_8"
        , []
        , []
        , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "b_9"
        , []
        , []
        , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "f_9"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 6"), Op("Nil", [])))
        )
      , SDefT(
          "g_9"
        , []
        , []
        , Scope(
            ["o_0", "c_1"]
          , Seq(
              Match(Var("c_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("o_0"))
                , Seq(
                    Build(Var("c_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("o_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "h_9"
        , []
        , []
        , Build(Anno(Str("/bar/foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "i_9"
        , []
        , []
        , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "j_9"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 7"), Op("Nil", [])))
        )
      , SDefT(
          "k_9"
        , []
        , []
        , Scope(
            ["r_0", "e_1"]
          , Seq(
              Match(Var("e_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("r_0"))
                , Seq(
                    Build(Var("e_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("r_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "l_9"
        , []
        , []
        , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "m_9"
        , []
        , []
        , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "n_9"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 9"), Op("Nil", [])))
        )
      , SDefT(
          "o_9"
        , []
        , []
        , Scope(
            ["u_0", "h_1"]
          , Seq(
              Match(Var("h_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("u_0"))
                , Seq(
                    Build(Var("h_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("u_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "p_9"
        , []
        , []
        , Build(Anno(Str("/bar.foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "q_9"
        , []
        , []
        , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "r_9"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 10"), Op("Nil", [])))
        )
      , SDefT(
          "s_9"
        , []
        , []
        , Scope(
            ["w_0", "j_1"]
          , Seq(
              Match(Var("j_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("w_0"))
                , Seq(
                    Build(Var("j_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("w_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "t_9"
        , []
        , []
        , Build(Anno(Str("./foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "u_9"
        , []
        , []
        , Build(Anno(Str("./foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "v_9"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 11"), Op("Nil", [])))
        )
      , SDefT(
          "w_9"
        , []
        , []
        , Scope(
            ["y_0", "s_1"]
          , Seq(
              Match(Var("s_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("y_0"))
                , Seq(
                    Build(Var("s_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("y_0")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "x_9"
        , []
        , []
        , Build(Anno(Str("../foo"), Op("Nil", [])))
        )
      , SDefT(
          "y_9"
        , []
        , []
        , Build(Anno(Str("../foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "z_9"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 12"), Op("Nil", [])))
        )
      , SDefT(
          "a_10"
        , []
        , []
        , Scope(
            ["b_1", "t_1"]
          , Seq(
              Match(Var("t_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("b_1"))
                , Seq(
                    Build(Var("t_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("b_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "b_10"
        , []
        , []
        , Build(Anno(Str("./foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "c_10"
        , []
        , []
        , Build(Anno(Str("./foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "d_10"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 13"), Op("Nil", [])))
        )
      , SDefT(
          "e_10"
        , []
        , []
        , Scope(
            ["d_1", "u_1"]
          , Seq(
              Match(Var("u_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("d_1"))
                , Seq(
                    Build(Var("u_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("d_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "f_10"
        , []
        , []
        , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "g_10"
        , []
        , []
        , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "h_10"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 14"), Op("Nil", [])))
        )
      , SDefT(
          "i_10"
        , []
        , []
        , Scope(
            ["f_1", "w_1"]
          , Seq(
              Match(Var("w_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("f_1"))
                , Seq(
                    Build(Var("w_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("f_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "j_10"
        , []
        , []
        , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
        )
      , SDefT(
          "k_10"
        , []
        , []
        , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "l_10"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 15"), Op("Nil", [])))
        )
      , SDefT(
          "m_10"
        , []
        , []
        , Scope(
            ["i_1", "x_1"]
          , Seq(
              Match(Var("x_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("i_1"))
                , Seq(
                    Build(Var("x_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("i_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "n_10"
        , []
        , []
        , Build(Anno(Str(".str"), Op("Nil", [])))
        )
      , SDefT(
          "o_10"
        , []
        , []
        , Build(Anno(Str(".str.str"), Op("Nil", [])))
        )
      , SDefT(
          "p_10"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 16"), Op("Nil", [])))
        )
      , SDefT(
          "q_10"
        , []
        , []
        , Scope(
            ["k_1", "y_1"]
          , Seq(
              Match(Var("y_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("k_1"))
                , Seq(
                    Build(Var("y_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("k_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "r_10"
        , []
        , []
        , Build(Anno(Str("..str"), Op("Nil", [])))
        )
      , SDefT(
          "s_10"
        , []
        , []
        , Build(Anno(Str("..str.str"), Op("Nil", [])))
        )
      , SDefT(
          "t_10"
        , []
        , []
        , Build(Anno(Str("guarantee-extension 17"), Op("Nil", [])))
        )
      , SDefT(
          "u_10"
        , []
        , []
        , Scope(
            ["l_1", "z_1"]
          , Seq(
              Match(Var("z_1"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("l_1"))
                , Seq(
                    Build(Var("z_1"))
                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("l_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "v_10"
        , []
        , []
        , Build(Anno(Str("./.str"), Op("Nil", [])))
        )
      , SDefT(
          "w_10"
        , []
        , []
        , Build(Anno(Str("./.str.str"), Op("Nil", [])))
        )
      , SDefT(
          "x_10"
        , []
        , []
        , Build(Anno(Str("has-extension 1"), Op("Nil", [])))
        )
      , SDefT(
          "y_10"
        , []
        , []
        , Scope(
            ["m_1", "a_2"]
          , Seq(
              Match(Var("a_2"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("m_1"))
                , Seq(
                    Build(Var("a_2"))
                  , CallT(SVar("has_extension_0_1"), [], [Var("m_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "z_10"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "a_11"
        , []
        , []
        , Build(Anno(Str("has-extension 2"), Op("Nil", [])))
        )
      , SDefT(
          "b_11"
        , []
        , []
        , Scope(
            ["n_1", "b_2"]
          , Seq(
              Match(Var("b_2"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("n_1"))
                , Seq(
                    Build(Var("b_2"))
                  , CallT(SVar("has_extension_0_1"), [], [Var("n_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "c_11"
        , []
        , []
        , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "d_11"
        , []
        , []
        , Build(Anno(Str("has-extension 3"), Op("Nil", [])))
        )
      , SDefT(
          "e_11"
        , []
        , []
        , Scope(
            ["o_1", "c_2"]
          , Seq(
              Match(Var("c_2"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("o_1"))
                , Seq(
                    Build(Var("c_2"))
                  , CallT(SVar("has_extension_0_1"), [], [Var("o_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "f_11"
        , []
        , []
        , Build(Anno(Str("foo.rtee"), Op("Nil", [])))
        )
      , SDefT(
          "g_11"
        , []
        , []
        , Build(Anno(Str("has-extension 4"), Op("Nil", [])))
        )
      , SDefT(
          "h_11"
        , []
        , []
        , Scope(
            ["p_1", "m_2"]
          , Seq(
              Match(Var("m_2"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("p_1"))
                , Seq(
                    Build(Var("m_2"))
                  , CallT(SVar("has_extension_0_1"), [], [Var("p_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "i_11"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "j_11"
        , []
        , []
        , Build(Anno(Str("has-extension 5"), Op("Nil", [])))
        )
      , SDefT(
          "k_11"
        , []
        , []
        , Scope(
            ["q_1", "n_2"]
          , Seq(
              Match(Var("n_2"))
            , Seq(
                Build(Anno(Str(""), Op("Nil", [])))
              , Seq(
                  Match(Var("q_1"))
                , Seq(
                    Build(Var("n_2"))
                  , CallT(SVar("has_extension_0_1"), [], [Var("q_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "l_11"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "m_11"
        , []
        , []
        , Build(Anno(Str("has-extension 6"), Op("Nil", [])))
        )
      , SDefT(
          "n_11"
        , []
        , []
        , Scope(
            ["r_1", "p_2"]
          , Seq(
              Match(Var("p_2"))
            , Seq(
                Build(Anno(Str("str"), Op("Nil", [])))
              , Seq(
                  Match(Var("r_1"))
                , Seq(
                    Build(Var("p_2"))
                  , CallT(SVar("has_extension_0_1"), [], [Var("r_1")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "o_11"
        , []
        , []
        , Build(Anno(Str("foo.str.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "p_11"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 1"), Op("Nil", [])))
        )
      , SDefT(
          "q_11"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("s_11"), [], [])]
          , []
          )
        )
      , SDefT(
          "r_11"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "s_11"
        , []
        , []
        , Build(Anno(Str(".str"), Op("Nil", [])))
        )
      , SDefT(
          "t_11"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 2"), Op("Nil", [])))
        )
      , SDefT(
          "u_11"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("w_11"), [], [])]
          , []
          )
        )
      , SDefT(
          "v_11"
        , []
        , []
        , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "w_11"
        , []
        , []
        , Build(Anno(Str(".str"), Op("Nil", [])))
        )
      , SDefT(
          "x_11"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 3"), Op("Nil", [])))
        )
      , SDefT(
          "y_11"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("a_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "z_11"
        , []
        , []
        , Build(Anno(Str("foo.rtee"), Op("Nil", [])))
        )
      , SDefT(
          "a_12"
        , []
        , []
        , Build(Anno(Str(".str"), Op("Nil", [])))
        )
      , SDefT(
          "b_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 4"), Op("Nil", [])))
        )
      , SDefT(
          "c_12"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("e_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "d_12"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "e_12"
        , []
        , []
        , Build(Anno(Str(".str"), Op("Nil", [])))
        )
      , SDefT(
          "f_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 5"), Op("Nil", [])))
        )
      , SDefT(
          "g_12"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("i_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "h_12"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "i_12"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "j_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 6"), Op("Nil", [])))
        )
      , SDefT(
          "k_12"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("m_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "l_12"
        , []
        , []
        , Build(Anno(Str("foo.str.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "m_12"
        , []
        , []
        , Build(Anno(Str(".str"), Op("Nil", [])))
        )
      , SDefT(
          "n_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 7"), Op("Nil", [])))
        )
      , SDefT(
          "o_12"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("q_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "p_12"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "q_12"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "r_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 8"), Op("Nil", [])))
        )
      , SDefT(
          "s_12"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("u_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "t_12"
        , []
        , []
        , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "u_12"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "v_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 9"), Op("Nil", [])))
        )
      , SDefT(
          "w_12"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("y_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "x_12"
        , []
        , []
        , Build(Anno(Str("foo.rtee"), Op("Nil", [])))
        )
      , SDefT(
          "y_12"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "z_12"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 10"), Op("Nil", [])))
        )
      , SDefT(
          "a_13"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("c_13"), [], [])]
          , []
          )
        )
      , SDefT(
          "b_13"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "c_13"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "d_13"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 11"), Op("Nil", [])))
        )
      , SDefT(
          "e_13"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("g_13"), [], [])]
          , []
          )
        )
      , SDefT(
          "f_13"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "g_13"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "h_13"
        , []
        , []
        , Build(Anno(Str("obsolete-has-extension 12"), Op("Nil", [])))
        )
      , SDefT(
          "i_13"
        , []
        , []
        , CallT(
            SVar("has_extension_1_0")
          , [CallT(SVar("k_13"), [], [])]
          , []
          )
        )
      , SDefT(
          "j_13"
        , []
        , []
        , Build(Anno(Str("foo.str.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "k_13"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "l_13"
        , []
        , []
        , Build(Anno(Str("get-extension 1"), Op("Nil", [])))
        )
      , SDefT(
          "m_13"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "n_13"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "o_13"
        , []
        , []
        , Build(Anno(Str("get-extension 2"), Op("Nil", [])))
        )
      , SDefT(
          "p_13"
        , []
        , []
        , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "q_13"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "r_13"
        , []
        , []
        , Build(Anno(Str("get-extension 3"), Op("Nil", [])))
        )
      , SDefT(
          "s_13"
        , []
        , []
        , Build(Anno(Str("/foo/fred.str"), Op("Nil", [])))
        )
      , SDefT(
          "t_13"
        , []
        , []
        , Build(Anno(Str("str"), Op("Nil", [])))
        )
      , SDefT(
          "u_13"
        , []
        , []
        , Build(Anno(Str("get-extension 4"), Op("Nil", [])))
        )
      , SDefT(
          "v_13"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "w_13"
        , []
        , []
        , Build(Anno(Str("get-extension 5"), Op("Nil", [])))
        )
      , SDefT(
          "x_13"
        , []
        , []
        , Build(Anno(Str("/foo.str/fred"), Op("Nil", [])))
        )
      , SDefT(
          "y_13"
        , []
        , []
        , Build(Anno(Str("test-extension 1"), Op("Nil", [])))
        )
      , SDefT(
          "z_13"
        , []
        , []
        , CallT(
            SVar("test_extension_1_0")
          , [CallT(SVar("b_14"), [], [])]
          , []
          )
        )
      , SDefT(
          "a_14"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "b_14"
        , []
        , []
        , Match(Anno(Str("str"), Wld))
        )
      , SDefT(
          "c_14"
        , []
        , []
        , Build(Anno(Str("test-extension 2"), Op("Nil", [])))
        )
      , SDefT(
          "d_14"
        , []
        , []
        , CallT(
            SVar("test_extension_1_0")
          , [CallT(SVar("_id"), [], [])]
          , []
          )
        )
      , SDefT(
          "f_14"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "g_14"
        , []
        , []
        , Build(Anno(Str("test-extension 3"), Op("Nil", [])))
        )
      , SDefT(
          "h_14"
        , []
        , []
        , CallT(
            SVar("test_extension_1_0")
          , [CallT(SVar("_id"), [], [])]
          , []
          )
        )
      , SDefT(
          "i_14"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "k_14"
        , []
        , []
        , Build(Anno(Str("test-extension 4"), Op("Nil", [])))
        )
      , SDefT(
          "m_14"
        , []
        , []
        , CallT(
            SVar("test_extension_1_0")
          , [CallT(SVar("w_14"), [], [])]
          , []
          )
        )
      , SDefT(
          "v_14"
        , []
        , []
        , Build(Anno(Str("foo.str"), Op("Nil", [])))
        )
      , SDefT(
          "w_14"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Str("str"), Wld))
          , Id
          , Match(Anno(Str("rtree"), Wld))
          )
        )
      , SDefT(
          "x_14"
        , []
        , []
        , Build(Anno(Str("test-extension 5"), Op("Nil", [])))
        )
      , SDefT(
          "y_14"
        , []
        , []
        , CallT(
            SVar("test_extension_1_0")
          , [CallT(SVar("a_15"), [], [])]
          , []
          )
        )
      , SDefT(
          "z_14"
        , []
        , []
        , Build(Anno(Str("foo.rtree"), Op("Nil", [])))
        )
      , SDefT(
          "a_15"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Str("str"), Wld))
          , Id
          , Match(Anno(Str("rtree"), Wld))
          )
        )
      , SDefT(
          "file_extension_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("o_5"), [], [])
              , CallT(SVar("remove_extension_0_0"), [], [])
              , CallT(SVar("p_5"), [], [])
              , CallT(SVar("q_5"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("r_5"), [], [])
                , CallT(SVar("remove_extension_0_0"), [], [])
                , CallT(SVar("s_5"), [], [])
                , CallT(SVar("t_5"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("u_5"), [], [])
                  , CallT(SVar("remove_extension_0_0"), [], [])
                  , CallT(SVar("v_5"), [], [])
                  , CallT(SVar("w_5"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("x_5"), [], [])
                    , CallT(SVar("remove_extension_0_0"), [], [])
                    , CallT(SVar("y_5"), [], [])
                    , CallT(SVar("z_5"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("a_6"), [], [])
                      , CallT(SVar("remove_extension_0_0"), [], [])
                      , CallT(SVar("b_6"), [], [])
                      , CallT(SVar("c_6"), [], [])
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("d_6"), [], [])
                        , CallT(SVar("remove_extension_0_0"), [], [])
                        , CallT(SVar("e_6"), [], [])
                        , CallT(SVar("f_6"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ CallT(SVar("g_6"), [], [])
                          , CallT(SVar("remove_extension_0_0"), [], [])
                          , CallT(SVar("h_6"), [], [])
                          , CallT(SVar("i_6"), [], [])
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("j_6"), [], [])
                            , CallT(SVar("remove_extension_0_0"), [], [])
                            , CallT(SVar("k_6"), [], [])
                            , CallT(SVar("l_6"), [], [])
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ CallT(SVar("m_6"), [], [])
                              , CallT(SVar("remove_extension_0_0"), [], [])
                              , CallT(SVar("n_6"), [], [])
                              , CallT(SVar("o_6"), [], [])
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ CallT(SVar("p_6"), [], [])
                                , CallT(SVar("remove_extension_0_0"), [], [])
                                , CallT(SVar("q_6"), [], [])
                                , CallT(SVar("r_6"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ CallT(SVar("s_6"), [], [])
                                  , CallT(SVar("remove_extension_0_0"), [], [])
                                  , CallT(SVar("t_6"), [], [])
                                  , CallT(SVar("u_6"), [], [])
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ CallT(SVar("w_6"), [], [])
                                    , CallT(SVar("remove_extension_0_0"), [], [])
                                    , CallT(SVar("x_6"), [], [])
                                    , CallT(SVar("y_6"), [], [])
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ CallT(SVar("z_6"), [], [])
                                      , CallT(SVar("remove_extension_0_0"), [], [])
                                      , CallT(SVar("a_7"), [], [])
                                      , CallT(SVar("b_7"), [], [])
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ CallT(SVar("c_7"), [], [])
                                        , CallT(SVar("remove_extension_0_0"), [], [])
                                        , CallT(SVar("d_7"), [], [])
                                        , CallT(SVar("e_7"), [], [])
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ CallT(SVar("f_7"), [], [])
                                          , CallT(SVar("remove_extension_0_0"), [], [])
                                          , CallT(SVar("g_7"), [], [])
                                          , CallT(SVar("h_7"), [], [])
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ CallT(SVar("i_7"), [], [])
                                            , CallT(SVar("remove_extension_0_0"), [], [])
                                            , CallT(SVar("j_7"), [], [])
                                            , CallT(SVar("k_7"), [], [])
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ CallT(SVar("l_7"), [], [])
                                              , CallT(SVar("remove_extension_0_0"), [], [])
                                              , CallT(SVar("m_7"), [], [])
                                              , CallT(SVar("n_7"), [], [])
                                              ]
                                            , []
                                            )
                                          , Seq(
                                              CallT(
                                                SVar("apply_test_4_0")
                                              , [ CallT(SVar("o_7"), [], [])
                                                , CallT(SVar("remove_extension_0_0"), [], [])
                                                , CallT(SVar("p_7"), [], [])
                                                , CallT(SVar("q_7"), [], [])
                                                ]
                                              , []
                                              )
                                            , Seq(
                                                CallT(
                                                  SVar("apply_test_4_0")
                                                , [ CallT(SVar("r_7"), [], [])
                                                  , CallT(SVar("remove_extension_0_0"), [], [])
                                                  , CallT(SVar("s_7"), [], [])
                                                  , CallT(SVar("t_7"), [], [])
                                                  ]
                                                , []
                                                )
                                              , Seq(
                                                  CallT(
                                                    SVar("apply_test_4_0")
                                                  , [ CallT(SVar("v_7"), [], [])
                                                    , CallT(SVar("remove_extension_0_0"), [], [])
                                                    , CallT(SVar("w_7"), [], [])
                                                    , CallT(SVar("x_7"), [], [])
                                                    ]
                                                  , []
                                                  )
                                                , Seq(
                                                    CallT(
                                                      SVar("apply_test_4_0")
                                                    , [ CallT(SVar("y_7"), [], [])
                                                      , CallT(SVar("remove_extension_0_0"), [], [])
                                                      , CallT(SVar("z_7"), [], [])
                                                      , CallT(SVar("a_8"), [], [])
                                                      ]
                                                    , []
                                                    )
                                                  , Seq(
                                                      CallT(
                                                        SVar("apply_test_4_0")
                                                      , [ CallT(SVar("b_8"), [], [])
                                                        , CallT(SVar("remove_extension_0_0"), [], [])
                                                        , CallT(SVar("c_8"), [], [])
                                                        , CallT(SVar("d_8"), [], [])
                                                        ]
                                                      , []
                                                      )
                                                    , Seq(
                                                        CallT(
                                                          SVar("apply_test_4_0")
                                                        , [ CallT(SVar("e_8"), [], [])
                                                          , CallT(SVar("remove_extension_0_0"), [], [])
                                                          , CallT(SVar("f_8"), [], [])
                                                          , CallT(SVar("g_8"), [], [])
                                                          ]
                                                        , []
                                                        )
                                                      , Seq(
                                                          CallT(
                                                            SVar("apply_test_4_0")
                                                          , [ CallT(SVar("h_8"), [], [])
                                                            , CallT(SVar("i_8"), [], [])
                                                            , CallT(SVar("j_8"), [], [])
                                                            , CallT(SVar("k_8"), [], [])
                                                            ]
                                                          , []
                                                          )
                                                        , Seq(
                                                            CallT(
                                                              SVar("apply_test_4_0")
                                                            , [ CallT(SVar("l_8"), [], [])
                                                              , CallT(SVar("m_8"), [], [])
                                                              , CallT(SVar("n_8"), [], [])
                                                              , CallT(SVar("o_8"), [], [])
                                                              ]
                                                            , []
                                                            )
                                                          , Seq(
                                                              CallT(
                                                                SVar("apply_test_4_0")
                                                              , [ CallT(SVar("p_8"), [], [])
                                                                , CallT(SVar("q_8"), [], [])
                                                                , CallT(SVar("r_8"), [], [])
                                                                , CallT(SVar("s_8"), [], [])
                                                                ]
                                                              , []
                                                              )
                                                            , Seq(
                                                                CallT(
                                                                  SVar("apply_test_4_0")
                                                                , [ CallT(SVar("t_8"), [], [])
                                                                  , CallT(SVar("u_8"), [], [])
                                                                  , CallT(SVar("v_8"), [], [])
                                                                  , CallT(SVar("w_8"), [], [])
                                                                  ]
                                                                , []
                                                                )
                                                              , Seq(
                                                                  CallT(
                                                                    SVar("apply_test_4_0")
                                                                  , [ CallT(SVar("x_8"), [], [])
                                                                    , CallT(SVar("y_8"), [], [])
                                                                    , CallT(SVar("z_8"), [], [])
                                                                    , CallT(SVar("b_9"), [], [])
                                                                    ]
                                                                  , []
                                                                  )
                                                                , Seq(
                                                                    CallT(
                                                                      SVar("apply_test_4_0")
                                                                    , [ CallT(SVar("f_9"), [], [])
                                                                      , CallT(SVar("g_9"), [], [])
                                                                      , CallT(SVar("h_9"), [], [])
                                                                      , CallT(SVar("i_9"), [], [])
                                                                      ]
                                                                    , []
                                                                    )
                                                                  , Seq(
                                                                      CallT(
                                                                        SVar("apply_test_4_0")
                                                                      , [ CallT(SVar("j_9"), [], [])
                                                                        , CallT(SVar("k_9"), [], [])
                                                                        , CallT(SVar("l_9"), [], [])
                                                                        , CallT(SVar("m_9"), [], [])
                                                                        ]
                                                                      , []
                                                                      )
                                                                    , Seq(
                                                                        CallT(
                                                                          SVar("apply_test_4_0")
                                                                        , [ CallT(SVar("n_9"), [], [])
                                                                          , CallT(SVar("o_9"), [], [])
                                                                          , CallT(SVar("p_9"), [], [])
                                                                          , CallT(SVar("q_9"), [], [])
                                                                          ]
                                                                        , []
                                                                        )
                                                                      , Seq(
                                                                          CallT(
                                                                            SVar("apply_test_4_0")
                                                                          , [ CallT(SVar("r_9"), [], [])
                                                                            , CallT(SVar("s_9"), [], [])
                                                                            , CallT(SVar("t_9"), [], [])
                                                                            , CallT(SVar("u_9"), [], [])
                                                                            ]
                                                                          , []
                                                                          )
                                                                        , Seq(
                                                                            CallT(
                                                                              SVar("apply_test_4_0")
                                                                            , [ CallT(SVar("v_9"), [], [])
                                                                              , CallT(SVar("w_9"), [], [])
                                                                              , CallT(SVar("x_9"), [], [])
                                                                              , CallT(SVar("y_9"), [], [])
                                                                              ]
                                                                            , []
                                                                            )
                                                                          , Seq(
                                                                              CallT(
                                                                                SVar("apply_test_4_0")
                                                                              , [ CallT(SVar("z_9"), [], [])
                                                                                , CallT(SVar("a_10"), [], [])
                                                                                , CallT(SVar("b_10"), [], [])
                                                                                , CallT(SVar("c_10"), [], [])
                                                                                ]
                                                                              , []
                                                                              )
                                                                            , Seq(
                                                                                CallT(
                                                                                  SVar("apply_test_4_0")
                                                                                , [ CallT(SVar("d_10"), [], [])
                                                                                  , CallT(SVar("e_10"), [], [])
                                                                                  , CallT(SVar("f_10"), [], [])
                                                                                  , CallT(SVar("g_10"), [], [])
                                                                                  ]
                                                                                , []
                                                                                )
                                                                              , Seq(
                                                                                  CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ CallT(SVar("h_10"), [], [])
                                                                                    , CallT(SVar("i_10"), [], [])
                                                                                    , CallT(SVar("j_10"), [], [])
                                                                                    , CallT(SVar("k_10"), [], [])
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                , Seq(
                                                                                    CallT(
                                                                                      SVar("apply_test_4_0")
                                                                                    , [ CallT(SVar("l_10"), [], [])
                                                                                      , CallT(SVar("m_10"), [], [])
                                                                                      , CallT(SVar("n_10"), [], [])
                                                                                      , CallT(SVar("o_10"), [], [])
                                                                                      ]
                                                                                    , []
                                                                                    )
                                                                                  , Seq(
                                                                                      CallT(
                                                                                        SVar("apply_test_4_0")
                                                                                      , [ CallT(SVar("p_10"), [], [])
                                                                                        , CallT(SVar("q_10"), [], [])
                                                                                        , CallT(SVar("r_10"), [], [])
                                                                                        , CallT(SVar("s_10"), [], [])
                                                                                        ]
                                                                                      , []
                                                                                      )
                                                                                    , Seq(
                                                                                        CallT(
                                                                                          SVar("apply_test_4_0")
                                                                                        , [ CallT(SVar("t_10"), [], [])
                                                                                          , CallT(SVar("u_10"), [], [])
                                                                                          , CallT(SVar("v_10"), [], [])
                                                                                          , CallT(SVar("w_10"), [], [])
                                                                                          ]
                                                                                        , []
                                                                                        )
                                                                                      , Seq(
                                                                                          CallT(
                                                                                            SVar("apply_test_3_0")
                                                                                          , [ CallT(SVar("x_10"), [], [])
                                                                                            , CallT(SVar("y_10"), [], [])
                                                                                            , CallT(SVar("z_10"), [], [])
                                                                                            ]
                                                                                          , []
                                                                                          )
                                                                                        , Seq(
                                                                                            CallT(
                                                                                              SVar("apply_test_3_0")
                                                                                            , [ CallT(SVar("a_11"), [], [])
                                                                                              , CallT(SVar("b_11"), [], [])
                                                                                              , CallT(SVar("c_11"), [], [])
                                                                                              ]
                                                                                            , []
                                                                                            )
                                                                                          , Seq(
                                                                                              CallT(
                                                                                                SVar("apply_and_fail_3_0")
                                                                                              , [ CallT(SVar("d_11"), [], [])
                                                                                                , CallT(SVar("e_11"), [], [])
                                                                                                , CallT(SVar("f_11"), [], [])
                                                                                                ]
                                                                                              , []
                                                                                              )
                                                                                            , Seq(
                                                                                                CallT(
                                                                                                  SVar("apply_and_fail_3_0")
                                                                                                , [ CallT(SVar("g_11"), [], [])
                                                                                                  , CallT(SVar("h_11"), [], [])
                                                                                                  , CallT(SVar("i_11"), [], [])
                                                                                                  ]
                                                                                                , []
                                                                                                )
                                                                                              , Seq(
                                                                                                  CallT(
                                                                                                    SVar("apply_and_fail_3_0")
                                                                                                  , [ CallT(SVar("j_11"), [], [])
                                                                                                    , CallT(SVar("k_11"), [], [])
                                                                                                    , CallT(SVar("l_11"), [], [])
                                                                                                    ]
                                                                                                  , []
                                                                                                  )
                                                                                                , Seq(
                                                                                                    CallT(
                                                                                                      SVar("apply_and_fail_3_0")
                                                                                                    , [ CallT(SVar("m_11"), [], [])
                                                                                                      , CallT(SVar("n_11"), [], [])
                                                                                                      , CallT(SVar("o_11"), [], [])
                                                                                                      ]
                                                                                                    , []
                                                                                                    )
                                                                                                  , Seq(
                                                                                                      CallT(
                                                                                                        SVar("apply_test_3_0")
                                                                                                      , [ CallT(SVar("p_11"), [], [])
                                                                                                        , CallT(SVar("q_11"), [], [])
                                                                                                        , CallT(SVar("r_11"), [], [])
                                                                                                        ]
                                                                                                      , []
                                                                                                      )
                                                                                                    , Seq(
                                                                                                        CallT(
                                                                                                          SVar("apply_test_3_0")
                                                                                                        , [ CallT(SVar("t_11"), [], [])
                                                                                                          , CallT(SVar("u_11"), [], [])
                                                                                                          , CallT(SVar("v_11"), [], [])
                                                                                                          ]
                                                                                                        , []
                                                                                                        )
                                                                                                      , Seq(
                                                                                                          CallT(
                                                                                                            SVar("apply_and_fail_3_0")
                                                                                                          , [ CallT(SVar("x_11"), [], [])
                                                                                                            , CallT(SVar("y_11"), [], [])
                                                                                                            , CallT(SVar("z_11"), [], [])
                                                                                                            ]
                                                                                                          , []
                                                                                                          )
                                                                                                        , Seq(
                                                                                                            CallT(
                                                                                                              SVar("apply_and_fail_3_0")
                                                                                                            , [ CallT(SVar("b_12"), [], [])
                                                                                                              , CallT(SVar("c_12"), [], [])
                                                                                                              , CallT(SVar("d_12"), [], [])
                                                                                                              ]
                                                                                                            , []
                                                                                                            )
                                                                                                          , Seq(
                                                                                                              CallT(
                                                                                                                SVar("apply_and_fail_3_0")
                                                                                                              , [ CallT(SVar("f_12"), [], [])
                                                                                                                , CallT(SVar("g_12"), [], [])
                                                                                                                , CallT(SVar("h_12"), [], [])
                                                                                                                ]
                                                                                                              , []
                                                                                                              )
                                                                                                            , Seq(
                                                                                                                CallT(
                                                                                                                  SVar("apply_and_fail_3_0")
                                                                                                                , [ CallT(SVar("j_12"), [], [])
                                                                                                                  , CallT(SVar("k_12"), [], [])
                                                                                                                  , CallT(SVar("l_12"), [], [])
                                                                                                                  ]
                                                                                                                , []
                                                                                                                )
                                                                                                              , Seq(
                                                                                                                  CallT(
                                                                                                                    SVar("apply_test_3_0")
                                                                                                                  , [ CallT(SVar("n_12"), [], [])
                                                                                                                    , CallT(SVar("o_12"), [], [])
                                                                                                                    , CallT(SVar("p_12"), [], [])
                                                                                                                    ]
                                                                                                                  , []
                                                                                                                  )
                                                                                                                , Seq(
                                                                                                                    CallT(
                                                                                                                      SVar("apply_test_3_0")
                                                                                                                    , [ CallT(SVar("r_12"), [], [])
                                                                                                                      , CallT(SVar("s_12"), [], [])
                                                                                                                      , CallT(SVar("t_12"), [], [])
                                                                                                                      ]
                                                                                                                    , []
                                                                                                                    )
                                                                                                                  , Seq(
                                                                                                                      CallT(
                                                                                                                        SVar("apply_and_fail_3_0")
                                                                                                                      , [ CallT(SVar("v_12"), [], [])
                                                                                                                        , CallT(SVar("w_12"), [], [])
                                                                                                                        , CallT(SVar("x_12"), [], [])
                                                                                                                        ]
                                                                                                                      , []
                                                                                                                      )
                                                                                                                    , Seq(
                                                                                                                        CallT(
                                                                                                                          SVar("apply_and_fail_3_0")
                                                                                                                        , [ CallT(SVar("z_12"), [], [])
                                                                                                                          , CallT(SVar("a_13"), [], [])
                                                                                                                          , CallT(SVar("b_13"), [], [])
                                                                                                                          ]
                                                                                                                        , []
                                                                                                                        )
                                                                                                                      , Seq(
                                                                                                                          CallT(
                                                                                                                            SVar("apply_and_fail_3_0")
                                                                                                                          , [ CallT(SVar("d_13"), [], [])
                                                                                                                            , CallT(SVar("e_13"), [], [])
                                                                                                                            , CallT(SVar("f_13"), [], [])
                                                                                                                            ]
                                                                                                                          , []
                                                                                                                          )
                                                                                                                        , Seq(
                                                                                                                            CallT(
                                                                                                                              SVar("apply_and_fail_3_0")
                                                                                                                            , [ CallT(SVar("h_13"), [], [])
                                                                                                                              , CallT(SVar("i_13"), [], [])
                                                                                                                              , CallT(SVar("j_13"), [], [])
                                                                                                                              ]
                                                                                                                            , []
                                                                                                                            )
                                                                                                                          , Seq(
                                                                                                                              CallT(
                                                                                                                                SVar("apply_test_4_0")
                                                                                                                              , [ CallT(SVar("l_13"), [], [])
                                                                                                                                , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                , CallT(SVar("m_13"), [], [])
                                                                                                                                , CallT(SVar("n_13"), [], [])
                                                                                                                                ]
                                                                                                                              , []
                                                                                                                              )
                                                                                                                            , Seq(
                                                                                                                                CallT(
                                                                                                                                  SVar("apply_test_4_0")
                                                                                                                                , [ CallT(SVar("o_13"), [], [])
                                                                                                                                  , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                  , CallT(SVar("p_13"), [], [])
                                                                                                                                  , CallT(SVar("q_13"), [], [])
                                                                                                                                  ]
                                                                                                                                , []
                                                                                                                                )
                                                                                                                              , Seq(
                                                                                                                                  CallT(
                                                                                                                                    SVar("apply_test_4_0")
                                                                                                                                  , [ CallT(SVar("r_13"), [], [])
                                                                                                                                    , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                    , CallT(SVar("s_13"), [], [])
                                                                                                                                    , CallT(SVar("t_13"), [], [])
                                                                                                                                    ]
                                                                                                                                  , []
                                                                                                                                  )
                                                                                                                                , Seq(
                                                                                                                                    CallT(
                                                                                                                                      SVar("apply_and_fail_3_0")
                                                                                                                                    , [ CallT(SVar("u_13"), [], [])
                                                                                                                                      , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                      , CallT(SVar("v_13"), [], [])
                                                                                                                                      ]
                                                                                                                                    , []
                                                                                                                                    )
                                                                                                                                  , Seq(
                                                                                                                                      CallT(
                                                                                                                                        SVar("apply_and_fail_3_0")
                                                                                                                                      , [ CallT(SVar("w_13"), [], [])
                                                                                                                                        , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                        , CallT(SVar("x_13"), [], [])
                                                                                                                                        ]
                                                                                                                                      , []
                                                                                                                                      )
                                                                                                                                    , Seq(
                                                                                                                                        CallT(
                                                                                                                                          SVar("apply_test_3_0")
                                                                                                                                        , [ CallT(SVar("y_13"), [], [])
                                                                                                                                          , CallT(SVar("z_13"), [], [])
                                                                                                                                          , CallT(SVar("a_14"), [], [])
                                                                                                                                          ]
                                                                                                                                        , []
                                                                                                                                        )
                                                                                                                                      , Seq(
                                                                                                                                          CallT(
                                                                                                                                            SVar("apply_test_3_0")
                                                                                                                                          , [ CallT(SVar("c_14"), [], [])
                                                                                                                                            , CallT(SVar("d_14"), [], [])
                                                                                                                                            , CallT(SVar("f_14"), [], [])
                                                                                                                                            ]
                                                                                                                                          , []
                                                                                                                                          )
                                                                                                                                        , Seq(
                                                                                                                                            CallT(
                                                                                                                                              SVar("apply_and_fail_3_0")
                                                                                                                                            , [ CallT(SVar("g_14"), [], [])
                                                                                                                                              , CallT(SVar("h_14"), [], [])
                                                                                                                                              , CallT(SVar("i_14"), [], [])
                                                                                                                                              ]
                                                                                                                                            , []
                                                                                                                                            )
                                                                                                                                          , Seq(
                                                                                                                                              CallT(
                                                                                                                                                SVar("apply_test_3_0")
                                                                                                                                              , [ CallT(SVar("k_14"), [], [])
                                                                                                                                                , CallT(SVar("m_14"), [], [])
                                                                                                                                                , CallT(SVar("v_14"), [], [])
                                                                                                                                                ]
                                                                                                                                              , []
                                                                                                                                              )
                                                                                                                                            , CallT(
                                                                                                                                                SVar("apply_test_3_0")
                                                                                                                                              , [ CallT(SVar("x_14"), [], [])
                                                                                                                                                , CallT(SVar("y_14"), [], [])
                                                                                                                                                , CallT(SVar("z_14"), [], [])
                                                                                                                                                ]
                                                                                                                                              , []
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "b_15"
        , []
        , []
        , Build(Anno(Str("is-abspath -- 1"), Op("Nil", [])))
        )
      , SDefT(
          "c_15"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "d_15"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "e_15"
        , []
        , []
        , Build(Anno(Str("is-abspath -- 2"), Op("Nil", [])))
        )
      , SDefT(
          "f_15"
        , []
        , []
        , Build(Anno(Str("/bla"), Op("Nil", [])))
        )
      , SDefT(
          "g_15"
        , []
        , []
        , Build(Anno(Str("/bla"), Op("Nil", [])))
        )
      , SDefT(
          "h_15"
        , []
        , []
        , Build(Anno(Str("is-abspath -- 3"), Op("Nil", [])))
        )
      , SDefT(
          "i_15"
        , []
        , []
        , Build(Anno(Str("bla"), Op("Nil", [])))
        )
      , SDefT(
          "j_15"
        , []
        , []
        , Build(Anno(Str("is-abspath -- 4"), Op("Nil", [])))
        )
      , SDefT(
          "k_15"
        , []
        , []
        , Build(Anno(Str("./bla"), Op("Nil", [])))
        )
      , SDefT(
          "is_abspath_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("b_15"), [], [])
              , CallT(SVar("is_abspath_0_0"), [], [])
              , CallT(SVar("c_15"), [], [])
              , CallT(SVar("d_15"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("e_15"), [], [])
                , CallT(SVar("is_abspath_0_0"), [], [])
                , CallT(SVar("f_15"), [], [])
                , CallT(SVar("g_15"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ CallT(SVar("h_15"), [], [])
                  , CallT(SVar("is_abspath_0_0"), [], [])
                  , CallT(SVar("i_15"), [], [])
                  ]
                , []
                )
              , CallT(
                  SVar("apply_and_fail_3_0")
                , [ CallT(SVar("j_15"), [], [])
                  , CallT(SVar("is_abspath_0_0"), [], [])
                  , CallT(SVar("k_15"), [], [])
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "is_abspath_0_0"
        , []
        , []
        , Scope(
            ["q_2"]
          , Seq(
              Match(Var("q_2"))
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  Match(
                    Anno(
                      Op("Cons", [Anno(Int("47"), Wld), Wld])
                    , Wld
                    )
                  )
                , Build(Var("q_2"))
                )
              )
            )
          )
        )
      , SDefT(
          "abspath_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("is_abspath_0_0"), [], [])
          , Id
          , Scope(
              ["j_2", "k_2", "s_2", "r_2"]
            , Seq(
                Match(Var("r_2"))
              , Seq(
                  Build(Anno(Op("", []), Op("Nil", [])))
                , Seq(
                    CallT(SVar("getcwd_0_0"), [], [])
                  , Seq(
                      Match(Var("j_2"))
                    , Seq(
                        Build(Var("r_2"))
                      , Seq(
                          Match(Var("s_2"))
                        , Seq(
                            Match(Var("k_2"))
                          , Seq(
                              Build(Var("s_2"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("j_2")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Str("/"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [Var("k_2"), Anno(Op("Nil", []), Op("Nil", []))]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , CallT(SVar("concat_strings_0_0"), [], [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "l_15"
        , []
        , []
        , Build(Anno(Str("abspath -- 1"), Op("Nil", [])))
        )
      , SDefT(
          "m_15"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "n_15"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "q_15"
        , []
        , []
        , Build(Anno(Str("abspath -- 2"), Op("Nil", [])))
        )
      , SDefT(
          "r_15"
        , []
        , []
        , Build(Anno(Str("/bla"), Op("Nil", [])))
        )
      , SDefT(
          "s_15"
        , []
        , []
        , Build(Anno(Str("/bla"), Op("Nil", [])))
        )
      , SDefT(
          "t_15"
        , []
        , []
        , Build(Anno(Str("abspath -- 3"), Op("Nil", [])))
        )
      , SDefT(
          "u_15"
        , []
        , []
        , Build(Anno(Str("bla"), Op("Nil", [])))
        )
      , SDefT(
          "y_15"
        , []
        , []
        , Build(Anno(Str("abspath -- 4"), Op("Nil", [])))
        )
      , SDefT(
          "z_15"
        , []
        , []
        , Build(Anno(Str("./bla"), Op("Nil", [])))
        )
      , SDefT(
          "abspath_tests_0_0"
        , []
        , []
        , Scope(
            ["e_14", "t_2"]
          , Let(
              [ SDefT(
                  "a_16"
                , []
                , []
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("e_14"), Anno(Str("/./bla"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("conc_strings_0_0"), [], [])
                  )
                )
              ]
            , Seq(
                Match(Var("t_2"))
              , Seq(
                  CallT(SVar("getcwd_0_0"), [], [])
                , Seq(
                    Match(Var("e_14"))
                  , Seq(
                      Build(Var("t_2"))
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ CallT(SVar("l_15"), [], [])
                          , CallT(SVar("abspath_0_0"), [], [])
                          , CallT(SVar("m_15"), [], [])
                          , CallT(SVar("n_15"), [], [])
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("q_15"), [], [])
                            , CallT(SVar("abspath_0_0"), [], [])
                            , CallT(SVar("r_15"), [], [])
                            , CallT(SVar("s_15"), [], [])
                            ]
                          , []
                          )
                        , Seq(
                            Let(
                              [ SDefT(
                                  "x_15"
                                , []
                                , []
                                , Seq(
                                    Build(
                                      Anno(
                                        Op(
                                          ""
                                        , [Var("e_14"), Anno(Str("/bla"), Op("Nil", []))]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  , CallT(SVar("conc_strings_0_0"), [], [])
                                  )
                                )
                              ]
                            , CallT(
                                SVar("apply_test_4_0")
                              , [ CallT(SVar("t_15"), [], [])
                                , CallT(SVar("abspath_0_0"), [], [])
                                , CallT(SVar("u_15"), [], [])
                                , CallT(SVar("x_15"), [], [])
                                ]
                              , []
                              )
                            )
                          , CallT(
                              SVar("apply_test_4_0")
                            , [ CallT(SVar("y_15"), [], [])
                              , CallT(SVar("abspath_0_0"), [], [])
                              , CallT(SVar("z_15"), [], [])
                              , CallT(SVar("a_16"), [], [])
                              ]
                            , []
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT("getcwd_0_0", [], [], PrimT("SSL_getcwd", [], []))
      , SDefT(
          "apply_test_3_0"
        , [ VarDec(
              "w_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "b_16"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("sunit_create_input_1_0")
                    , [CallT(SVar("y_124"), [], [])]
                    , []
                    )
                  , CallT(SVar("x_124"), [], [])
                  )
                , Id
                , Seq(
                    Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                  , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                  )
                )
              )
            ]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("w_124"), [], [])
              , CallT(SVar("b_16"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "c_16"
        , []
        , []
        , Build(Anno(Str("getcwd -- 1"), Op("Nil", [])))
        )
      , SDefT(
          "d_16"
        , []
        , []
        , Build(Anno(Op("", []), Op("Nil", [])))
        )
      , SDefT(
          "getcwd_tests_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_3_0")
          , [ CallT(SVar("c_16"), [], [])
            , CallT(SVar("getcwd_0_0"), [], [])
            , CallT(SVar("d_16"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "at_suffix_rev_1_0"
        , [ VarDec(
              "v_131"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "w_131"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("w_131"), [], [])
                    ]
                  , []
                  )
                , Id
                , CallT(SVar("v_131"), [], [])
                )
              )
            ]
          , CallT(SVar("w_131"), [], [])
          )
        )
      , SDefT(
          "e_16"
        , []
        , []
        , Build(Anno(Str("get-filename; use base-filename"), Op("Nil", [])))
        )
      , SDefT(
          "get_filename_0_0"
        , []
        , []
        , Scope(
            ["l_14"]
          , Seq(
              CallT(
                SVar("obsolete_1_0")
              , [CallT(SVar("e_16"), [], [])]
              , []
              )
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  Let(
                    [ SDefT(
                        "f_16"
                      , []
                      , []
                      , Seq(
                          Let(
                            [ SDefT(
                                "g_16"
                              , []
                              , []
                              , Match(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("47"), Wld), Var("l_14")]
                                    )
                                  , Wld
                                  )
                                )
                              )
                            ]
                          , CallT(
                              SVar("at_suffix_rev_1_0")
                            , [CallT(SVar("g_16"), [], [])]
                            , []
                            )
                          )
                        , Build(Var("l_14"))
                        )
                      )
                    ]
                  , CallT(
                      SVar("try_1_0")
                    , [CallT(SVar("f_16"), [], [])]
                    , []
                    )
                  )
                , CallT(SVar("implode_string_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "h_16"
        , []
        , []
        , Build(Anno(Str("get-filename-test1"), Op("Nil", [])))
        )
      , SDefT(
          "i_16"
        , []
        , []
        , Build(Anno(Str("/usr/local/bin/prog"), Op("Nil", [])))
        )
      , SDefT(
          "j_16"
        , []
        , []
        , Build(Anno(Str("prog"), Op("Nil", [])))
        )
      , SDefT(
          "m_16"
        , []
        , []
        , Build(Anno(Str("get-filename-test2"), Op("Nil", [])))
        )
      , SDefT(
          "n_16"
        , []
        , []
        , Build(Anno(Str("prog"), Op("Nil", [])))
        )
      , SDefT(
          "o_16"
        , []
        , []
        , Build(Anno(Str("prog"), Op("Nil", [])))
        )
      , SDefT(
          "get_filename_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("h_16"), [], [])
              , CallT(SVar("get_filename_0_0"), [], [])
              , CallT(SVar("i_16"), [], [])
              , CallT(SVar("j_16"), [], [])
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("m_16"), [], [])
              , CallT(SVar("get_filename_0_0"), [], [])
              , CallT(SVar("n_16"), [], [])
              , CallT(SVar("o_16"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "p_16"
        , []
        , []
        , Build(Anno(Str("get-path; use dirname"), Op("Nil", [])))
        )
      , SDefT(
          "q_16"
        , []
        , []
        , Match(Anno(Int("47"), Wld))
        )
      , SDefT(
          "r_16"
        , []
        , []
        , Build(Anno(Op("Nil", []), Op("Nil", [])))
        )
      , SDefT(
          "get_path_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("obsolete_1_0")
            , [CallT(SVar("p_16"), [], [])]
            , []
            )
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                GuardedLChoice(
                  Let(
                    [ SDefT(
                        "q_103"
                      , []
                      , []
                      , GuardedLChoice(
                          CallT(
                            SVar("Cons_2_0")
                          , [ CallT(SVar("_id"), [], [])
                            , CallT(SVar("q_103"), [], [])
                            ]
                          , []
                          )
                        , Id
                        , CallT(
                            SVar("Cons_2_0")
                          , [ CallT(SVar("q_16"), [], [])
                            , CallT(SVar("r_16"), [], [])
                            ]
                          , []
                          )
                        )
                      )
                    ]
                  , CallT(SVar("q_103"), [], [])
                  )
                , Id
                , Build(Anno(Op("Nil", []), Op("Nil", [])))
                )
              , CallT(SVar("implode_string_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "s_16"
        , []
        , []
        , Build(Anno(Str("get-path-test1"), Op("Nil", [])))
        )
      , SDefT(
          "t_16"
        , []
        , []
        , Build(Anno(Str("/usr/local/bin/prog"), Op("Nil", [])))
        )
      , SDefT(
          "v_16"
        , []
        , []
        , Build(Anno(Str("/usr/local/bin/"), Op("Nil", [])))
        )
      , SDefT(
          "w_16"
        , []
        , []
        , Build(Anno(Str("get-path-test2"), Op("Nil", [])))
        )
      , SDefT(
          "x_16"
        , []
        , []
        , Build(Anno(Str("prog"), Op("Nil", [])))
        )
      , SDefT(
          "y_16"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "get_path_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("s_16"), [], [])
              , CallT(SVar("get_path_0_0"), [], [])
              , CallT(SVar("t_16"), [], [])
              , CallT(SVar("v_16"), [], [])
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("w_16"), [], [])
              , CallT(SVar("get_path_0_0"), [], [])
              , CallT(SVar("x_16"), [], [])
              , CallT(SVar("y_16"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "z_16"
        , []
        , []
        , Build(Anno(Str("base-filename-test 1"), Op("Nil", [])))
        )
      , SDefT(
          "a_17"
        , []
        , []
        , Build(Anno(Str("./number.r"), Op("Nil", [])))
        )
      , SDefT(
          "b_17"
        , []
        , []
        , Build(Anno(Str("number.r"), Op("Nil", [])))
        )
      , SDefT(
          "c_17"
        , []
        , []
        , Build(Anno(Str("base-filename-test 2"), Op("Nil", [])))
        )
      , SDefT(
          "d_17"
        , []
        , []
        , Build(Anno(Str("./number"), Op("Nil", [])))
        )
      , SDefT(
          "e_17"
        , []
        , []
        , Build(Anno(Str("number"), Op("Nil", [])))
        )
      , SDefT(
          "f_17"
        , []
        , []
        , Build(Anno(Str("base-filename-test 3"), Op("Nil", [])))
        )
      , SDefT(
          "g_17"
        , []
        , []
        , Build(Anno(Str("/usr/bin/number.str"), Op("Nil", [])))
        )
      , SDefT(
          "h_17"
        , []
        , []
        , Build(Anno(Str("number.str"), Op("Nil", [])))
        )
      , SDefT(
          "base_filename_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("z_16"), [], [])
              , CallT(SVar("base_filename_0_0"), [], [])
              , CallT(SVar("a_17"), [], [])
              , CallT(SVar("b_17"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("c_17"), [], [])
                , CallT(SVar("base_filename_0_0"), [], [])
                , CallT(SVar("d_17"), [], [])
                , CallT(SVar("e_17"), [], [])
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("f_17"), [], [])
                , CallT(SVar("base_filename_0_0"), [], [])
                , CallT(SVar("g_17"), [], [])
                , CallT(SVar("h_17"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "i_17"
        , []
        , []
        , Build(Anno(Str("basename(ext); use test-extension(s); remove-extension"), Op("Nil", [])))
        )
      , SDefT(
          "j_17"
        , []
        , []
        , Match(Anno(Int("47"), Wld))
        )
      , SDefT(
          "k_17"
        , []
        , []
        , Match(Anno(Int("46"), Wld))
        )
      , SDefT(
          "basename_1_0"
        , [ VarDec(
              "k_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(
              SVar("obsolete_1_0")
            , [CallT(SVar("i_17"), [], [])]
            , []
            )
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                Let(
                  [ SDefT(
                      "l_103"
                    , []
                    , []
                    , GuardedLChoice(
                        CallT(
                          SVar("Cons_2_0")
                        , [ CallT(SVar("_id"), [], [])
                          , CallT(SVar("l_103"), [], [])
                          ]
                        , []
                        )
                      , Id
                      , GuardedLChoice(
                          CallT(
                            SVar("Cons_2_0")
                          , [ CallT(SVar("j_17"), [], [])
                            , CallT(SVar("_id"), [], [])
                            ]
                          , []
                          )
                        , Id
                        , Seq(
                            CallT(
                              SVar("Cons_2_0")
                            , [ CallT(SVar("k_17"), [], [])
                              , CallT(SVar("k_103"), [], [])
                              ]
                            , []
                            )
                          , Build(Anno(Op("Nil", []), Op("Nil", [])))
                          )
                        )
                      )
                    )
                  ]
                , CallT(
                    SVar("try_1_0")
                  , [CallT(SVar("l_103"), [], [])]
                  , []
                  )
                )
              , CallT(SVar("implode_string_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "fputs_0_0"
        , []
        , []
        , Scope(
            ["v_15", "w_15", "a_3", "u_2"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("v_15"), Anno(Op("Stream", [Var("w_15")]), Wld)]
                  )
                , Wld
                )
              )
            , Seq(
                PrimT("SSL_fputs", [], [Var("v_15"), Var("w_15")])
              , Seq(
                  Match(Var("u_2"))
                , Seq(
                    Match(Var("a_3"))
                  , Seq(
                      Build(Var("u_2"))
                    , Build(
                        Anno(
                          Op("Stream", [Var("a_3")])
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "stderr_stream_0_0"
        , []
        , []
        , Scope(
            ["i_3", "v_2"]
          , Seq(
              PrimT("SSL_stderr_stream", [], [])
            , Seq(
                Match(Var("v_2"))
              , Seq(
                  Match(Var("i_3"))
                , Seq(
                    Build(Var("v_2"))
                  , Build(
                      Anno(
                        Op("Stream", [Var("i_3")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "log_stream_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              Build(Anno(Str("log-stream"), Op("Nil", [])))
            , CallT(SVar("get_config_0_0"), [], [])
            )
          , Id
          , Seq(
              Build(Anno(Op("", []), Op("Nil", [])))
            , CallT(SVar("stderr_stream_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "log_puts_0_0"
        , []
        , []
        , Scope(
            ["s_153", "t_153", "x_2", "w_2"]
          , Seq(
              Match(Var("w_2"))
            , Seq(
                Match(Var("s_153"))
              , Seq(
                  Build(Var("w_2"))
                , Seq(
                    Match(Var("x_2"))
                  , Seq(
                      Build(Anno(Op("", []), Op("Nil", [])))
                    , Seq(
                        CallT(SVar("log_stream_0_0"), [], [])
                      , Seq(
                          Match(Var("t_153"))
                        , Seq(
                            Build(Var("x_2"))
                          , Seq(
                              Build(
                                Anno(
                                  Op("", [Var("s_153"), Var("t_153")])
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("fputs_0_0"), [], [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "severity_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              Match(Anno(Op("Vomit", []), Wld))
            , Build(Anno(Str("vomit"), Op("Nil", [])))
            )
          , Id
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("Debug", []), Wld))
              , Build(Anno(Str("debug"), Op("Nil", [])))
              )
            , Id
            , GuardedLChoice(
                Seq(
                  Match(Anno(Op("Notice", []), Wld))
                , Build(Anno(Str("notice"), Op("Nil", [])))
                )
              , Id
              , GuardedLChoice(
                  Seq(
                    Match(Anno(Op("Warning", []), Wld))
                  , Build(Anno(Str("warning"), Op("Nil", [])))
                  )
                , Id
                , GuardedLChoice(
                    Seq(
                      Match(Anno(Op("Info", []), Wld))
                    , Build(Anno(Str("info"), Op("Nil", [])))
                    )
                  , Id
                  , GuardedLChoice(
                      Seq(
                        Match(Anno(Op("Error", []), Wld))
                      , Build(Anno(Str("error"), Op("Nil", [])))
                      )
                    , Id
                    , GuardedLChoice(
                        Seq(
                          Match(Anno(Op("Critical", []), Wld))
                        , Build(Anno(Str("critical"), Op("Nil", [])))
                        )
                      , Id
                      , GuardedLChoice(
                          Seq(
                            Match(Anno(Op("Alert", []), Wld))
                          , Build(Anno(Str("alert"), Op("Nil", [])))
                          )
                        , Id
                        , Seq(
                            Match(Anno(Op("Emergency", []), Wld))
                          , Build(Anno(Str("emergency"), Op("Nil", [])))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Last_0_0"
        , []
        , []
        , Scope(
            ["h_80"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Var("h_80"), Anno(Op("Nil", []), Wld)]
                  )
                , Wld
                )
              )
            , Build(Var("h_80"))
            )
          )
        )
      , SDefT(
          "last_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "w_130"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Last_0_0"), [], [])
                , Id
                , Seq(
                    CallT(SVar("Tl_0_0"), [], [])
                  , CallT(SVar("w_130"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("w_130"), [], [])
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "z_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "a_133"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("z_132"), [], [])
                    , CallT(SVar("_id"), [], [])
                    ]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("a_133"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("a_133"), [], [])
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "t_131"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "u_131"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("t_131"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("u_131"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("u_131"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "c_133"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["w_79", "b_158", "y_2"]
          , Seq(
              Let(
                [ SDefT(
                    "l_17"
                  , []
                  , []
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [ CallT(SVar("c_133"), [], [])
                        , CallT(SVar("_id"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        Let(
                          [SDefT("m_17", [], [], Match(Var("w_79")))]
                        , CallT(
                            SVar("Cons_2_0")
                          , [ CallT(SVar("_id"), [], [])
                            , CallT(SVar("m_17"), [], [])
                            ]
                          , []
                          )
                        )
                      , Build(Anno(Op("Nil", []), Op("Nil", [])))
                      )
                    )
                  )
                ]
              , CallT(
                  SVar("at_suffix_1_0")
                , [CallT(SVar("l_17"), [], [])]
                , []
                )
              )
            , Seq(
                Match(Var("y_2"))
              , Seq(
                  Match(Var("b_158"))
                , Seq(
                    Build(Var("y_2"))
                  , Build(
                      Anno(
                        Op("", [Var("b_158"), Var("w_79")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_1_0"
        , [ VarDec(
              "e_133"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            GuardedLChoice(
              CallT(
                SVar("split_fetch_1_0")
              , [CallT(SVar("e_133"), [], [])]
              , []
              )
            , Id
            , Scope(
                ["d_158", "z_2"]
              , Seq(
                  Match(Var("z_2"))
                , Seq(
                    Match(Var("d_158"))
                  , Seq(
                      Build(Var("z_2"))
                    , Build(
                        Anno(
                          Op(
                            ""
                          , [Var("d_158"), Anno(Op("Nil", []), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          , GuardedLChoice(
              Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Op("Nil", []), Wld)
                      , Anno(Op("Nil", []), Wld)
                      ]
                    )
                  , Wld
                  )
                )
              , Build(Anno(Op("Nil", []), Op("Nil", [])))
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["b_80"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          ""
                        , [ As(
                              Var("b_80")
                            , Anno(Op("Cons", [Wld, Wld]), Wld)
                            )
                          , Anno(Op("Nil", []), Wld)
                          ]
                        )
                      , Wld
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [Var("b_80"), Anno(Op("Nil", []), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["c_80", "e_158", "b_3"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , As(
                                Var("c_80")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("b_3"))
                      , Seq(
                          Build(Var("c_80"))
                        , Seq(
                            CallT(
                              SVar("list_tokenize_1_0")
                            , [CallT(SVar("e_133"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("e_158"))
                            , Seq(Build(Var("b_3")), Build(Var("e_158")))
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["d_80", "e_80", "f_158", "c_3"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ As(
                                Var("d_80")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            , As(
                                Var("e_80")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("c_3"))
                      , Seq(
                          Build(Var("e_80"))
                        , Seq(
                            CallT(
                              SVar("list_tokenize_1_0")
                            , [CallT(SVar("e_133"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("f_158"))
                            , Seq(
                                Build(Var("c_3"))
                              , Build(
                                  Anno(
                                    Op("Cons", [Var("d_80"), Var("f_158")])
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_1_0"
        , [ VarDec(
              "c_139"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(
                SVar("list_tokenize_1_0")
              , [CallT(SVar("c_139"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_0_1"
        , []
        , [VarDec("g_89", ConstType(Sort("ATerm", [])))]
        , Let(
            [ SDefT(
                "n_17"
              , []
              , []
              , Scope(
                  ["h_89"]
                , Let(
                    [SDefT("o_17", [], [], Match(Var("h_89")))]
                  , Seq(
                      Match(Var("h_89"))
                    , Seq(
                        Build(Var("g_89"))
                      , CallT(
                          SVar("fetch_1_0")
                        , [CallT(SVar("o_17"), [], [])]
                        , []
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(
              SVar("string_tokenize_1_0")
            , [CallT(SVar("n_17"), [], [])]
            , []
            )
          )
        )
      , SDefT(
          "string_tokenize_0_0"
        , []
        , []
        , Scope(
            ["i_89", "c_163"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("i_89"), Var("c_163")])
                , Wld
                )
              )
            , Seq(
                Build(Var("c_163"))
              , CallT(SVar("string_tokenize_0_1"), [], [Var("i_89")])
              )
            )
          )
        )
      , SDefT(
          "base_filename_0_0"
        , []
        , []
        , Scope(
            ["l_2", "d_3"]
          , Seq(
              Match(Var("d_3"))
            , Seq(
                Match(Var("l_2"))
              , Seq(
                  Build(Var("d_3"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("47"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Var("l_2")
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("string_tokenize_0_0"), [], [])
                    , CallT(SVar("last_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "whoami_0_0"
        , []
        , []
        , Seq(
            Build(Anno(Str("program"), Op("Nil", [])))
          , CallT(SVar("get_config_0_0"), [], [])
          )
        )
      , SDefT(
          "log_src_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("whoami_0_0"), [], [])
            , CallT(SVar("base_filename_0_0"), [], [])
            )
          , Id
          , Build(Anno(Str("identity crisis"), Op("Nil", [])))
          )
        )
      , SDefT(
          "write_to_string_0_0"
        , []
        , []
        , Scope(
            ["u_16"]
          , Seq(
              Match(Var("u_16"))
            , PrimT("SSL_write_term_to_string", [], [Var("u_16")])
            )
          )
        )
      , SDefT(
          "is_string_0_0"
        , []
        , []
        , Scope(
            ["s_90"]
          , Seq(
              Match(Var("s_90"))
            , PrimT("SSL_is_string", [], [Var("s_90")])
            )
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "r_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "s_132"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("r_132"), [], [])
                    , CallT(SVar("s_132"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("s_132"), [], [])
          )
        )
      , SDefT(
          "is_list_0_0"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Op("Nil", []), Wld))
          , Id
          , Match(Anno(Op("Cons", [Wld, Wld]), Wld))
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["m_21", "n_21", "e_3"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("m_21"), Var("n_21")])
                , Wld
                )
              )
            , Seq(
                Match(Var("e_3"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("m_21"), Var("n_21")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("m_21"), Var("n_21")])
                  )
                , Build(Var("e_3"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["s_21"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("s_21"), Var("s_21")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "hashtable_get_0_1"
        , []
        , [VarDec("b_28", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["c_28"]
          , Seq(
              Match(Anno(Op("Hashtable", [Var("c_28")]), Wld))
            , PrimT("SSL_hashtable_get", [], [Var("c_28"), Var("b_28")])
            )
          )
        )
      , SDefT(
          "hashtable_put_0_2"
        , []
        , [ VarDec("y_27", ConstType(Sort("ATerm", [])))
          , VarDec("z_27", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["a_28", "a_9", "f_3"]
          , Seq(
              Match(Anno(Op("Hashtable", [Var("a_28")]), Wld))
            , Seq(
                PrimT(
                  "SSL_hashtable_put"
                , []
                , [Var("a_28"), Var("y_27"), Var("z_27")]
                )
              , Seq(
                  Match(Var("f_3"))
                , Seq(
                    Match(Var("a_9"))
                  , Seq(
                      Build(Var("f_3"))
                    , Build(
                        Anno(
                          Op("Hashtable", [Var("a_9")])
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "new_hashtable_0_2"
        , []
        , [ VarDec("i_28", ConstType(Sort("ATerm", [])))
          , VarDec("j_28", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["e_9", "g_3"]
          , Seq(
              PrimT("SSL_hashtable_create", [], [Var("i_28"), Var("j_28")])
            , Seq(
                Match(Var("g_3"))
              , Seq(
                  Match(Var("e_9"))
                , Seq(
                    Build(Var("g_3"))
                  , Build(
                      Anno(
                        Op("Hashtable", [Var("e_9")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "new_hashtable_0_0"
        , []
        , []
        , Scope(
            ["c_9", "d_9", "j_3", "h_3"]
          , Seq(
              Match(Var("h_3"))
            , Seq(
                Build(Anno(Int("117"), Op("Nil", [])))
              , Seq(
                  Match(Var("c_9"))
                , Seq(
                    Build(Var("h_3"))
                  , Seq(
                      Match(Var("j_3"))
                    , Seq(
                        Build(Anno(Int("75"), Op("Nil", [])))
                      , Seq(
                          Match(Var("d_9"))
                        , Seq(
                            Build(Var("j_3"))
                          , CallT(
                              SVar("new_hashtable_0_2")
                            , []
                            , [Var("c_9"), Var("d_9")]
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "table_create_0_0"
        , []
        , []
        , Scope(
            ["r_24", "s_24", "l_3", "k_3"]
          , Seq(
              Match(Var("r_24"))
            , Seq(
                Match(Var("k_3"))
              , Seq(
                  CallT(SVar("new_hashtable_0_0"), [], [])
                , Seq(
                    Match(Var("s_24"))
                  , Seq(
                      Build(Var("k_3"))
                    , Seq(
                        Match(Var("l_3"))
                      , Seq(
                          CallT(SVar("table_hashtable_0_0"), [], [])
                        , Seq(
                            CallT(
                              SVar("hashtable_put_0_2")
                            , []
                            , [Var("r_24"), Var("s_24")]
                            )
                          , Build(Var("l_3"))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "table_hashtable_0_0"
        , []
        , []
        , Scope(
            ["u_7", "m_3"]
          , Seq(
              PrimT("SSL_table_hashtable", [], [])
            , Seq(
                Match(Var("m_3"))
              , Seq(
                  Match(Var("u_7"))
                , Seq(
                    Build(Var("m_3"))
                  , Build(
                      Anno(
                        Op("Hashtable", [Var("u_7")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "lookup_table_0_1"
        , []
        , [VarDec("q_24", ConstType(Sort("ATerm", [])))]
        , Seq(
            CallT(SVar("table_hashtable_0_0"), [], [])
          , GuardedLChoice(
              CallT(SVar("hashtable_get_0_1"), [], [Var("q_24")])
            , Id
            , Scope(
                ["n_3"]
              , Seq(
                  Match(Var("n_3"))
                , Seq(
                    Build(Var("q_24"))
                  , Seq(
                      CallT(SVar("table_create_0_0"), [], [])
                    , Seq(
                        Build(Var("n_3"))
                      , CallT(SVar("hashtable_get_0_1"), [], [Var("q_24")])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "table_get_0_0"
        , []
        , []
        , Scope(
            ["x_24", "y_24"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("x_24"), Var("y_24")])
                , Wld
                )
              )
            , Seq(
                CallT(SVar("lookup_table_0_1"), [], [Var("x_24")])
              , CallT(SVar("hashtable_get_0_1"), [], [Var("y_24")])
              )
            )
          )
        )
      , SDefT(
          "get_config_0_0"
        , []
        , []
        , Scope(
            ["n_150", "o_3"]
          , Seq(
              Match(Var("o_3"))
            , Seq(
                Match(Var("n_150"))
              , Seq(
                  Build(Var("o_3"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Anno(Str("config"), Op("Nil", [])), Var("n_150")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("table_get_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "verbosity_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              Build(Anno(Str("--verbose"), Op("Nil", [])))
            , CallT(SVar("get_config_0_0"), [], [])
            )
          , Id
          , Build(Anno(Int("1"), Op("Nil", [])))
          )
        )
      , SDefT(
          "if_verbose_1_1"
        , [ VarDec(
              "j_127"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , [VarDec("k_68", ConstType(Sort("ATerm", [])))]
        , GuardedLChoice(
            Scope(
              ["x_3", "w_150", "p_3"]
            , Seq(
                Match(Var("x_3"))
              , Seq(
                  Match(Var("p_3"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("verbosity_0_0"), [], [])
                    , Seq(
                        Match(Var("w_150"))
                      , Seq(
                          Build(Var("p_3"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("w_150"), Var("k_68")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("geq_0_0"), [], [])
                            , Build(Var("x_3"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , CallT(SVar("j_127"), [], [])
          , Id
          )
        )
      , SDefT(
          "verbose_level_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              Match(Anno(Op("Vomit", []), Wld))
            , Build(Anno(Int("10"), Op("Nil", [])))
            )
          , Id
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("Debug", []), Wld))
              , Build(Anno(Int("4"), Op("Nil", [])))
              )
            , Id
            , GuardedLChoice(
                Seq(
                  Match(Anno(Op("Notice", []), Wld))
                , Build(Anno(Int("2"), Op("Nil", [])))
                )
              , Id
              , GuardedLChoice(
                  Seq(
                    Match(Anno(Op("Info", []), Wld))
                  , Build(Anno(Int("1"), Op("Nil", [])))
                  )
                , Id
                , GuardedLChoice(
                    Seq(
                      Match(Anno(Op("Warning", []), Wld))
                    , Build(Anno(Int("1"), Op("Nil", [])))
                    )
                  , Id
                  , GuardedLChoice(
                      Seq(
                        Match(Anno(Op("Error", []), Wld))
                      , Build(Anno(Int("0"), Op("Nil", [])))
                      )
                    , Id
                    , GuardedLChoice(
                        Seq(
                          Match(Anno(Op("Critical", []), Wld))
                        , Build(Anno(Int("-2"), Op("Nil", [])))
                        )
                      , Id
                      , GuardedLChoice(
                          Seq(
                            Match(Anno(Op("Alert", []), Wld))
                          , Build(Anno(Int("-5"), Op("Nil", [])))
                          )
                        , Id
                        , Seq(
                            Match(Anno(Op("Emergency", []), Wld))
                          , Build(Anno(Int("-10"), Op("Nil", [])))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "if_log_severity_1_1"
        , [ VarDec(
              "m_128"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , [VarDec("o_71", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["b_154", "z_3", "c_154", "y_3"]
          , Seq(
              Match(Var("z_3"))
            , Seq(
                Match(Var("y_3"))
              , Seq(
                  Build(Var("o_71"))
                , Seq(
                    CallT(SVar("verbose_level_0_0"), [], [])
                  , Seq(
                      Match(Var("c_154"))
                    , Seq(
                        Build(Var("y_3"))
                      , Seq(
                          Build(Var("c_154"))
                        , Seq(
                            Match(Var("b_154"))
                          , Seq(
                              Build(Var("z_3"))
                            , CallT(
                                SVar("if_verbose_1_1")
                              , [CallT(SVar("m_128"), [], [])]
                              , [Var("b_154")]
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "q_17"
        , []
        , []
        , Scope(
            ["x_153", "a_4"]
          , Seq(
              GuardedLChoice(CallT(SVar("is_list_0_0"), [], []), Fail, Id)
            , Seq(
                Match(Var("a_4"))
              , Seq(
                  Match(Var("x_153"))
                , Seq(
                    Build(Var("a_4"))
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [Var("x_153"), Anno(Op("Nil", []), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "r_17"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("is_string_0_0"), [], [])
          , Id
          , CallT(SVar("write_to_string_0_0"), [], [])
          )
        )
      , SDefT(
          "log_0_2"
        , []
        , [ VarDec("m_71", ConstType(Sort("Severity", [])))
          , VarDec("n_71", ConstType(Sort("ATerm", [])))
          ]
        , Let(
            [ SDefT(
                "p_17"
              , []
              , []
              , Scope(
                  ["e_4", "y_153", "z_153", "a_154", "d_4", "c_4", "b_4"]
                , Seq(
                    Match(Var("e_4"))
                  , Seq(
                      Build(Var("n_71"))
                    , Seq(
                        CallT(
                          SVar("try_1_0")
                        , [CallT(SVar("q_17"), [], [])]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("map_1_0")
                          , [CallT(SVar("r_17"), [], [])]
                          , []
                          )
                        , Seq(
                            Match(Var("b_4"))
                          , Seq(
                              CallT(SVar("log_src_0_0"), [], [])
                            , Seq(
                                Match(Var("y_153"))
                              , Seq(
                                  Build(Var("b_4"))
                                , Seq(
                                    Match(Var("c_4"))
                                  , Seq(
                                      Build(Var("m_71"))
                                    , Seq(
                                        CallT(SVar("severity_string_0_0"), [], [])
                                      , Seq(
                                          Match(Var("z_153"))
                                        , Seq(
                                            Build(Var("c_4"))
                                          , Seq(
                                              Match(Var("d_4"))
                                            , Seq(
                                                Match(Var("a_154"))
                                              , Seq(
                                                  Build(Var("d_4"))
                                                , Seq(
                                                    Build(
                                                      Anno(
                                                        Op(
                                                          "Cons"
                                                        , [ Anno(Str("[ "), Op("Nil", []))
                                                          , Anno(
                                                              Op(
                                                                "Cons"
                                                              , [ Var("y_153")
                                                                , Anno(
                                                                    Op(
                                                                      "Cons"
                                                                    , [ Anno(Str(" | "), Op("Nil", []))
                                                                      , Anno(
                                                                          Op(
                                                                            "Cons"
                                                                          , [ Var("z_153")
                                                                            , Anno(
                                                                                Op(
                                                                                  "Cons"
                                                                                , [Anno(Str(" ] "), Op("Nil", [])), Var("a_154")]
                                                                                )
                                                                              , Op("Nil", [])
                                                                              )
                                                                            ]
                                                                          )
                                                                        , Op("Nil", [])
                                                                        )
                                                                      ]
                                                                    )
                                                                  , Op("Nil", [])
                                                                  )
                                                                ]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          ]
                                                        )
                                                      , Op("Nil", [])
                                                      )
                                                    )
                                                  , Seq(
                                                      CallT(SVar("concat_strings_0_0"), [], [])
                                                    , Seq(
                                                        CallT(SVar("log_puts_0_0"), [], [])
                                                      , Seq(
                                                          Build(Anno(Str("\n"), Op("Nil", [])))
                                                        , Seq(
                                                            CallT(SVar("log_puts_0_0"), [], [])
                                                          , Build(Var("e_4"))
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(
              SVar("if_log_severity_1_1")
            , [CallT(SVar("p_17"), [], [])]
            , [Var("m_71")]
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["q_90"]
          , Seq(
              Match(Var("q_90"))
            , PrimT("SSL_concat_strings", [], [Var("q_90")])
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["o_90", "p_90"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("o_90"), Var("p_90")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("o_90"), Var("p_90")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["n_90"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("n_90"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("n_90"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "obsolete_1_0"
        , [ VarDec(
              "a_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_3", "r_3", "i_4", "s_3", "h_4", "t_3", "g_4", "f_4"]
          , Seq(
              Match(Var("f_4"))
            , Seq(
                Build(Anno(Op("Warning", []), Op("Nil", [])))
              , Seq(
                  Match(Var("q_3"))
                , Seq(
                    Build(Var("f_4"))
                  , Seq(
                      Match(Var("i_4"))
                    , Seq(
                        Match(Var("h_4"))
                      , Seq(
                          Match(Var("g_4"))
                        , Seq(
                            Build(Anno(Op("", []), Op("Nil", [])))
                          , Seq(
                              CallT(SVar("a_104"), [], [])
                            , Seq(
                                Match(Var("t_3"))
                              , Seq(
                                  Build(Var("g_4"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op(
                                          ""
                                        , [Anno(Str("program uses obsolete strategy "), Op("Nil", [])), Var("t_3")]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  , Seq(
                                      CallT(SVar("conc_strings_0_0"), [], [])
                                    , Seq(
                                        Match(Var("s_3"))
                                      , Seq(
                                          Build(Var("h_4"))
                                        , Seq(
                                            Build(Var("s_3"))
                                          , Seq(
                                              Match(Var("r_3"))
                                            , Seq(
                                                Build(Var("i_4"))
                                              , CallT(
                                                  SVar("log_0_2")
                                                , []
                                                , [Var("q_3"), Var("r_3")]
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "s_17"
        , []
        , []
        , Build(Anno(Str("basename; use remove-extension"), Op("Nil", [])))
        )
      , SDefT(
          "basename_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("obsolete_1_0")
            , [CallT(SVar("s_17"), [], [])]
            , []
            )
          , CallT(
              SVar("basename_1_0")
            , [CallT(SVar("_id"), [], [])]
            , []
            )
          )
        )
      , SDefT(
          "t_17"
        , []
        , []
        , Build(Anno(Str("basename-test 1"), Op("Nil", [])))
        )
      , SDefT(
          "u_17"
        , []
        , []
        , Build(Anno(Str("./number.r"), Op("Nil", [])))
        )
      , SDefT(
          "v_17"
        , []
        , []
        , Build(Anno(Str("./number"), Op("Nil", [])))
        )
      , SDefT(
          "w_17"
        , []
        , []
        , Build(Anno(Str("basename-test 2"), Op("Nil", [])))
        )
      , SDefT(
          "x_17"
        , []
        , []
        , Build(Anno(Str("./number"), Op("Nil", [])))
        )
      , SDefT(
          "y_17"
        , []
        , []
        , Build(Anno(Str("./number"), Op("Nil", [])))
        )
      , SDefT(
          "z_17"
        , []
        , []
        , Build(Anno(Str("basename-test 3"), Op("Nil", [])))
        )
      , SDefT(
          "a_18"
        , []
        , []
        , Build(Anno(Str("/usr/bin/number.str"), Op("Nil", [])))
        )
      , SDefT(
          "b_18"
        , []
        , []
        , Build(Anno(Str("/usr/bin/number"), Op("Nil", [])))
        )
      , SDefT(
          "basename_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("t_17"), [], [])
              , CallT(SVar("basename_0_0"), [], [])
              , CallT(SVar("u_17"), [], [])
              , CallT(SVar("v_17"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("w_17"), [], [])
                , CallT(SVar("basename_0_0"), [], [])
                , CallT(SVar("x_17"), [], [])
                , CallT(SVar("y_17"), [], [])
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("z_17"), [], [])
                , CallT(SVar("basename_0_0"), [], [])
                , CallT(SVar("a_18"), [], [])
                , CallT(SVar("b_18"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "access_0_0"
        , []
        , []
        , Scope(
            ["o_15", "p_15"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("o_15"), Var("p_15")])
                , Wld
                )
              )
            , PrimT("SSL_access", [], [Var("o_15"), Var("p_15")])
            )
          )
        )
      , SDefT(
          "can_write_file_0_0"
        , []
        , []
        , Scope(
            ["o_2", "j_4"]
          , Seq(
              Match(Var("j_4"))
            , Seq(
                Match(Var("o_2"))
              , Seq(
                  Build(Var("j_4"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Var("o_2")
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Op("W_OK", []), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("access_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "can_create_file_0_0"
        , []
        , []
        , Scope(
            ["k_4"]
          , Seq(
              Match(Var("k_4"))
            , Seq(
                CallT(SVar("dirname_0_0"), [], [])
              , Seq(
                  CallT(SVar("can_write_file_0_0"), [], [])
                , Build(Var("k_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "g_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "i_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "c_18"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("sunit_create_input_1_0")
                    , [CallT(SVar("i_125"), [], [])]
                    , []
                    )
                  , GuardedLChoice(CallT(SVar("h_125"), [], []), Fail, Id)
                  )
                , Id
                , Seq(
                    Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                  , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                  )
                )
              )
            ]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("g_125"), [], [])
              , CallT(SVar("c_18"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "d_18"
        , []
        , []
        , Build(Anno(Op("", []), Op("Nil", [])))
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "d_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "e_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "f_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("d_125"), [], [])
            , CallT(SVar("e_125"), [], [])
            , CallT(SVar("f_125"), [], [])
            , CallT(SVar("d_18"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "e_18"
        , []
        , []
        , Build(Anno(Str("create? -- 1"), Op("Nil", [])))
        )
      , SDefT(
          "f_18"
        , []
        , []
        , Build(Anno(Str("/root/bla.txt"), Op("Nil", [])))
        )
      , SDefT(
          "g_18"
        , []
        , []
        , Build(Anno(Str("create? -- 2"), Op("Nil", [])))
        )
      , SDefT(
          "h_18"
        , []
        , []
        , Build(Anno(Str("/tmp/bla.txt"), Op("Nil", [])))
        )
      , SDefT(
          "i_18"
        , []
        , []
        , Build(Anno(Str("/tmp/bla.txt"), Op("Nil", [])))
        )
      , SDefT(
          "file_props_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_and_fail_3_0")
            , [ CallT(SVar("e_18"), [], [])
              , CallT(SVar("can_create_file_0_0"), [], [])
              , CallT(SVar("f_18"), [], [])
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("g_18"), [], [])
              , CallT(SVar("can_create_file_0_0"), [], [])
              , CallT(SVar("h_18"), [], [])
              , CallT(SVar("i_18"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "split_init_last_0_0"
        , []
        , []
        , Scope(
            ["k_79", "t_157", "l_4"]
          , Seq(
              Let(
                [ SDefT(
                    "j_18"
                  , []
                  , []
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Var("k_79"), Anno(Op("Nil", []), Wld)]
                          )
                        , Wld
                        )
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , CallT(
                  SVar("at_last_1_0")
                , [CallT(SVar("j_18"), [], [])]
                , []
                )
              )
            , Seq(
                Match(Var("l_4"))
              , Seq(
                  Match(Var("t_157"))
                , Seq(
                    Build(Var("l_4"))
                  , Build(
                      Anno(
                        Op("", [Var("t_157"), Var("k_79")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "repeat_2_0"
        , [ VarDec(
              "u_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "v_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "w_114"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(SVar("u_114"), [], [])
                  , CallT(SVar("w_114"), [], [])
                  )
                , Id
                , CallT(SVar("v_114"), [], [])
                )
              )
            ]
          , CallT(SVar("w_114"), [], [])
          )
        )
      , SDefT(
          "repeat_1_0"
        , [ VarDec(
              "x_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("repeat_2_0")
          , [ CallT(SVar("x_114"), [], [])
            , CallT(SVar("_id"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["n_49", "o_49"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("o_49"), Var("n_49")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("o_49"))
            )
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["g_80"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("g_80")]), Wld)
              )
            , Build(Var("g_80"))
            )
          )
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "c_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_4", "w_4", "x_4", "z_4", "a_5"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("w_4"), Var("x_4")])
                , Var("y_4")
                )
              )
            , Seq(
                Build(Var("w_4"))
              , Seq(
                  CallT(SVar("c_103"), [], [])
                , Seq(
                    Match(Var("z_4"))
                  , Seq(
                      Build(Var("x_4"))
                    , Seq(
                        CallT(SVar("d_103"), [], [])
                      , Seq(
                          Match(Var("a_5"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("z_4"), Var("a_5")])
                            , Var("y_4")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "x_131"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "y_131"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("_id"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  , CallT(SVar("x_131"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("y_131"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("y_131"), [], [])
          )
        )
      , SDefT(
          "init_0_0"
        , []
        , []
        , CallT(
            SVar("at_last_1_0")
          , [CallT(SVar("Tl_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "j_111"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("j_111"), [], []), Id, Id)
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["t_90"]
          , Seq(
              Match(Var("t_90"))
            , PrimT("SSL_implode_string", [], [Var("t_90")])
            )
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["u_90"]
          , Seq(
              Match(Var("u_90"))
            , PrimT("SSL_explode_string", [], [Var("u_90")])
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "c_140"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("c_140"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "k_18"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [CallT(SVar("l_18"), [], [])]
            , []
            )
          , GuardedLChoice(
              Match(Anno(Op("Nil", []), Wld))
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("47"), Op("Nil", []))
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Seq(
                CallT(SVar("init_0_0"), [], [])
              , Seq(
                  CallT(
                    SVar("repeat_1_0")
                  , [CallT(SVar("m_18"), [], [])]
                  , []
                  )
                , GuardedLChoice(
                    Match(Anno(Op("Nil", []), Wld))
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Int("46"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(
                        SVar("repeat_1_0")
                      , [CallT(SVar("o_18"), [], [])]
                      , []
                      )
                    , GuardedLChoice(
                        Match(Anno(Op("Nil", []), Wld))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("47"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Id
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "l_18"
        , []
        , []
        , Scope(
            ["h_2"]
          , Seq(
              CallT(SVar("split_init_last_0_0"), [], [])
            , Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [Var("h_2"), Anno(Int("47"), Wld)]
                    )
                  , Wld
                  )
                )
              , Build(Var("h_2"))
              )
            )
          )
        )
      , SDefT(
          "m_18"
        , []
        , []
        , Seq(
            CallT(SVar("split_init_last_0_0"), [], [])
          , Seq(
              CallT(
                SVar("_2_0")
              , [ CallT(SVar("_id"), [], [])
                , CallT(SVar("n_18"), [], [])
                ]
              , []
              )
            , CallT(SVar("Fst_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "n_18"
        , []
        , []
        , GuardedLChoice(Match(Anno(Int("47"), Wld)), Fail, Id)
        )
      , SDefT(
          "o_18"
        , []
        , []
        , Scope(
            ["i_2"]
          , Seq(
              CallT(SVar("split_init_last_0_0"), [], [])
            , Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [Var("i_2"), Anno(Int("47"), Wld)]
                    )
                  , Wld
                  )
                )
              , Build(Var("i_2"))
              )
            )
          )
        )
      , SDefT(
          "dirname_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("k_18"), [], [])]
          , []
          )
        )
      , SDefT(
          "p_18"
        , []
        , []
        , Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "e_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("e_124"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [CallT(SVar("p_18"), [], [])]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["n_4", "u_3", "m_4"]
          , Seq(
              Match(Var("n_4"))
            , Seq(
                Match(Var("m_4"))
              , Seq(
                  Match(Var("u_3"))
                , Seq(
                    Build(Var("m_4"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [Var("u_3"), Anno(Op("Nil", []), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("n_4"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "x_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["o_4"]
          , Seq(
              Match(Var("o_4"))
            , Seq(
                CallT(SVar("x_103"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("o_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "q_18"
        , []
        , []
        , Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "d_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("d_124"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [CallT(SVar("q_18"), [], [])]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("_id"), [], [])
            , CallT(SVar("inc_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["m_20", "n_20"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("m_20"), Var("n_20")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("m_20"), Var("n_20")])
              , Id
              , PrimT("SSL_addr", [], [Var("m_20"), Var("n_20")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["v_6", "p_4"]
          , Seq(
              Match(Var("p_4"))
            , Seq(
                Match(Var("v_6"))
              , Seq(
                  Build(Var("p_4"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("v_6"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("inc_0_0"), [], [])
            , CallT(SVar("_id"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "f_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_4"]
          , Seq(
              Match(Var("q_4"))
            , Seq(
                CallT(SVar("f_124"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("q_4"))
                  , GuardedLChoice(
                      Scope(
                        ["r_4"]
                      , Seq(
                          Match(Var("r_4"))
                        , Seq(
                            CallT(SVar("g_124"), [], [])
                          , Seq(
                              Build(Var("r_4"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "s_18"
        , []
        , []
        , Build(Anno(Str("  result not equal : "), Op("Nil", [])))
        )
      , SDefT(
          "t_18"
        , []
        , []
        , Build(Anno(Str("  expected         : "), Op("Nil", [])))
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "s_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "t_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "v_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_56", "z_56"]
          , Let(
              [ SDefT(
                  "r_18"
                , []
                , []
                , Seq(
                    GuardedLChoice(
                      Seq(
                        CallT(
                          SVar("sunit_create_input_1_0")
                        , [CallT(SVar("u_124"), [], [])]
                        , []
                        )
                      , CallT(SVar("t_124"), [], [])
                      )
                    , Id
                    , Seq(
                        Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                      , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                      )
                    )
                  , Seq(
                      Match(Var("y_56"))
                    , Seq(
                        CallT(
                          SVar("sunit_create_output_1_0")
                        , [CallT(SVar("v_124"), [], [])]
                        , []
                        )
                      , Seq(
                          Match(Var("z_56"))
                        , GuardedLChoice(
                            Seq(Build(Var("z_56")), Match(Var("y_56")))
                          , Id
                          , Seq(
                              Build(Var("y_56"))
                            , Seq(
                                CallT(
                                  SVar("debug_1_0")
                                , [CallT(SVar("s_18"), [], [])]
                                , []
                                )
                              , Seq(
                                  Build(Var("z_56"))
                                , Seq(
                                    CallT(
                                      SVar("debug_1_0")
                                    , [CallT(SVar("t_18"), [], [])]
                                    , []
                                    )
                                  , Fail
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , CallT(
                SVar("do_test_2_0")
              , [ CallT(SVar("s_124"), [], [])
                , CallT(SVar("r_18"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "u_18"
        , []
        , []
        , Build(Anno(Str("dirname -- 1"), Op("Nil", [])))
        )
      , SDefT(
          "v_18"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "w_18"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "x_18"
        , []
        , []
        , Build(Anno(Str("dirname -- 2"), Op("Nil", [])))
        )
      , SDefT(
          "y_18"
        , []
        , []
        , Build(Anno(Str("bla"), Op("Nil", [])))
        )
      , SDefT(
          "z_18"
        , []
        , []
        , Build(Anno(Str("."), Op("Nil", [])))
        )
      , SDefT(
          "a_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 3"), Op("Nil", [])))
        )
      , SDefT(
          "b_19"
        , []
        , []
        , Build(Anno(Str("bla/"), Op("Nil", [])))
        )
      , SDefT(
          "c_19"
        , []
        , []
        , Build(Anno(Str("."), Op("Nil", [])))
        )
      , SDefT(
          "d_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 4"), Op("Nil", [])))
        )
      , SDefT(
          "e_19"
        , []
        , []
        , Build(Anno(Str("/bla"), Op("Nil", [])))
        )
      , SDefT(
          "f_19"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "g_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 5"), Op("Nil", [])))
        )
      , SDefT(
          "h_19"
        , []
        , []
        , Build(Anno(Str("/bla/"), Op("Nil", [])))
        )
      , SDefT(
          "i_19"
        , []
        , []
        , Build(Anno(Str("/"), Op("Nil", [])))
        )
      , SDefT(
          "j_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 6"), Op("Nil", [])))
        )
      , SDefT(
          "k_19"
        , []
        , []
        , Build(Anno(Str("foo/bla"), Op("Nil", [])))
        )
      , SDefT(
          "l_19"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "m_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 7"), Op("Nil", [])))
        )
      , SDefT(
          "n_19"
        , []
        , []
        , Build(Anno(Str("foo/bla/"), Op("Nil", [])))
        )
      , SDefT(
          "o_19"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "p_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 8"), Op("Nil", [])))
        )
      , SDefT(
          "q_19"
        , []
        , []
        , Build(Anno(Str("/foo/bla"), Op("Nil", [])))
        )
      , SDefT(
          "r_19"
        , []
        , []
        , Build(Anno(Str("/foo"), Op("Nil", [])))
        )
      , SDefT(
          "s_19"
        , []
        , []
        , Build(Anno(Str("dirname -- 9"), Op("Nil", [])))
        )
      , SDefT(
          "t_19"
        , []
        , []
        , Build(Anno(Str("/foo/bla/"), Op("Nil", [])))
        )
      , SDefT(
          "u_19"
        , []
        , []
        , Build(Anno(Str("/foo"), Op("Nil", [])))
        )
      , SDefT(
          "dirname_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("u_18"), [], [])
              , CallT(SVar("dirname_0_0"), [], [])
              , CallT(SVar("v_18"), [], [])
              , CallT(SVar("w_18"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("x_18"), [], [])
                , CallT(SVar("dirname_0_0"), [], [])
                , CallT(SVar("y_18"), [], [])
                , CallT(SVar("z_18"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("a_19"), [], [])
                  , CallT(SVar("dirname_0_0"), [], [])
                  , CallT(SVar("b_19"), [], [])
                  , CallT(SVar("c_19"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("d_19"), [], [])
                    , CallT(SVar("dirname_0_0"), [], [])
                    , CallT(SVar("e_19"), [], [])
                    , CallT(SVar("f_19"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("g_19"), [], [])
                      , CallT(SVar("dirname_0_0"), [], [])
                      , CallT(SVar("h_19"), [], [])
                      , CallT(SVar("i_19"), [], [])
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("j_19"), [], [])
                        , CallT(SVar("dirname_0_0"), [], [])
                        , CallT(SVar("k_19"), [], [])
                        , CallT(SVar("l_19"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ CallT(SVar("m_19"), [], [])
                          , CallT(SVar("dirname_0_0"), [], [])
                          , CallT(SVar("n_19"), [], [])
                          , CallT(SVar("o_19"), [], [])
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("p_19"), [], [])
                            , CallT(SVar("dirname_0_0"), [], [])
                            , CallT(SVar("q_19"), [], [])
                            , CallT(SVar("r_19"), [], [])
                            ]
                          , []
                          )
                        , CallT(
                            SVar("apply_test_4_0")
                          , [ CallT(SVar("s_19"), [], [])
                            , CallT(SVar("dirname_0_0"), [], [])
                            , CallT(SVar("t_19"), [], [])
                            , CallT(SVar("u_19"), [], [])
                            ]
                          , []
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "v_19"
        , []
        , []
        , Match(Anno(Int("0"), Wld))
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("_id"), [], [])
            , CallT(SVar("v_19"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "r_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "s_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_5", "b_5", "c_5", "e_5", "f_5"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("b_5"), Var("c_5")])
                , Var("d_5")
                )
              )
            , Seq(
                Build(Var("b_5"))
              , Seq(
                  CallT(SVar("r_95"), [], [])
                , Seq(
                    Match(Var("e_5"))
                  , Seq(
                      Build(Var("c_5"))
                    , Seq(
                        CallT(SVar("s_95"), [], [])
                      , Seq(
                          Match(Var("f_5"))
                        , Build(
                            Anno(
                              Op("", [Var("e_5"), Var("f_5")])
                            , Var("d_5")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "w_19"
        , []
        , []
        , CallT(
            SVar("debug_1_0")
          , [CallT(SVar("y_19"), [], [])]
          , []
          )
        )
      , SDefT(
          "x_19"
        , []
        , []
        , CallT(
            SVar("debug_1_0")
          , [CallT(SVar("z_19"), [], [])]
          , []
          )
        )
      , SDefT(
          "y_19"
        , []
        , []
        , Build(Anno(Str("successes: "), Op("Nil", [])))
        )
      , SDefT(
          "z_19"
        , []
        , []
        , Build(Anno(Str("failures: "), Op("Nil", [])))
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("w_19"), [], [])
            , CallT(SVar("x_19"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["k_16", "l_16", "s_4"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("k_16"), Var("l_16")])
                , Wld
                )
              )
            , Seq(
                Match(Var("s_4"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("k_16"), Var("l_16")])
                , Build(Var("s_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "g_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_4", "v_3", "w_3", "u_4", "t_4"]
          , Seq(
              Match(Var("v_4"))
            , Seq(
                Match(Var("t_4"))
              , Seq(
                  CallT(SVar("g_104"), [], [])
                , Seq(
                    Match(Var("v_3"))
                  , Seq(
                      Build(Var("t_4"))
                    , Seq(
                        Match(Var("u_4"))
                      , Seq(
                          Match(Var("w_3"))
                        , Seq(
                            Build(Var("u_4"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Anno(Op("stderr", []), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Var("v_3")
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [Var("w_3"), Anno(Op("Nil", []), Op("Nil", []))]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("printnl_0_0"), [], [])
                              , Build(Var("v_4"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "a_20"
        , []
        , []
        , Build(Anno(Str("test suite: "), Op("Nil", [])))
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "q_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "r_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("q_124"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [CallT(SVar("a_20"), [], [])]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("r_124"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "b_20"
        , []
        , []
        , Build(Anno(Str("file-test"), Op("Nil", [])))
        )
      , SDefT(
          "c_20"
        , []
        , []
        , Seq(
            CallT(SVar("dirname_tests_0_0"), [], [])
          , Seq(
              CallT(SVar("file_props_tests_0_0"), [], [])
            , Seq(
                CallT(SVar("basename_tests_0_0"), [], [])
              , Seq(
                  CallT(SVar("base_filename_tests_0_0"), [], [])
                , Seq(
                    CallT(SVar("get_path_tests_0_0"), [], [])
                  , Seq(
                      CallT(SVar("get_filename_tests_0_0"), [], [])
                    , Seq(
                        CallT(SVar("getcwd_tests_0_0"), [], [])
                      , Seq(
                          CallT(SVar("abspath_tests_0_0"), [], [])
                        , Seq(
                            CallT(SVar("is_abspath_tests_0_0"), [], [])
                          , CallT(SVar("file_extension_tests_0_0"), [], [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ CallT(SVar("b_20"), [], [])
            , CallT(SVar("c_20"), [], [])
            ]
          , []
          )
        )
      ]
    )
  ]
)
