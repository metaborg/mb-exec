Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT(
          "split_2_0"
        , [ VarDec(
              "v_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_12", "z_12", "d_0", "a_0"]
          , Seq(
              Match(Var("a_0"))
            , Seq(
                CallT(SVar("v_116"), [], [])
              , Seq(
                  Match(Var("y_12"))
                , Seq(
                    Build(Var("a_0"))
                  , Seq(
                      Match(Var("d_0"))
                    , Seq(
                        CallT(SVar("w_116"), [], [])
                      , Seq(
                          Match(Var("z_12"))
                        , Seq(
                            Build(Var("d_0"))
                          , Build(
                              Anno(
                                Op("", [Var("y_12"), Var("z_12")])
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "t_4"
        , []
        , []
        , Build(Anno(Op("Nil", []), Op("Nil", [])))
        )
      , SDefT(
          "split_at_dot_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("split_2_0")
            , [ CallT(SVar("t_4"), [], [])
              , CallT(SVar("explode_string_0_0"), [], [])
              ]
            , []
            )
          , Seq(
              Let(
                [ SDefT(
                    "w_103"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["t_15", "u_15"]
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Var("t_15")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("46"), Wld), Var("u_15")]
                                    )
                                  , Wld
                                  )
                                ]
                              )
                            , Wld
                            )
                          )
                        , Build(
                            Anno(
                              Op("", [Var("t_15"), Var("u_15")])
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Scope(
                          ["v_15", "w_15", "x_15", "i_2", "h_0", "j_2", "f_0"]
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [ Var("v_15")
                                  , Anno(
                                      Op("Cons", [Var("w_15"), Var("x_15")])
                                    , Wld
                                    )
                                  ]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("h_0"))
                            , Seq(
                                Match(Var("f_0"))
                              , Seq(
                                  Build(Var("v_15"))
                                , Seq(
                                    Let(
                                      [ SDefT(
                                          "u_4"
                                        , []
                                        , []
                                        , Build(
                                            Anno(
                                              Op(
                                                "Cons"
                                              , [Var("w_15"), Anno(Op("Nil", []), Op("Nil", []))]
                                              )
                                            , Op("Nil", [])
                                            )
                                          )
                                        )
                                      ]
                                    , CallT(
                                        SVar("at_end_1_0")
                                      , [CallT(SVar("u_4"), [], [])]
                                      , []
                                      )
                                    )
                                  , Seq(
                                      Match(Var("j_2"))
                                    , Seq(
                                        Build(Var("f_0"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op("", [Var("j_2"), Var("x_15")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , Seq(
                                            CallT(SVar("w_103"), [], [])
                                          , Seq(
                                              Match(Var("i_2"))
                                            , Seq(Build(Var("h_0")), Build(Var("i_2")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , Id
                      , CallT(
                          SVar("_2_0")
                        , [ CallT(SVar("_id"), [], [])
                          , CallT(SVar("Nil_0_0"), [], [])
                          ]
                        , []
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("w_103"), [], [])
              )
            , CallT(
                SVar("_2_0")
              , [ CallT(SVar("implode_string_0_0"), [], [])
                , CallT(SVar("implode_string_0_0"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "v_4"
        , []
        , []
        , Build(Anno(Str("split-at-dot-test"), Op("Nil", [])))
        )
      , SDefT(
          "w_4"
        , []
        , []
        , Build(Anno(Str("3.141592"), Op("Nil", [])))
        )
      , SDefT(
          "x_4"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("3"), Op("Nil", []))
                , Anno(Str("141592"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "split_at_dot_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("v_4"), [], [])
            , CallT(SVar("split_at_dot_0_0"), [], [])
            , CallT(SVar("w_4"), [], [])
            , CallT(SVar("x_4"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "split_after_0_0"
        , []
        , []
        , Scope(
            ["h_16", "i_16", "j_16", "k_16"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("i_16"), Var("h_16")])
                , Wld
                )
              )
            , Seq(
                Build(Var("h_16"))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , Seq(
                    Match(Var("j_16"))
                  , Seq(
                      Build(Var("i_16"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("k_16"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Op("Nil", []), Op("Nil", [])), Var("k_16")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              Let(
                                [ SDefT(
                                    "y_103"
                                  , []
                                  , []
                                  , GuardedLChoice(
                                      CallT(
                                        SVar("_2_0")
                                      , [ CallT(SVar("_id"), [], [])
                                        , CallT(SVar("Nil_0_0"), [], [])
                                        ]
                                      , []
                                      )
                                    , Id
                                    , GuardedLChoice(
                                        Scope(
                                          ["l_16", "m_16", "m_2", "n_2", "m_0", "k_0"]
                                        , Seq(
                                            Match(
                                              Anno(
                                                Op("", [Var("l_16"), Var("m_16")])
                                              , Wld
                                              )
                                            )
                                          , Seq(
                                              Match(Var("k_0"))
                                            , Seq(
                                                Build(
                                                  Anno(
                                                    Op("", [Var("l_16"), Var("j_16")])
                                                  , Op("Nil", [])
                                                  )
                                                )
                                              , Seq(
                                                  CallT(SVar("conc_0_0"), [], [])
                                                , Seq(
                                                    Match(Var("m_2"))
                                                  , Seq(
                                                      Build(Var("k_0"))
                                                    , Seq(
                                                        Match(Var("m_0"))
                                                      , Seq(
                                                          Build(
                                                            Anno(
                                                              Op("", [Var("m_16"), Var("j_16")])
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        , Seq(
                                                            CallT(SVar("left_match_0_0"), [], [])
                                                          , Seq(
                                                              Match(Var("n_2"))
                                                            , Seq(
                                                                Build(Var("m_0"))
                                                              , Build(
                                                                  Anno(
                                                                    Op("", [Var("m_2"), Var("n_2")])
                                                                  , Op("Nil", [])
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      , Id
                                      , Scope(
                                          ["n_16", "o_16", "p_16", "o_2", "o_0", "p_2", "n_0"]
                                        , Seq(
                                            Match(
                                              Anno(
                                                Op(
                                                  ""
                                                , [ Var("n_16")
                                                  , Anno(
                                                      Op("Cons", [Var("o_16"), Var("p_16")])
                                                    , Wld
                                                    )
                                                  ]
                                                )
                                              , Wld
                                              )
                                            )
                                          , Seq(
                                              Match(Var("o_0"))
                                            , Seq(
                                                Match(Var("n_0"))
                                              , Seq(
                                                  Build(Var("n_16"))
                                                , Seq(
                                                    Let(
                                                      [ SDefT(
                                                          "y_4"
                                                        , []
                                                        , []
                                                        , Build(
                                                            Anno(
                                                              Op(
                                                                "Cons"
                                                              , [Var("o_16"), Anno(Op("Nil", []), Op("Nil", []))]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        )
                                                      ]
                                                    , CallT(
                                                        SVar("at_end_1_0")
                                                      , [CallT(SVar("y_4"), [], [])]
                                                      , []
                                                      )
                                                    )
                                                  , Seq(
                                                      Match(Var("p_2"))
                                                    , Seq(
                                                        Build(Var("n_0"))
                                                      , Seq(
                                                          Build(
                                                            Anno(
                                                              Op("", [Var("p_2"), Var("p_16")])
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        , Seq(
                                                            CallT(SVar("y_103"), [], [])
                                                          , Seq(
                                                              Match(Var("o_2"))
                                                            , Seq(Build(Var("o_0")), Build(Var("o_2")))
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                ]
                              , CallT(SVar("y_103"), [], [])
                              )
                            , CallT(
                                SVar("_2_0")
                              , [ CallT(SVar("implode_string_0_0"), [], [])
                                , CallT(SVar("implode_string_0_0"), [], [])
                                ]
                              , []
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "z_4"
        , []
        , []
        , Build(Anno(Str("split-after-test"), Op("Nil", [])))
        )
      , SDefT(
          "d_5"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("barfoofnord"), Op("Nil", []))
                , Anno(Str("foo"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "e_5"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("barfoo"), Op("Nil", []))
                , Anno(Str("fnord"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "split_after_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("z_4"), [], [])
            , CallT(SVar("split_after_0_0"), [], [])
            , CallT(SVar("d_5"), [], [])
            , CallT(SVar("e_5"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "split_before_0_0"
        , []
        , []
        , Scope(
            ["y_15", "z_15", "a_16", "b_16"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_15"), Var("y_15")])
                , Wld
                )
              )
            , Seq(
                Build(Var("y_15"))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , Seq(
                    Match(Var("a_16"))
                  , Seq(
                      Build(Var("z_15"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("b_16"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Op("Nil", []), Op("Nil", [])), Var("b_16")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              Let(
                                [ SDefT(
                                    "x_103"
                                  , []
                                  , []
                                  , GuardedLChoice(
                                      Scope(
                                        ["c_16", "d_16", "p_0"]
                                      , Seq(
                                          Match(
                                            As(
                                              Var("c_16")
                                            , Anno(Op("", [Wld, Var("d_16")]), Wld)
                                            )
                                          )
                                        , Seq(
                                            Match(Var("p_0"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op("", [Var("d_16"), Var("a_16")])
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                CallT(SVar("left_match_0_0"), [], [])
                                              , Seq(Build(Var("p_0")), Build(Var("c_16")))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    , Id
                                    , Scope(
                                        ["e_16", "f_16", "g_16", "k_2", "r_0", "l_2", "q_0"]
                                      , Seq(
                                          Match(
                                            Anno(
                                              Op(
                                                ""
                                              , [ Var("e_16")
                                                , Anno(
                                                    Op("Cons", [Var("f_16"), Var("g_16")])
                                                  , Wld
                                                  )
                                                ]
                                              )
                                            , Wld
                                            )
                                          )
                                        , Seq(
                                            Match(Var("r_0"))
                                          , Seq(
                                              Match(Var("q_0"))
                                            , Seq(
                                                Build(Var("e_16"))
                                              , Seq(
                                                  Let(
                                                    [ SDefT(
                                                        "f_5"
                                                      , []
                                                      , []
                                                      , Build(
                                                          Anno(
                                                            Op(
                                                              "Cons"
                                                            , [Var("f_16"), Anno(Op("Nil", []), Op("Nil", []))]
                                                            )
                                                          , Op("Nil", [])
                                                          )
                                                        )
                                                      )
                                                    ]
                                                  , CallT(
                                                      SVar("at_end_1_0")
                                                    , [CallT(SVar("f_5"), [], [])]
                                                    , []
                                                    )
                                                  )
                                                , Seq(
                                                    Match(Var("l_2"))
                                                  , Seq(
                                                      Build(Var("q_0"))
                                                    , Seq(
                                                        Build(
                                                          Anno(
                                                            Op("", [Var("l_2"), Var("g_16")])
                                                          , Op("Nil", [])
                                                          )
                                                        )
                                                      , Seq(
                                                          CallT(SVar("x_103"), [], [])
                                                        , Seq(
                                                            Match(Var("k_2"))
                                                          , Seq(Build(Var("r_0")), Build(Var("k_2")))
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                ]
                              , CallT(SVar("x_103"), [], [])
                              )
                            , CallT(
                                SVar("_2_0")
                              , [ CallT(SVar("implode_string_0_0"), [], [])
                                , CallT(SVar("implode_string_0_0"), [], [])
                                ]
                              , []
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "g_5"
        , []
        , []
        , Build(Anno(Str("split-before-test"), Op("Nil", [])))
        )
      , SDefT(
          "h_5"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("barfoofnord"), Op("Nil", []))
                , Anno(Str("foo"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "i_5"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("bar"), Op("Nil", []))
                , Anno(Str("foofnord"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "split_before_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("g_5"), [], [])
            , CallT(SVar("split_before_0_0"), [], [])
            , CallT(SVar("h_5"), [], [])
            , CallT(SVar("i_5"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "split_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("split_before_test_0_0"), [], [])
          , Seq(
              CallT(SVar("split_after_test_0_0"), [], [])
            , CallT(SVar("split_at_dot_test_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "e_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "f_108"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("e_108"), [], [])
                    , CallT(SVar("_id"), [], [])
                    ]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("f_108"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("f_108"), [], [])
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "y_106"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "z_106"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("y_106"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("z_106"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("z_106"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "h_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_22", "m_5", "t_0"]
          , Seq(
              Let(
                [ SDefT(
                    "j_5"
                  , []
                  , []
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [ CallT(SVar("h_108"), [], [])
                        , CallT(SVar("_id"), [], [])
                        ]
                      , []
                      )
                    , Seq(
                        Let(
                          [SDefT("k_5", [], [], Match(Var("d_22")))]
                        , CallT(
                            SVar("Cons_2_0")
                          , [ CallT(SVar("_id"), [], [])
                            , CallT(SVar("k_5"), [], [])
                            ]
                          , []
                          )
                        )
                      , Build(Anno(Op("Nil", []), Op("Nil", [])))
                      )
                    )
                  )
                ]
              , CallT(
                  SVar("at_suffix_1_0")
                , [CallT(SVar("j_5"), [], [])]
                , []
                )
              )
            , Seq(
                Match(Var("t_0"))
              , Seq(
                  Match(Var("m_5"))
                , Seq(
                    Build(Var("t_0"))
                  , Build(
                      Anno(
                        Op("", [Var("m_5"), Var("d_22")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_1_0"
        , [ VarDec(
              "j_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            GuardedLChoice(
              CallT(
                SVar("split_fetch_1_0")
              , [CallT(SVar("j_108"), [], [])]
              , []
              )
            , Id
            , Scope(
                ["o_5", "u_0"]
              , Seq(
                  Match(Var("u_0"))
                , Seq(
                    Match(Var("o_5"))
                  , Seq(
                      Build(Var("u_0"))
                    , Build(
                        Anno(
                          Op(
                            ""
                          , [Var("o_5"), Anno(Op("Nil", []), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          , GuardedLChoice(
              Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Op("Nil", []), Wld)
                      , Anno(Op("Nil", []), Wld)
                      ]
                    )
                  , Wld
                  )
                )
              , Build(Anno(Op("Nil", []), Op("Nil", [])))
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["i_22"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          ""
                        , [ As(
                              Var("i_22")
                            , Anno(Op("Cons", [Wld, Wld]), Wld)
                            )
                          , Anno(Op("Nil", []), Wld)
                          ]
                        )
                      , Wld
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [Var("i_22"), Anno(Op("Nil", []), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["j_22", "p_5", "v_0"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , As(
                                Var("j_22")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("v_0"))
                      , Seq(
                          Build(Var("j_22"))
                        , Seq(
                            CallT(
                              SVar("list_tokenize_1_0")
                            , [CallT(SVar("j_108"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("p_5"))
                            , Seq(Build(Var("v_0")), Build(Var("p_5")))
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["k_22", "l_22", "q_5", "w_0"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ As(
                                Var("k_22")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            , As(
                                Var("l_22")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("w_0"))
                      , Seq(
                          Build(Var("l_22"))
                        , Seq(
                            CallT(
                              SVar("list_tokenize_1_0")
                            , [CallT(SVar("j_108"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("q_5"))
                            , Seq(
                                Build(Var("w_0"))
                              , Build(
                                  Anno(
                                    Op("Cons", [Var("k_22"), Var("q_5")])
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_1_0"
        , [ VarDec(
              "c_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(
                SVar("list_tokenize_1_0")
              , [CallT(SVar("c_104"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_0_1"
        , []
        , [VarDec("x_17", ConstType(Sort("ATerm", [])))]
        , Let(
            [ SDefT(
                "l_5"
              , []
              , []
              , Scope(
                  ["y_17"]
                , Let(
                    [SDefT("n_5", [], [], Match(Var("y_17")))]
                  , Seq(
                      Match(Var("y_17"))
                    , Seq(
                        Build(Var("x_17"))
                      , CallT(
                          SVar("fetch_1_0")
                        , [CallT(SVar("n_5"), [], [])]
                        , []
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(
              SVar("string_tokenize_1_0")
            , [CallT(SVar("l_5"), [], [])]
            , []
            )
          )
        )
      , SDefT(
          "string_tokenize_0_0"
        , []
        , []
        , Scope(
            ["z_17", "g_3"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_17"), Var("g_3")])
                , Wld
                )
              )
            , Seq(
                Build(Var("g_3"))
              , CallT(SVar("string_tokenize_0_1"), [], [Var("z_17")])
              )
            )
          )
        )
      , SDefT(
          "r_5"
        , []
        , []
        , Build(Anno(Str("tokenize-test1"), Op("Nil", [])))
        )
      , SDefT(
          "s_5"
        , []
        , []
        , Scope(
            ["c_0", "x_0"]
          , Seq(
              Match(Var("x_0"))
            , Seq(
                Match(Var("c_0"))
              , Seq(
                  Build(Var("x_0"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Anno(Op("Nil", []), Op("Nil", [])), Var("c_0")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("string_tokenize_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "t_5"
        , []
        , []
        , Build(Anno(Str("This should be one token"), Op("Nil", [])))
        )
      , SDefT(
          "u_5"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("This should be one token"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "v_5"
        , []
        , []
        , Build(Anno(Str("tokenize-test2"), Op("Nil", [])))
        )
      , SDefT(
          "w_5"
        , []
        , []
        , Scope(
            ["e_0", "a_1"]
          , Seq(
              Match(Var("a_1"))
            , Seq(
                Match(Var("e_0"))
              , Seq(
                  Build(Var("a_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("32"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Var("e_0")
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("string_tokenize_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "x_5"
        , []
        , []
        , Build(Anno(Str("   This should not   be one token  "), Op("Nil", [])))
        )
      , SDefT(
          "y_5"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("This"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("should"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("not"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("be"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("one"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Str("token"), Op("Nil", []))
                                              , Anno(Op("Nil", []), Op("Nil", []))
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "z_5"
        , []
        , []
        , Build(Anno(Str("tokenize-test3"), Op("Nil", [])))
        )
      , SDefT(
          "a_6"
        , []
        , []
        , Scope(
            ["g_0", "b_1"]
          , Seq(
              Match(Var("b_1"))
            , Seq(
                Match(Var("g_0"))
              , Seq(
                  Build(Var("b_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("32"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("46"), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Var("g_0")
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("string_tokenize_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "b_6"
        , []
        , []
        , Build(Anno(Str("   This should not   be one token  . "), Op("Nil", [])))
        )
      , SDefT(
          "c_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("This"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("should"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("not"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("be"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("one"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Str("token"), Op("Nil", []))
                                              , Anno(Op("Nil", []), Op("Nil", []))
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "d_6"
        , []
        , []
        , Build(Anno(Str("tokenize-test4"), Op("Nil", [])))
        )
      , SDefT(
          "e_6"
        , []
        , []
        , Scope(
            ["j_0", "c_1"]
          , Seq(
              Match(Var("c_1"))
            , Seq(
                Match(Var("j_0"))
              , Seq(
                  Build(Var("c_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("32"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("46"), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Var("j_0")
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("string_tokenize_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "f_6"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "g_6"
        , []
        , []
        , Build(Anno(Op("Nil", []), Op("Nil", [])))
        )
      , SDefT(
          "h_6"
        , []
        , []
        , Build(Anno(Str("tokenize-test5"), Op("Nil", [])))
        )
      , SDefT(
          "i_6"
        , []
        , []
        , Scope(
            ["l_0", "e_1"]
          , Seq(
              Match(Var("e_1"))
            , Seq(
                Match(Var("l_0"))
              , Seq(
                  Build(Var("e_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("32"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("46"), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          , Var("l_0")
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("string_tokenize_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "j_6"
        , []
        , []
        , Build(Anno(Str("    "), Op("Nil", [])))
        )
      , SDefT(
          "k_6"
        , []
        , []
        , Build(Anno(Op("Nil", []), Op("Nil", [])))
        )
      , SDefT(
          "string_tokenize_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("r_5"), [], [])
              , CallT(SVar("s_5"), [], [])
              , CallT(SVar("t_5"), [], [])
              , CallT(SVar("u_5"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("v_5"), [], [])
                , CallT(SVar("w_5"), [], [])
                , CallT(SVar("x_5"), [], [])
                , CallT(SVar("y_5"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("z_5"), [], [])
                  , CallT(SVar("a_6"), [], [])
                  , CallT(SVar("b_6"), [], [])
                  , CallT(SVar("c_6"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("d_6"), [], [])
                    , CallT(SVar("e_6"), [], [])
                    , CallT(SVar("f_6"), [], [])
                    , CallT(SVar("g_6"), [], [])
                    ]
                  , []
                  )
                , CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("h_6"), [], [])
                    , CallT(SVar("i_6"), [], [])
                    , CallT(SVar("j_6"), [], [])
                    , CallT(SVar("k_6"), [], [])
                    ]
                  , []
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "l_6"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("explode_string_0_0"), [], [])
            , CallT(SVar("explode_string_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "string_gt_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [CallT(SVar("l_6"), [], [])]
            , []
            )
          , Seq(
              CallT(SVar("strcasecmp_0_0"), [], [])
            , Match(Anno(Int("1"), Wld))
            )
          )
        )
      , SDefT(
          "string_sort_desc_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("map_1_0")
            , [CallT(SVar("explode_string_0_0"), [], [])]
            , []
            )
          , Seq(
              CallT(
                SVar("qsort_1_0")
              , [CallT(SVar("string_gt_0_0"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "case_char_1_0"
        , [ VarDec(
              "j_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("to_upper_0_0"), [], [])
              , CallT(SVar("to_upper_0_0"), [], [])
              ]
            , []
            )
          , CallT(SVar("j_103"), [], [])
          )
        )
      , SDefT(
          "strcasecmp_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "u_103"
              , []
              , []
              , GuardedLChoice(
                  Scope(
                    ["n_15", "o_15", "p_15", "q_15", "h_2", "h_1", "f_1"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(
                                Op("Cons", [Var("n_15"), Var("o_15")])
                              , Wld
                              )
                            , Anno(
                                Op("Cons", [Var("p_15"), Var("q_15")])
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("f_1"))
                      , Seq(
                          Build(
                            Anno(
                              Op("", [Var("n_15"), Var("p_15")])
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(
                              SVar("case_char_1_0")
                            , [CallT(SVar("eq_0_0"), [], [])]
                            , []
                            )
                          , Seq(
                              Build(Var("f_1"))
                            , Seq(
                                Match(Var("h_1"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op("", [Var("o_15"), Var("q_15")])
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("u_103"), [], [])
                                  , Seq(
                                      Match(Var("h_2"))
                                    , Seq(Build(Var("h_1")), Build(Var("h_2")))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , GuardedLChoice(
                    Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , Anno(Op("Nil", []), Wld)
                            ]
                          )
                        , Wld
                        )
                      )
                    , Build(Anno(Int("0"), Op("Nil", [])))
                    )
                  , Id
                  , GuardedLChoice(
                      Scope(
                        ["r_15", "s_15", "i_1"]
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("Cons", [Var("r_15"), Wld]), Wld)
                                , Anno(Op("Cons", [Var("s_15"), Wld]), Wld)
                                ]
                              )
                            , Wld
                            )
                          )
                        , Seq(
                            Match(Var("i_1"))
                          , Seq(
                              Build(
                                Anno(
                                  Op("", [Var("r_15"), Var("s_15")])
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(
                                  SVar("case_char_1_0")
                                , [CallT(SVar("lt_0_0"), [], [])]
                                , []
                                )
                              , Seq(
                                  Build(Var("i_1"))
                                , Build(Anno(Int("-1"), Op("Nil", [])))
                                )
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("Nil", []), Wld)
                                , Anno(Op("Cons", [Wld, Wld]), Wld)
                                ]
                              )
                            , Wld
                            )
                          )
                        , Build(Anno(Int("-1"), Op("Nil", [])))
                        )
                      , Id
                      , Build(Anno(Int("1"), Op("Nil", [])))
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("u_103"), [], [])
          )
        )
      , SDefT(
          "m_6"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("explode_string_0_0"), [], [])
            , CallT(SVar("explode_string_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "string_lt_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [CallT(SVar("m_6"), [], [])]
            , []
            )
          , Seq(
              CallT(SVar("strcasecmp_0_0"), [], [])
            , Match(Anno(Int("-1"), Wld))
            )
          )
        )
      , SDefT(
          "filter_1_0"
        , [ VarDec(
              "l_118"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("Nil_0_0"), [], [])
          , Id
          , GuardedLChoice(
              Let(
                [ SDefT(
                    "n_6"
                  , []
                  , []
                  , CallT(
                      SVar("filter_1_0")
                    , [CallT(SVar("l_118"), [], [])]
                    , []
                    )
                  )
                ]
              , CallT(
                  SVar("Cons_2_0")
                , [ CallT(SVar("l_118"), [], [])
                  , CallT(SVar("n_6"), [], [])
                  ]
                , []
                )
              )
            , Id
            , Scope(
                ["y_13"]
              , Seq(
                  Match(
                    Anno(Op("Cons", [Wld, Var("y_13")]), Wld)
                  )
                , Seq(
                    Build(Var("y_13"))
                  , CallT(
                      SVar("filter_1_0")
                    , [CallT(SVar("l_118"), [], [])]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "qsort_1_0"
        , [ VarDec(
              "i_163"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              [ "t_40"
              , "u_40"
              , "v_40"
              , "w_40"
              , "m_13"
              , "q_1"
              , "n_13"
              , "o_13"
              , "p_1"
              , "o_1"
              , "n_1"
              ]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("v_40"), Var("u_40")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("n_1"))
                , Seq(
                    Build(Var("u_40"))
                  , Seq(
                      Let(
                        [ SDefT(
                            "o_6"
                          , []
                          , []
                          , Scope(
                              ["k_1", "k_13", "j_1"]
                            , Seq(
                                Match(Var("k_1"))
                              , Seq(
                                  Match(Var("j_1"))
                                , Seq(
                                    Match(Var("k_13"))
                                  , Seq(
                                      Build(Var("j_1"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op("", [Var("k_13"), Var("v_40")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      , Seq(
                                          CallT(SVar("i_163"), [], [])
                                        , Build(Var("k_1"))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        ]
                      , CallT(
                          SVar("filter_1_0")
                        , [CallT(SVar("o_6"), [], [])]
                        , []
                        )
                      )
                    , Seq(
                        Match(Var("t_40"))
                      , Seq(
                          Build(Var("u_40"))
                        , Seq(
                            Let(
                              [ SDefT(
                                  "p_6"
                                , []
                                , []
                                , Scope(
                                    ["m_1", "l_13", "l_1"]
                                  , Seq(
                                      Match(Var("m_1"))
                                    , Seq(
                                        Match(Var("l_1"))
                                      , Seq(
                                          Match(Var("l_13"))
                                        , Seq(
                                            Build(Var("l_1"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op("", [Var("l_13"), Var("v_40")])
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                GuardedLChoice(CallT(SVar("i_163"), [], []), Fail, Id)
                                              , Build(Var("m_1"))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              ]
                            , CallT(
                                SVar("filter_1_0")
                              , [CallT(SVar("p_6"), [], [])]
                              , []
                              )
                            )
                          , Seq(
                              Match(Var("w_40"))
                            , Seq(
                                Build(Var("n_1"))
                              , Seq(
                                  Match(Var("q_1"))
                                , Seq(
                                    Match(Var("o_1"))
                                  , Seq(
                                      Build(Var("t_40"))
                                    , Seq(
                                        CallT(
                                          SVar("qsort_1_0")
                                        , [CallT(SVar("i_163"), [], [])]
                                        , []
                                        )
                                      , Seq(
                                          Match(Var("n_13"))
                                        , Seq(
                                            Build(Var("o_1"))
                                          , Seq(
                                              Match(Var("p_1"))
                                            , Seq(
                                                Build(Var("w_40"))
                                              , Seq(
                                                  CallT(
                                                    SVar("qsort_1_0")
                                                  , [CallT(SVar("i_163"), [], [])]
                                                  , []
                                                  )
                                                , Seq(
                                                    Match(Var("o_13"))
                                                  , Seq(
                                                      Build(Var("p_1"))
                                                    , Seq(
                                                        Build(
                                                          Anno(
                                                            Op(
                                                              "Cons"
                                                            , [ Var("n_13")
                                                              , Anno(
                                                                  Op(
                                                                    "Cons"
                                                                  , [ Anno(
                                                                        Op(
                                                                          "Cons"
                                                                        , [Var("v_40"), Anno(Op("Nil", []), Op("Nil", []))]
                                                                        )
                                                                      , Op("Nil", [])
                                                                      )
                                                                    , Anno(
                                                                        Op(
                                                                          "Cons"
                                                                        , [Var("o_13"), Anno(Op("Nil", []), Op("Nil", []))]
                                                                        )
                                                                      , Op("Nil", [])
                                                                      )
                                                                    ]
                                                                  )
                                                                , Op("Nil", [])
                                                                )
                                                              ]
                                                            )
                                                          , Op("Nil", [])
                                                          )
                                                        )
                                                      , Seq(
                                                          CallT(SVar("concat_0_0"), [], [])
                                                        , Seq(
                                                            Match(Var("m_13"))
                                                          , Seq(Build(Var("q_1")), Build(Var("m_13")))
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Seq(
              Match(Anno(Op("Nil", []), Wld))
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            )
          )
        )
      , SDefT(
          "string_sort_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("map_1_0")
            , [CallT(SVar("explode_string_0_0"), [], [])]
            , []
            )
          , Seq(
              CallT(
                SVar("qsort_1_0")
              , [CallT(SVar("string_lt_0_0"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "q_6"
        , []
        , []
        , Build(Anno(Str("string-sort-test-a"), Op("Nil", [])))
        )
      , SDefT(
          "r_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("De"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("db"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("Cb"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("ac"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "s_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("ac"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("Cb"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("db"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("De"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "t_6"
        , []
        , []
        , Build(Anno(Str("string-sort-test-b"), Op("Nil", [])))
        )
      , SDefT(
          "u_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("2001"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("2000"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("1999"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("1998"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "v_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("1998"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("1999"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("2000"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("2001"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "w_6"
        , []
        , []
        , Build(Anno(Str("string-sort-test-c"), Op("Nil", [])))
        )
      , SDefT(
          "x_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("2001"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("2000"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("1999"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("1998"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "y_6"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("2001"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("2000"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("1999"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("1998"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "string_sort_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("q_6"), [], [])
              , CallT(SVar("string_sort_0_0"), [], [])
              , CallT(SVar("r_6"), [], [])
              , CallT(SVar("s_6"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("t_6"), [], [])
                , CallT(SVar("string_sort_0_0"), [], [])
                , CallT(SVar("u_6"), [], [])
                , CallT(SVar("v_6"), [], [])
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("w_6"), [], [])
                , CallT(SVar("string_sort_desc_0_0"), [], [])
                , CallT(SVar("x_6"), [], [])
                , CallT(SVar("y_6"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "UnEscape_carriage_return_0_0"
        , []
        , []
        , Scope(
            ["y_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("114"), Wld), Var("y_18")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("13"), Op("Nil", [])), Var("y_18")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_tab_0_0"
        , []
        , []
        , Scope(
            ["a_19"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("116"), Wld), Var("a_19")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("9"), Op("Nil", [])), Var("a_19")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_linefeed_0_0"
        , []
        , []
        , Scope(
            ["z_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("110"), Wld), Var("z_18")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("10"), Op("Nil", [])), Var("z_18")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_backslash_0_0"
        , []
        , []
        , Scope(
            ["x_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("92"), Wld), Var("x_18")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("92"), Op("Nil", [])), Var("x_18")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_double_quote_0_0"
        , []
        , []
        , Scope(
            ["v_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("34"), Wld), Var("v_18")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("34"), Op("Nil", [])), Var("v_18")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("UnEscape_double_quote_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(SVar("UnEscape_backslash_0_0"), [], [])
            , Id
            , GuardedLChoice(
                CallT(SVar("UnEscape_linefeed_0_0"), [], [])
              , Id
              , GuardedLChoice(
                  CallT(SVar("UnEscape_tab_0_0"), [], [])
                , Id
                , CallT(SVar("UnEscape_carriage_return_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "w_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("w_121"), [], []), Id, Id)
        )
      , SDefT(
          "unescape_chars_1_0"
        , [ VarDec(
              "a_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "b_105"
              , []
              , []
              , Seq(
                  CallT(
                    SVar("try_1_0")
                  , [CallT(SVar("a_105"), [], [])]
                  , []
                  )
                , GuardedLChoice(
                    CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("_id"), [], [])
                      , CallT(SVar("b_105"), [], [])
                      ]
                    , []
                    )
                  , Id
                  , CallT(SVar("Nil_0_0"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("b_105"), [], [])
          )
        )
      , SDefT(
          "unescape_chars_0_0"
        , []
        , []
        , CallT(
            SVar("unescape_chars_1_0")
          , [CallT(SVar("UnEscape_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "unescape_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("unescape_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "z_6"
        , []
        , []
        , Build(Anno(Str("unescape-test1"), Op("Nil", [])))
        )
      , SDefT(
          "a_7"
        , []
        , []
        , CallT(
            SVar("Cons_2_0")
          , [ CallT(SVar("unescape_0_0"), [], [])
            , CallT(SVar("Nil_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "b_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("\\\"ab\\\\c"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "c_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("\"ab\\c"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "d_7"
        , []
        , []
        , Build(Anno(Str("unescape-test2"), Op("Nil", [])))
        )
      , SDefT(
          "e_7"
        , []
        , []
        , CallT(
            SVar("Cons_2_0")
          , [ CallT(SVar("h_7"), [], [])
            , CallT(SVar("Nil_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "f_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("\" \\\\\\n\\t\""), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "g_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str(" \\\n\t"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "h_7"
        , []
        , []
        , Seq(
            CallT(SVar("un_double_quote_0_0"), [], [])
          , CallT(SVar("unescape_0_0"), [], [])
          )
        )
      , SDefT(
          "i_7"
        , []
        , []
        , Build(Anno(Str("unescape-test3"), Op("Nil", [])))
        )
      , SDefT(
          "j_7"
        , []
        , []
        , CallT(
            SVar("Cons_2_0")
          , [ CallT(SVar("unescape_0_0"), [], [])
            , CallT(SVar("Nil_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "k_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str(" \\\\\\na\\b"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "l_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str(" \\\na\\b"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "m_7"
        , []
        , []
        , Build(Anno(Str("unescape-test4"), Op("Nil", [])))
        )
      , SDefT(
          "n_7"
        , []
        , []
        , CallT(
            SVar("Cons_2_0")
          , [ CallT(SVar("unescape_0_0"), [], [])
            , CallT(SVar("Nil_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "o_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("\" \\\\\\n\\\\t\""), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "p_7"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("\" \\\n\\t\""), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "unescape_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("z_6"), [], [])
              , CallT(SVar("a_7"), [], [])
              , CallT(SVar("b_7"), [], [])
              , CallT(SVar("c_7"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("d_7"), [], [])
                , CallT(SVar("e_7"), [], [])
                , CallT(SVar("f_7"), [], [])
                , CallT(SVar("g_7"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("i_7"), [], [])
                  , CallT(SVar("j_7"), [], [])
                  , CallT(SVar("k_7"), [], [])
                  , CallT(SVar("l_7"), [], [])
                  ]
                , []
                )
              , CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("m_7"), [], [])
                  , CallT(SVar("n_7"), [], [])
                  , CallT(SVar("o_7"), [], [])
                  , CallT(SVar("p_7"), [], [])
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "Cify_1_0"
        , [ VarDec(
              "h_163"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              ["k_18", "x_3", "r_1"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("92"), Wld), Var("k_18")]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("r_1"))
                , Seq(
                    Build(Var("k_18"))
                  , Seq(
                      CallT(SVar("h_163"), [], [])
                    , Seq(
                        Match(Var("x_3"))
                      , Seq(
                          Build(Var("r_1"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("95"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("98"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Anno(Int("95"), Op("Nil", [])), Var("x_3")]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["j_18", "w_3", "s_1"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        "Cons"
                      , [Anno(Int("34"), Wld), Var("j_18")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("s_1"))
                  , Seq(
                      Build(Var("j_18"))
                    , Seq(
                        CallT(SVar("h_163"), [], [])
                      , Seq(
                          Match(Var("w_3"))
                        , Seq(
                            Build(Var("s_1"))
                          , Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("95"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("113"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [Anno(Int("95"), Op("Nil", [])), Var("w_3")]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["i_18", "v_3", "t_1"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("95"), Wld), Var("i_18")]
                        )
                      , Wld
                      )
                    )
                  , Seq(
                      Match(Var("t_1"))
                    , Seq(
                        Build(Var("i_18"))
                      , Seq(
                          CallT(SVar("h_163"), [], [])
                        , Seq(
                            Match(Var("v_3"))
                          , Seq(
                              Build(Var("t_1"))
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("95"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [Anno(Int("95"), Op("Nil", [])), Var("v_3")]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["h_18", "u_3", "u_1"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("45"), Wld), Var("h_18")]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("u_1"))
                      , Seq(
                          Build(Var("h_18"))
                        , Seq(
                            CallT(SVar("h_163"), [], [])
                          , Seq(
                              Match(Var("u_3"))
                            , Seq(
                                Build(Var("u_1"))
                              , Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("95"), Op("Nil", [])), Var("u_3")]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["g_18", "t_3", "v_1"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("39"), Wld), Var("g_18")]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("v_1"))
                      , Seq(
                          Build(Var("g_18"))
                        , Seq(
                            CallT(SVar("h_163"), [], [])
                          , Seq(
                              Match(Var("t_3"))
                            , Seq(
                                Build(Var("v_1"))
                              , Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("95"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Int("112"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [Anno(Int("95"), Op("Nil", [])), Var("t_3")]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "escape_1_0"
        , [ VarDec(
              "v_104"
            , FunType(
                [ FunType(
                    [ConstType(Sort("List", [Sort("String", [])]))]
                  , ConstType(Sort("List", [Sort("String", [])]))
                  )
                , ConstType(Sort("List", [Sort("String", [])]))
                ]
              , ConstType(Sort("List", [Sort("String", [])]))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "w_104"
                  , []
                  , []
                  , GuardedLChoice(
                      CallT(
                        SVar("v_104")
                      , [CallT(SVar("w_104"), [], [])]
                      , []
                      )
                    , Id
                    , GuardedLChoice(
                        CallT(
                          SVar("Cons_2_0")
                        , [ CallT(SVar("_id"), [], [])
                          , CallT(SVar("w_104"), [], [])
                          ]
                        , []
                        )
                      , Id
                      , CallT(SVar("Nil_0_0"), [], [])
                      )
                    )
                  )
                ]
              , CallT(SVar("w_104"), [], [])
              )
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "cify_0_0"
        , []
        , []
        , CallT(
            SVar("escape_1_0")
          , [CallT(SVar("Cify_1_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "Escape_carriage_return_0_0"
        , []
        , []
        , Scope(
            ["u_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("13"), Wld), Var("u_18")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("114"), Op("Nil", [])), Var("u_18")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_linefeed_0_0"
        , []
        , []
        , Scope(
            ["t_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("10"), Wld), Var("t_18")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("110"), Op("Nil", [])), Var("t_18")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_backslash_0_0"
        , []
        , []
        , Scope(
            ["s_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("92"), Wld), Var("s_18")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("92"), Op("Nil", [])), Var("s_18")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_double_quote_0_0"
        , []
        , []
        , Scope(
            ["q_18"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("34"), Wld), Var("q_18")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("34"), Op("Nil", [])), Var("q_18")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("Escape_double_quote_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(SVar("Escape_backslash_0_0"), [], [])
            , Id
            , GuardedLChoice(
                CallT(SVar("Escape_linefeed_0_0"), [], [])
              , Id
              , CallT(SVar("Escape_carriage_return_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "escape_chars_1_0"
        , [ VarDec(
              "y_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "z_104"
              , []
              , []
              , GuardedLChoice(
                  Let(
                    [ SDefT(
                        "q_7"
                      , []
                      , []
                      , CallT(
                          SVar("Cons_2_0")
                        , [ CallT(SVar("_id"), [], [])
                          , CallT(SVar("z_104"), [], [])
                          ]
                        , []
                        )
                      )
                    ]
                  , Seq(
                      CallT(SVar("y_104"), [], [])
                    , CallT(
                        SVar("Cons_2_0")
                      , [ CallT(SVar("_id"), [], [])
                        , CallT(SVar("q_7"), [], [])
                        ]
                      , []
                      )
                    )
                  )
                , Id
                , GuardedLChoice(
                    CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("_id"), [], [])
                      , CallT(SVar("z_104"), [], [])
                      ]
                    , []
                    )
                  , Id
                  , CallT(SVar("Nil_0_0"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("z_104"), [], [])
          )
        )
      , SDefT(
          "escape_chars_0_0"
        , []
        , []
        , CallT(
            SVar("escape_chars_1_0")
          , [CallT(SVar("Escape_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "escape_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("escape_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "r_7"
        , []
        , []
        , Build(Anno(Str("escape-test1"), Op("Nil", [])))
        )
      , SDefT(
          "s_7"
        , []
        , []
        , Build(Anno(Str("\"ab\\c"), Op("Nil", [])))
        )
      , SDefT(
          "t_7"
        , []
        , []
        , Build(Anno(Str("\\\"ab\\\\c"), Op("Nil", [])))
        )
      , SDefT(
          "u_7"
        , []
        , []
        , Build(Anno(Str("escape-test2"), Op("Nil", [])))
        )
      , SDefT(
          "v_7"
        , []
        , []
        , Build(Anno(Str("a-b_c'"), Op("Nil", [])))
        )
      , SDefT(
          "w_7"
        , []
        , []
        , Build(Anno(Str("a_b__c_p_"), Op("Nil", [])))
        )
      , SDefT(
          "escape_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("r_7"), [], [])
              , CallT(SVar("escape_0_0"), [], [])
              , CallT(SVar("s_7"), [], [])
              , CallT(SVar("t_7"), [], [])
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("u_7"), [], [])
              , CallT(SVar("cify_0_0"), [], [])
              , CallT(SVar("v_7"), [], [])
              , CallT(SVar("w_7"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "escape_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("escape_test_0_0"), [], [])
          , CallT(SVar("unescape_test_0_0"), [], [])
          )
        )
      , SDefT(
          "leq_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("gt_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "comp_comp_2_0"
        , [ VarDec(
              "o_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_108"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["e_26", "f_26", "g_26", "w_1"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("e_26"), Var("f_26"), Var("g_26")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("w_1"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("e_26"), Var("f_26")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("o_108"), [], [])
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("f_26"), Var("g_26")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("p_108"), [], [])
                      , Build(Var("w_1"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "leq_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "is_lower_0_0"
        , []
        , []
        , Scope(
            ["y_1", "y_0", "x_1"]
          , Seq(
              Match(Var("y_1"))
            , Seq(
                Match(Var("x_1"))
              , Seq(
                  Match(Var("y_0"))
                , Seq(
                    Build(Var("x_1"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Int("97"), Op("Nil", []))
                            , Var("y_0")
                            , Anno(Int("122"), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(Var("y_1"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "to_upper_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("is_lower_0_0"), [], [])
          , Scope(
              ["d_1", "z_1"]
            , Seq(
                Match(Var("z_1"))
              , Seq(
                  Match(Var("d_1"))
                , Seq(
                    Build(Var("z_1"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("d_1"), Anno(Int("32"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("subt_0_0"), [], [])
                    )
                  )
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "w_107"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "x_107"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("w_107"), [], [])
                    , CallT(SVar("x_107"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("x_107"), [], [])
          )
        )
      , SDefT(
          "upper_case_chars_0_0"
        , []
        , []
        , CallT(
            SVar("map_1_0")
          , [CallT(SVar("to_upper_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "upper_case_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("upper_case_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "x_7"
        , []
        , []
        , Build(Anno(Str("upper-case-test"), Op("Nil", [])))
        )
      , SDefT(
          "y_7"
        , []
        , []
        , Build(Anno(Str("foOBaR"), Op("Nil", [])))
        )
      , SDefT(
          "a_8"
        , []
        , []
        , Build(Anno(Str("FOOBAR"), Op("Nil", [])))
        )
      , SDefT(
          "upper_case_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("x_7"), [], [])
            , CallT(SVar("upper_case_0_0"), [], [])
            , CallT(SVar("y_7"), [], [])
            , CallT(SVar("a_8"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "b_8"
        , []
        , []
        , Build(Anno(Str("copy-char-test"), Op("Nil", [])))
        )
      , SDefT(
          "c_8"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("3"), Op("Nil", []))
                , Anno(Int("32"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "d_8"
        , []
        , []
        , Build(Anno(Str("   "), Op("Nil", [])))
        )
      , SDefT(
          "copy_char_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("b_8"), [], [])
            , CallT(SVar("copy_char_0_0"), [], [])
            , CallT(SVar("c_8"), [], [])
            , CallT(SVar("d_8"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "left_match_0_0"
        , []
        , []
        , Seq(
            Let(
              [ SDefT(
                  "r_103"
                , []
                , []
                , GuardedLChoice(
                    Scope(
                      ["z_14", "a_15", "b_15", "d_2", "a_2"]
                    , Seq(
                        Match(
                          Anno(
                            Op(
                              ""
                            , [ Anno(
                                  Op("Cons", [Var("a_15"), Var("z_14")])
                                , Wld
                                )
                              , Anno(
                                  Op("Cons", [Var("a_15"), Var("b_15")])
                                , Wld
                                )
                              ]
                            )
                          , Wld
                          )
                        )
                      , Seq(
                          Match(Var("a_2"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("z_14"), Var("b_15")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("r_103"), [], [])
                            , Seq(
                                Match(Var("d_2"))
                              , Seq(Build(Var("a_2")), Build(Var("d_2")))
                              )
                            )
                          )
                        )
                      )
                    )
                  , Id
                  , CallT(
                      SVar("_2_0")
                    , [ CallT(SVar("_id"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  )
                )
              ]
            , CallT(SVar("r_103"), [], [])
            )
          , CallT(SVar("Fst_0_0"), [], [])
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["w_59"]
          , Match(
              Anno(
                Op("", [Var("w_59"), Var("w_59")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "is_substring_1_0"
        , [ VarDec(
              "z_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_16", "r_16"]
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                Match(Var("q_16"))
              , Seq(
                  CallT(SVar("z_103"), [], [])
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , Seq(
                      Match(Var("r_16"))
                    , GuardedLChoice(
                        Seq(
                          Build(
                            Anno(
                              Op("", [Var("r_16"), Var("q_16")])
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("eq_0_0"), [], [])
                        )
                      , Id
                      , Let(
                          [ SDefT(
                              "a_104"
                            , []
                            , []
                            , Scope(
                                ["s_16", "t_16"]
                              , Seq(
                                  Match(
                                    As(
                                      Var("s_16")
                                    , Anno(Op("Cons", [Wld, Var("t_16")]), Wld)
                                    )
                                  )
                                , GuardedLChoice(
                                    Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("s_16"), Var("r_16")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , CallT(SVar("left_match_0_0"), [], [])
                                    )
                                  , Id
                                  , Seq(
                                      Build(Var("t_16"))
                                    , CallT(SVar("a_104"), [], [])
                                    )
                                  )
                                )
                              )
                            )
                          ]
                        , Seq(
                            Build(Var("q_16"))
                          , CallT(SVar("a_104"), [], [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "e_8"
        , []
        , []
        , Build(Anno(Str("is-substring-test"), Op("Nil", [])))
        )
      , SDefT(
          "f_8"
        , []
        , []
        , CallT(
            SVar("is_substring_1_0")
          , [CallT(SVar("h_8"), [], [])]
          , []
          )
        )
      , SDefT(
          "g_8"
        , []
        , []
        , Build(Anno(Str("barfoofnord"), Op("Nil", [])))
        )
      , SDefT(
          "h_8"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "is_substring_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("e_8"), [], [])
            , CallT(SVar("f_8"), [], [])
            , CallT(SVar("g_8"), [], [])
            , CallT(SVar("_id"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["e_19"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("e_19"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("e_19"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "while_not_2_0"
        , [ VarDec(
              "l_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "n_123"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("l_123"), [], [])
                , Id
                , Seq(
                    CallT(SVar("m_123"), [], [])
                  , CallT(SVar("n_123"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("n_123"), [], [])
          )
        )
      , SDefT(
          "for_3_0"
        , [ VarDec(
              "o_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_123"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("o_123"), [], [])
          , CallT(
              SVar("while_not_2_0")
            , [ CallT(SVar("p_123"), [], [])
              , CallT(SVar("q_123"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "j_8"
        , []
        , []
        , Scope(
            ["t_19", "u_19"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("t_19"), Var("u_19")])
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Var("t_19")
                    , Var("u_19")
                    , Anno(Op("Nil", []), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "k_8"
        , []
        , []
        , Scope(
            ["v_19", "w_19"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Anno(Int("0"), Wld), Var("v_19"), Var("w_19")]
                  )
                , Wld
                )
              )
            , Build(Var("w_19"))
            )
          )
        )
      , SDefT(
          "l_8"
        , []
        , []
        , Scope(
            ["x_19", "y_19", "z_19", "k_4", "c_2", "b_2"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("x_19"), Var("y_19"), Var("z_19")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("b_2"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("x_19"), Anno(Int("1"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("geq_0_0"), [], [])
                  , Seq(
                      Build(Var("b_2"))
                    , Seq(
                        Match(Var("c_2"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [Var("x_19"), Anno(Int("1"), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("subt_0_0"), [], [])
                          , Seq(
                              Match(Var("k_4"))
                            , Seq(
                                Build(Var("c_2"))
                              , Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [ Var("k_4")
                                      , Var("y_19")
                                      , Anno(
                                          Op("Cons", [Var("y_19"), Var("z_19")])
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "copy_0_0"
        , []
        , []
        , CallT(
            SVar("for_3_0")
          , [ CallT(SVar("j_8"), [], [])
            , CallT(SVar("k_8"), [], [])
            , CallT(SVar("l_8"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("copy_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["i_27", "j_27", "e_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("i_27"), Var("j_27")])
                , Wld
                )
              )
            , Seq(
                Match(Var("e_2"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("i_27"), Var("j_27")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("i_27"), Var("j_27")])
                  )
                , Build(Var("e_2"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["o_27"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("o_27"), Var("o_27")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "pos_0_0"
        , []
        , []
        , Scope(
            ["g_2", "i_8", "f_2"]
          , Seq(
              Match(Var("g_2"))
            , Seq(
                Match(Var("f_2"))
              , Seq(
                  Match(Var("i_8"))
                , Seq(
                    Build(Var("f_2"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("i_8"), Anno(Int("0"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("geq_0_0"), [], [])
                      , Build(Var("g_2"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["o_26", "p_26"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("o_26"), Var("p_26")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("o_26"), Var("p_26")])
              , Id
              , PrimT("SSL_subtr", [], [Var("o_26"), Var("p_26")])
              )
            )
          )
        )
      , SDefT(
          "string_length_0_0"
        , []
        , []
        , CallT(SVar("strlen_0_0"), [], [])
        )
      , SDefT(
          "align_helper_0_2"
        , []
        , [ VarDec("v_17", ConstType(Sort("ATerm", [])))
          , VarDec("w_17", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["d_3", "q_2"]
          , Seq(
              CallT(SVar("string_length_0_0"), [], [])
            , Seq(
                Match(Var("q_2"))
              , Seq(
                  Match(Var("d_3"))
                , Seq(
                    Build(Var("q_2"))
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("w_17"), Var("d_3")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("subt_0_0"), [], [])
                      , GuardedLChoice(
                          Scope(
                            ["r_2"]
                          , Seq(
                              Match(Var("r_2"))
                            , Seq(
                                CallT(SVar("pos_0_0"), [], [])
                              , Build(Var("r_2"))
                              )
                            )
                          )
                        , Scope(
                            ["e_3", "s_2"]
                          , Seq(
                              Match(Var("s_2"))
                            , Seq(
                                Match(Var("e_3"))
                              , Seq(
                                  Build(Var("s_2"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op("", [Var("e_3"), Var("v_17")])
                                      , Op("Nil", [])
                                      )
                                    )
                                  , CallT(SVar("copy_char_0_0"), [], [])
                                  )
                                )
                              )
                            )
                          )
                        , Build(Anno(Str(""), Op("Nil", [])))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "align_right_0_0"
        , []
        , []
        , Scope(
            ["e_17", "f_17", "g_17", "h_17", "w_2", "y_2", "x_2"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("f_17"), Var("e_17"), Var("g_17")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("x_2"))
              , Seq(
                  Build(Var("e_17"))
                , Seq(
                    CallT(
                      SVar("align_helper_0_2")
                    , []
                    , [Var("f_17"), Var("g_17")]
                    )
                  , Seq(
                      Match(Var("h_17"))
                    , Seq(
                        Build(Var("x_2"))
                      , Seq(
                          Match(Var("y_2"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("h_17"), Var("e_17")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("conc_strings_0_0"), [], [])
                            , Seq(
                                Match(Var("w_2"))
                              , Seq(Build(Var("y_2")), Build(Var("w_2")))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["r_39", "s_39", "t_39"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("r_39")
                        , Anno(
                            Op("Cons", [Var("t_39"), Var("s_39")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("t_39"))
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["p_39", "q_39"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("q_39"), Var("p_39")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("q_39"))
            )
          )
        )
      , SDefT(
          "padd_with_1_0"
        , [ VarDec(
              "b_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["t_2", "u_2", "v_2", "b_3", "a_3", "z_2"]
          , Seq(
              Match(Var("z_2"))
            , Seq(
                Build(Anno(Op("", []), Op("Nil", [])))
              , Seq(
                  CallT(SVar("b_104"), [], [])
                , Seq(
                    Match(Var("t_2"))
                  , Seq(
                      Build(Var("z_2"))
                    , Seq(
                        Match(Var("a_3"))
                      , Seq(
                          CallT(SVar("Fst_0_0"), [], [])
                        , Seq(
                            Match(Var("u_2"))
                          , Seq(
                              Build(Var("a_3"))
                            , Seq(
                                Match(Var("b_3"))
                              , Seq(
                                  CallT(SVar("Snd_0_0"), [], [])
                                , Seq(
                                    Match(Var("v_2"))
                                  , Seq(
                                      Build(Var("b_3"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op(
                                              ""
                                            , [Var("t_2"), Var("u_2"), Var("v_2")]
                                            )
                                          , Op("Nil", [])
                                          )
                                        )
                                      , CallT(SVar("align_right_0_0"), [], [])
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "m_8"
        , []
        , []
        , Build(Anno(Str("padd-with-test"), Op("Nil", [])))
        )
      , SDefT(
          "n_8"
        , []
        , []
        , CallT(
            SVar("padd_with_1_0")
          , [CallT(SVar("q_8"), [], [])]
          , []
          )
        )
      , SDefT(
          "o_8"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("42"), Op("Nil", []))
                , Anno(Int("4"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "p_8"
        , []
        , []
        , Build(Anno(Str("0042"), Op("Nil", [])))
        )
      , SDefT(
          "q_8"
        , []
        , []
        , Build(Anno(Int("48"), Op("Nil", [])))
        )
      , SDefT(
          "padd_with_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("m_8"), [], [])
            , CallT(SVar("n_8"), [], [])
            , CallT(SVar("o_8"), [], [])
            , CallT(SVar("p_8"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "is_quoted_chars_0_1"
        , []
        , [VarDec("c_18", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["c_3", "m_3"]
          , Seq(
              Match(Var("c_3"))
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("c_18"), Var("m_3")])
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("m_3"))
                , Seq(
                    CallT(SVar("last_0_0"), [], [])
                  , Seq(Match(Var("c_18")), Build(Var("c_3")))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_quoted_0_1"
        , []
        , [VarDec("a_18", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["f_3"]
          , Seq(
              Match(Var("f_3"))
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  CallT(SVar("is_quoted_chars_0_1"), [], [Var("a_18")])
                , Build(Var("f_3"))
                )
              )
            )
          )
        )
      , SDefT(
          "is_double_quoted_0_0"
        , []
        , []
        , Scope(
            ["h_3", "i_3"]
          , Seq(
              Match(Var("i_3"))
            , Seq(
                Build(Anno(Int("34"), Op("Nil", [])))
              , Seq(
                  Match(Var("h_3"))
                , Seq(
                    Build(Var("i_3"))
                  , CallT(SVar("is_quoted_0_1"), [], [Var("h_3")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "r_8"
        , []
        , []
        , Build(Anno(Str("is-double-quote 1"), Op("Nil", [])))
        )
      , SDefT(
          "s_8"
        , []
        , []
        , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
        )
      , SDefT(
          "t_8"
        , []
        , []
        , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
        )
      , SDefT(
          "u_8"
        , []
        , []
        , Build(Anno(Str("is-double-quote 2"), Op("Nil", [])))
        )
      , SDefT(
          "v_8"
        , []
        , []
        , Build(Anno(Str("fnord"), Op("Nil", [])))
        )
      , SDefT(
          "w_8"
        , []
        , []
        , Build(Anno(Str("is-double-quote 3"), Op("Nil", [])))
        )
      , SDefT(
          "x_8"
        , []
        , []
        , Build(Anno(Str("\"fnord"), Op("Nil", [])))
        )
      , SDefT(
          "y_8"
        , []
        , []
        , Build(Anno(Str("is-double-quote 4"), Op("Nil", [])))
        )
      , SDefT(
          "z_8"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "a_9"
        , []
        , []
        , Build(Anno(Str("is-double-quote 5"), Op("Nil", [])))
        )
      , SDefT(
          "b_9"
        , []
        , []
        , Build(Anno(Str("\"\""), Op("Nil", [])))
        )
      , SDefT(
          "c_9"
        , []
        , []
        , Build(Anno(Str("\"\""), Op("Nil", [])))
        )
      , SDefT(
          "d_9"
        , []
        , []
        , Build(Anno(Str("is-double-quote 6"), Op("Nil", [])))
        )
      , SDefT(
          "e_9"
        , []
        , []
        , Build(Anno(Str("\" \""), Op("Nil", [])))
        )
      , SDefT(
          "f_9"
        , []
        , []
        , Build(Anno(Str("\" \""), Op("Nil", [])))
        )
      , SDefT(
          "is_double_quote_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("r_8"), [], [])
              , CallT(SVar("is_double_quoted_0_0"), [], [])
              , CallT(SVar("s_8"), [], [])
              , CallT(SVar("t_8"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_and_fail_3_0")
              , [ CallT(SVar("u_8"), [], [])
                , CallT(SVar("is_double_quoted_0_0"), [], [])
                , CallT(SVar("v_8"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ CallT(SVar("w_8"), [], [])
                  , CallT(SVar("is_double_quoted_0_0"), [], [])
                  , CallT(SVar("x_8"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ CallT(SVar("y_8"), [], [])
                    , CallT(SVar("is_double_quoted_0_0"), [], [])
                    , CallT(SVar("z_8"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("a_9"), [], [])
                      , CallT(SVar("is_double_quoted_0_0"), [], [])
                      , CallT(SVar("b_9"), [], [])
                      , CallT(SVar("c_9"), [], [])
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("d_9"), [], [])
                      , CallT(SVar("is_double_quoted_0_0"), [], [])
                      , CallT(SVar("e_9"), [], [])
                      , CallT(SVar("f_9"), [], [])
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "c_107"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "d_107"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("_id"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  , CallT(SVar("c_107"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("d_107"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("d_107"), [], [])
          )
        )
      , SDefT(
          "init_0_0"
        , []
        , []
        , CallT(
            SVar("at_last_1_0")
          , [CallT(SVar("Tl_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["n_22"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("n_22")]), Wld)
              )
            , Build(Var("n_22"))
            )
          )
        )
      , SDefT(
          "Last_0_0"
        , []
        , []
        , Scope(
            ["o_22"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Var("o_22"), Anno(Op("Nil", []), Wld)]
                  )
                , Wld
                )
              )
            , Build(Var("o_22"))
            )
          )
        )
      , SDefT(
          "last_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "b_106"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Last_0_0"), [], [])
                , Id
                , Seq(
                    CallT(SVar("Tl_0_0"), [], [])
                  , CallT(SVar("b_106"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("b_106"), [], [])
          )
        )
      , SDefT(
          "Hd_0_0"
        , []
        , []
        , Scope(
            ["m_22"]
          , Seq(
              Match(
                Anno(Op("Cons", [Var("m_22"), Wld]), Wld)
              )
            , Build(Var("m_22"))
            )
          )
        )
      , SDefT(
          "unquote_chars_2_0"
        , [ VarDec(
              "h_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "i_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["k_3", "j_3"]
          , Seq(
              Match(Var("j_3"))
            , Seq(
                CallT(SVar("Hd_0_0"), [], [])
              , Seq(
                  CallT(SVar("h_104"), [], [])
                , Seq(
                    Build(Var("j_3"))
                  , Seq(
                      Match(Var("k_3"))
                    , Seq(
                        CallT(SVar("last_0_0"), [], [])
                      , Seq(
                          CallT(SVar("i_104"), [], [])
                        , Seq(
                            Build(Var("k_3"))
                          , Seq(
                              CallT(SVar("Tl_0_0"), [], [])
                            , CallT(SVar("init_0_0"), [], [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "unquote_chars_1_0"
        , [ VarDec(
              "g_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("unquote_chars_2_0")
          , [ CallT(SVar("g_104"), [], [])
            , CallT(SVar("g_104"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "g_9"
        , []
        , []
        , Match(Anno(Int("34"), Wld))
        )
      , SDefT(
          "un_double_quote_chars_0_0"
        , []
        , []
        , CallT(
            SVar("unquote_chars_1_0")
          , [CallT(SVar("g_9"), [], [])]
          , []
          )
        )
      , SDefT(
          "un_double_quote_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("un_double_quote_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "h_9"
        , []
        , []
        , Build(Anno(Str("un-double-quote-test"), Op("Nil", [])))
        )
      , SDefT(
          "i_9"
        , []
        , []
        , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
        )
      , SDefT(
          "j_9"
        , []
        , []
        , Build(Anno(Str("fnord"), Op("Nil", [])))
        )
      , SDefT(
          "un_double_quote_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("h_9"), [], [])
            , CallT(SVar("un_double_quote_0_0"), [], [])
            , CallT(SVar("i_9"), [], [])
            , CallT(SVar("j_9"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "concat_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "t_106"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , Scope(
                    ["k_21", "l_21", "c_5", "l_3"]
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("k_21"), Var("l_21")])
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("l_3"))
                      , Seq(
                          Build(Var("k_21"))
                        , Seq(
                            Let(
                              [ SDefT(
                                  "k_9"
                                , []
                                , []
                                , Seq(
                                    Build(Var("l_21"))
                                  , CallT(SVar("t_106"), [], [])
                                  )
                                )
                              ]
                            , CallT(
                                SVar("at_end_1_0")
                              , [CallT(SVar("k_9"), [], [])]
                              , []
                              )
                            )
                          , Seq(
                              Match(Var("c_5"))
                            , Seq(Build(Var("l_3")), Build(Var("c_5")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("t_106"), [], [])
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "v_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["l_4", "i_4", "j_4", "m_4", "n_4"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("i_4"), Var("j_4")])
                , Var("l_4")
                )
              )
            , Seq(
                Build(Var("i_4"))
              , Seq(
                  CallT(SVar("v_90"), [], [])
                , Seq(
                    Match(Var("m_4"))
                  , Seq(
                      Build(Var("j_4"))
                    , Seq(
                        CallT(SVar("w_90"), [], [])
                      , Seq(
                          Match(Var("n_4"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("m_4"), Var("n_4")])
                            , Var("l_4")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_end_1_0"
        , [ VarDec(
              "w_106"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "x_106"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("_id"), [], [])
                    , CallT(SVar("x_106"), [], [])
                    ]
                  , []
                  )
                , Id
                , Seq(
                    CallT(SVar("Nil_0_0"), [], [])
                  , CallT(SVar("w_106"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("x_106"), [], [])
          )
        )
      , SDefT(
          "conc_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["h_21", "i_21", "a_5", "n_3"]
            , Seq(
                Match(
                  Anno(
                    Op("", [Var("h_21"), Var("i_21")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("n_3"))
                , Seq(
                    Build(Var("h_21"))
                  , Seq(
                      Let(
                        [SDefT("l_9", [], [], Build(Var("i_21")))]
                      , CallT(
                          SVar("at_end_1_0")
                        , [CallT(SVar("l_9"), [], [])]
                        , []
                        )
                      )
                    , Seq(
                        Match(Var("a_5"))
                      , Seq(Build(Var("n_3")), Build(Var("a_5")))
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["j_21", "b_5", "o_3"]
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("j_21"))
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("o_3"))
                , Seq(
                    Build(Var("j_21"))
                  , Seq(
                      CallT(SVar("concat_0_0"), [], [])
                    , Seq(
                        Match(Var("b_5"))
                      , Seq(Build(Var("o_3")), Build(Var("b_5")))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "quote_chars_0_0"
        , []
        , []
        , Scope(
            ["e_18", "f_18", "q_3", "p_3"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_18"), Var("e_18")])
                , Wld
                )
              )
            , Seq(
                Match(Var("p_3"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op("Cons", [Var("f_18"), Var("e_18")])
                          , Op("Nil", [])
                          )
                        , Anno(
                            Op(
                              "Cons"
                            , [Var("f_18"), Anno(Op("Nil", []), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("conc_0_0"), [], [])
                  , Seq(
                      Match(Var("q_3"))
                    , Seq(Build(Var("p_3")), Build(Var("q_3")))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "single_quote_chars_0_0"
        , []
        , []
        , Scope(
            ["r_3", "s_3"]
          , Seq(
              Match(Var("s_3"))
            , Seq(
                Match(Var("r_3"))
              , Seq(
                  Build(Var("s_3"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Anno(Int("39"), Op("Nil", [])), Var("r_3")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("quote_chars_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "c_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("c_105"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "single_quote_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("single_quote_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "m_9"
        , []
        , []
        , Build(Anno(Str("single-quote-test"), Op("Nil", [])))
        )
      , SDefT(
          "n_9"
        , []
        , []
        , Build(Anno(Str("foobar"), Op("Nil", [])))
        )
      , SDefT(
          "o_9"
        , []
        , []
        , Build(Anno(Str("'foobar'"), Op("Nil", [])))
        )
      , SDefT(
          "single_quote_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ CallT(SVar("m_9"), [], [])
            , CallT(SVar("single_quote_0_0"), [], [])
            , CallT(SVar("n_9"), [], [])
            , CallT(SVar("o_9"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "quote_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("single_quote_test_0_0"), [], [])
          , Seq(
              CallT(SVar("un_double_quote_test_0_0"), [], [])
            , CallT(SVar("is_double_quote_test_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["h_19"]
          , Seq(
              Match(Var("h_19"))
            , PrimT("SSL_concat_strings", [], [Var("h_19")])
            )
          )
        )
      , SDefT(
          "p_9"
        , []
        , []
        , Build(Anno(Str("concat-strings-1"), Op("Nil", [])))
        )
      , SDefT(
          "q_9"
        , []
        , []
        , Build(Anno(Op("Nil", []), Op("Nil", [])))
        )
      , SDefT(
          "r_9"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "s_9"
        , []
        , []
        , Build(Anno(Str("concat-strings-2"), Op("Nil", [])))
        )
      , SDefT(
          "t_9"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("a"), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str(""), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "u_9"
        , []
        , []
        , Build(Anno(Str("a"), Op("Nil", [])))
        )
      , SDefT(
          "v_9"
        , []
        , []
        , Build(Anno(Str("concat-strings-3"), Op("Nil", [])))
        )
      , SDefT(
          "w_9"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str(""), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("a"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "x_9"
        , []
        , []
        , Build(Anno(Str("a"), Op("Nil", [])))
        )
      , SDefT(
          "y_9"
        , []
        , []
        , Build(Anno(Str("concat-strings-4"), Op("Nil", [])))
        )
      , SDefT(
          "z_9"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("hello "), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("world"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "a_10"
        , []
        , []
        , Build(Anno(Str("hello world"), Op("Nil", [])))
        )
      , SDefT(
          "b_10"
        , []
        , []
        , Build(Anno(Str("concat-strings-5"), Op("Nil", [])))
        )
      , SDefT(
          "c_10"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("hello "), Op("Nil", []))
                , Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("world"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                ]
              )
            , Op(
                "Cons"
              , [ Anno(Int("1"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            )
          )
        )
      , SDefT(
          "d_10"
        , []
        , []
        , Build(Anno(Str("hello world"), Op("Nil", [])))
        )
      , SDefT(
          "e_10"
        , []
        , []
        , Build(Anno(Str("concat-strings-6"), Op("Nil", [])))
        )
      , SDefT(
          "f_10"
        , []
        , []
        , Build(
            Anno(
              Op(
                "Cons"
              , [ Anno(Str("hello"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            , Op(
                "Cons"
              , [ Anno(Int("1"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            )
          )
        )
      , SDefT(
          "g_10"
        , []
        , []
        , Build(Anno(Str("hello"), Op("Nil", [])))
        )
      , SDefT(
          "h_10"
        , []
        , []
        , Build(Anno(Str("concat-strings-7"), Op("Nil", [])))
        )
      , SDefT(
          "i_10"
        , []
        , []
        , Build(
            Anno(
              Op("Nil", [])
            , Op(
                "Cons"
              , [ Anno(Int("1"), Op("Nil", []))
                , Anno(Op("Nil", []), Op("Nil", []))
                ]
              )
            )
          )
        )
      , SDefT(
          "j_10"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "concat_strings_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("p_9"), [], [])
              , CallT(SVar("concat_strings_0_0"), [], [])
              , CallT(SVar("q_9"), [], [])
              , CallT(SVar("r_9"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("s_9"), [], [])
                , CallT(SVar("concat_strings_0_0"), [], [])
                , CallT(SVar("t_9"), [], [])
                , CallT(SVar("u_9"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("v_9"), [], [])
                  , CallT(SVar("concat_strings_0_0"), [], [])
                  , CallT(SVar("w_9"), [], [])
                  , CallT(SVar("x_9"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ CallT(SVar("y_9"), [], [])
                    , CallT(SVar("concat_strings_0_0"), [], [])
                    , CallT(SVar("z_9"), [], [])
                    , CallT(SVar("a_10"), [], [])
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ CallT(SVar("b_10"), [], [])
                      , CallT(SVar("concat_strings_0_0"), [], [])
                      , CallT(SVar("c_10"), [], [])
                      , CallT(SVar("d_10"), [], [])
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("e_10"), [], [])
                        , CallT(SVar("concat_strings_0_0"), [], [])
                        , CallT(SVar("f_10"), [], [])
                        , CallT(SVar("g_10"), [], [])
                        ]
                      , []
                      )
                    , CallT(
                        SVar("apply_test_4_0")
                      , [ CallT(SVar("h_10"), [], [])
                        , CallT(SVar("concat_strings_0_0"), [], [])
                        , CallT(SVar("i_10"), [], [])
                        , CallT(SVar("j_10"), [], [])
                        ]
                      , []
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strlen_0_0"
        , []
        , []
        , Scope(
            ["d_19"]
          , Seq(
              Match(Var("d_19"))
            , PrimT("SSL_strlen", [], [Var("d_19")])
            )
          )
        )
      , SDefT(
          "k_10"
        , []
        , []
        , Build(Anno(Str("strlen-1"), Op("Nil", [])))
        )
      , SDefT(
          "l_10"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "m_10"
        , []
        , []
        , Build(Anno(Int("0"), Op("Nil", [])))
        )
      , SDefT(
          "n_10"
        , []
        , []
        , Build(Anno(Str("strlen-2"), Op("Nil", [])))
        )
      , SDefT(
          "o_10"
        , []
        , []
        , Build(Anno(Str("a"), Op("Nil", [])))
        )
      , SDefT(
          "p_10"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "q_10"
        , []
        , []
        , Build(Anno(Str("strlen-3"), Op("Nil", [])))
        )
      , SDefT(
          "r_10"
        , []
        , []
        , Build(Anno(Str("hello world"), Op("Nil", [])))
        )
      , SDefT(
          "s_10"
        , []
        , []
        , Build(Anno(Int("11"), Op("Nil", [])))
        )
      , SDefT(
          "strlen_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("k_10"), [], [])
              , CallT(SVar("strlen_0_0"), [], [])
              , CallT(SVar("l_10"), [], [])
              , CallT(SVar("m_10"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("n_10"), [], [])
                , CallT(SVar("strlen_0_0"), [], [])
                , CallT(SVar("o_10"), [], [])
                , CallT(SVar("p_10"), [], [])
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("q_10"), [], [])
                , CallT(SVar("strlen_0_0"), [], [])
                , CallT(SVar("r_10"), [], [])
                , CallT(SVar("s_10"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["f_19", "g_19"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_19"), Var("g_19")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("f_19"), Var("g_19")])
            )
          )
        )
      , SDefT(
          "t_10"
        , []
        , []
        , Build(Anno(Str("strcat-1"), Op("Nil", [])))
        )
      , SDefT(
          "u_10"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str(""), Op("Nil", []))
                , Anno(Str(""), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "v_10"
        , []
        , []
        , Build(Anno(Str(""), Op("Nil", [])))
        )
      , SDefT(
          "w_10"
        , []
        , []
        , Build(Anno(Str("strcat-2"), Op("Nil", [])))
        )
      , SDefT(
          "x_10"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("a"), Op("Nil", []))
                , Anno(Str(""), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "y_10"
        , []
        , []
        , Build(Anno(Str("a"), Op("Nil", [])))
        )
      , SDefT(
          "z_10"
        , []
        , []
        , Build(Anno(Str("strcat-3"), Op("Nil", [])))
        )
      , SDefT(
          "a_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str(""), Op("Nil", []))
                , Anno(Str("a"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "b_11"
        , []
        , []
        , Build(Anno(Str("a"), Op("Nil", [])))
        )
      , SDefT(
          "c_11"
        , []
        , []
        , Build(Anno(Str("strcat-4"), Op("Nil", [])))
        )
      , SDefT(
          "d_11"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Str("hello "), Op("Nil", []))
                , Anno(Str("world"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "e_11"
        , []
        , []
        , Build(Anno(Str("hello world"), Op("Nil", [])))
        )
      , SDefT(
          "strcat_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("t_10"), [], [])
              , CallT(SVar("strcat_0_0"), [], [])
              , CallT(SVar("u_10"), [], [])
              , CallT(SVar("v_10"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("w_10"), [], [])
                , CallT(SVar("strcat_0_0"), [], [])
                , CallT(SVar("x_10"), [], [])
                , CallT(SVar("y_10"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("z_10"), [], [])
                  , CallT(SVar("strcat_0_0"), [], [])
                  , CallT(SVar("a_11"), [], [])
                  , CallT(SVar("b_11"), [], [])
                  ]
                , []
                )
              , CallT(
                  SVar("apply_test_4_0")
                , [ CallT(SVar("c_11"), [], [])
                  , CallT(SVar("strcat_0_0"), [], [])
                  , CallT(SVar("d_11"), [], [])
                  , CallT(SVar("e_11"), [], [])
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["k_19"]
          , Seq(
              Match(Var("k_19"))
            , PrimT("SSL_implode_string", [], [Var("k_19")])
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "s_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "t_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "v_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "f_11"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("sunit_create_input_1_0")
                    , [CallT(SVar("u_135"), [], [])]
                    , []
                    )
                  , GuardedLChoice(CallT(SVar("t_135"), [], []), Fail, Id)
                  )
                , Id
                , Seq(
                    Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                  , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                  )
                )
              )
            ]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("s_135"), [], [])
              , CallT(SVar("f_11"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "g_11"
        , []
        , []
        , Build(Anno(Op("", []), Op("Nil", [])))
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "p_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "r_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("p_135"), [], [])
            , CallT(SVar("q_135"), [], [])
            , CallT(SVar("r_135"), [], [])
            , CallT(SVar("g_11"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["l_19"]
          , Seq(
              Match(Var("l_19"))
            , PrimT("SSL_explode_string", [], [Var("l_19")])
            )
          )
        )
      , SDefT(
          "h_11"
        , []
        , []
        , Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "q_134"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("q_134"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [CallT(SVar("h_11"), [], [])]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["z_3", "k_147", "y_3"]
          , Seq(
              Match(Var("z_3"))
            , Seq(
                Match(Var("y_3"))
              , Seq(
                  Match(Var("k_147"))
                , Seq(
                    Build(Var("y_3"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [Var("k_147"), Anno(Op("Nil", []), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("z_3"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "e_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_4"]
          , Seq(
              Match(Var("a_4"))
            , Seq(
                CallT(SVar("e_124"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("a_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "i_11"
        , []
        , []
        , Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "p_134"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("p_134"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [CallT(SVar("i_11"), [], [])]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("_id"), [], [])
            , CallT(SVar("inc_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["i_26", "j_26"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("i_26"), Var("j_26")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("i_26"), Var("j_26")])
              , Id
              , PrimT("SSL_addr", [], [Var("i_26"), Var("j_26")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["z_7", "b_4"]
          , Seq(
              Match(Var("b_4"))
            , Seq(
                Match(Var("z_7"))
              , Seq(
                  Build(Var("b_4"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("z_7"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("inc_0_0"), [], [])
            , CallT(SVar("_id"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "r_134"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "s_134"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["c_4"]
          , Seq(
              Match(Var("c_4"))
            , Seq(
                CallT(SVar("r_134"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("c_4"))
                  , GuardedLChoice(
                      Scope(
                        ["d_4"]
                      , Seq(
                          Match(Var("d_4"))
                        , Seq(
                            CallT(SVar("s_134"), [], [])
                          , Seq(
                              Build(Var("d_4"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "k_11"
        , []
        , []
        , Build(Anno(Str("  result not equal : "), Op("Nil", [])))
        )
      , SDefT(
          "l_11"
        , []
        , []
        , Build(Anno(Str("  expected         : "), Op("Nil", [])))
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "e_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "f_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_71", "r_71"]
          , Let(
              [ SDefT(
                  "j_11"
                , []
                , []
                , Seq(
                    GuardedLChoice(
                      Seq(
                        CallT(
                          SVar("sunit_create_input_1_0")
                        , [CallT(SVar("g_135"), [], [])]
                        , []
                        )
                      , CallT(SVar("f_135"), [], [])
                      )
                    , Id
                    , Seq(
                        Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                      , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                      )
                    )
                  , Seq(
                      Match(Var("q_71"))
                    , Seq(
                        CallT(
                          SVar("sunit_create_output_1_0")
                        , [CallT(SVar("h_135"), [], [])]
                        , []
                        )
                      , Seq(
                          Match(Var("r_71"))
                        , GuardedLChoice(
                            Seq(Build(Var("r_71")), Match(Var("q_71")))
                          , Id
                          , Seq(
                              Build(Var("q_71"))
                            , Seq(
                                CallT(
                                  SVar("debug_1_0")
                                , [CallT(SVar("k_11"), [], [])]
                                , []
                                )
                              , Seq(
                                  Build(Var("r_71"))
                                , Seq(
                                    CallT(
                                      SVar("debug_1_0")
                                    , [CallT(SVar("l_11"), [], [])]
                                    , []
                                    )
                                  , Fail
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , CallT(
                SVar("do_test_2_0")
              , [ CallT(SVar("e_135"), [], [])
                , CallT(SVar("j_11"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "m_11"
        , []
        , []
        , Build(Anno(Str("explode-implode-test1"), Op("Nil", [])))
        )
      , SDefT(
          "n_11"
        , []
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "o_11"
        , []
        , []
        , Build(Anno(Str("foOBaR"), Op("Nil", [])))
        )
      , SDefT(
          "p_11"
        , []
        , []
        , Build(Anno(Str("foOBaR"), Op("Nil", [])))
        )
      , SDefT(
          "q_11"
        , []
        , []
        , Build(Anno(Str("explode-implode-test2"), Op("Nil", [])))
        )
      , SDefT(
          "r_11"
        , []
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "s_11"
        , []
        , []
        , Build(Anno(Str("\n\t"), Op("Nil", [])))
        )
      , SDefT(
          "t_11"
        , []
        , []
        , Build(Anno(Str("\n\t"), Op("Nil", [])))
        )
      , SDefT(
          "u_11"
        , []
        , []
        , Build(Anno(Str("implode-string applied to non list"), Op("Nil", [])))
        )
      , SDefT(
          "v_11"
        , []
        , []
        , Build(Anno(Str("foo"), Op("Nil", [])))
        )
      , SDefT(
          "w_11"
        , []
        , []
        , Build(Anno(Str("implode-string applied to non list"), Op("Nil", [])))
        )
      , SDefT(
          "x_11"
        , []
        , []
        , Build(Anno(Int("1"), Op("Nil", [])))
        )
      , SDefT(
          "explode_implode_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ CallT(SVar("m_11"), [], [])
              , CallT(SVar("n_11"), [], [])
              , CallT(SVar("o_11"), [], [])
              , CallT(SVar("p_11"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ CallT(SVar("q_11"), [], [])
                , CallT(SVar("r_11"), [], [])
                , CallT(SVar("s_11"), [], [])
                , CallT(SVar("t_11"), [], [])
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ CallT(SVar("u_11"), [], [])
                  , CallT(SVar("implode_string_0_0"), [], [])
                  , CallT(SVar("v_11"), [], [])
                  ]
                , []
                )
              , CallT(
                  SVar("apply_and_fail_3_0")
                , [ CallT(SVar("w_11"), [], [])
                  , CallT(SVar("implode_string_0_0"), [], [])
                  , CallT(SVar("x_11"), [], [])
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "y_11"
        , []
        , []
        , Match(Anno(Int("0"), Wld))
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("_id"), [], [])
            , CallT(SVar("y_11"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "h_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "i_95"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_4", "o_4", "p_4", "r_4", "s_4"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("o_4"), Var("p_4")])
                , Var("q_4")
                )
              )
            , Seq(
                Build(Var("o_4"))
              , Seq(
                  CallT(SVar("h_95"), [], [])
                , Seq(
                    Match(Var("r_4"))
                  , Seq(
                      Build(Var("p_4"))
                    , Seq(
                        CallT(SVar("i_95"), [], [])
                      , Seq(
                          Match(Var("s_4"))
                        , Build(
                            Anno(
                              Op("", [Var("r_4"), Var("s_4")])
                            , Var("q_4")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "z_11"
        , []
        , []
        , CallT(
            SVar("debug_1_0")
          , [CallT(SVar("b_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "a_12"
        , []
        , []
        , CallT(
            SVar("debug_1_0")
          , [CallT(SVar("c_12"), [], [])]
          , []
          )
        )
      , SDefT(
          "b_12"
        , []
        , []
        , Build(Anno(Str("successes: "), Op("Nil", [])))
        )
      , SDefT(
          "c_12"
        , []
        , []
        , Build(Anno(Str("failures: "), Op("Nil", [])))
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(SVar("z_11"), [], [])
            , CallT(SVar("a_12"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["q_60", "r_60", "e_4"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_60"), Var("r_60")])
                , Wld
                )
              )
            , Seq(
                Match(Var("e_4"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("q_60"), Var("r_60")])
                , Build(Var("e_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "n_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_4", "l_147", "m_147", "g_4", "f_4"]
          , Seq(
              Match(Var("h_4"))
            , Seq(
                Match(Var("f_4"))
              , Seq(
                  CallT(SVar("n_124"), [], [])
                , Seq(
                    Match(Var("l_147"))
                  , Seq(
                      Build(Var("f_4"))
                    , Seq(
                        Match(Var("g_4"))
                      , Seq(
                          Match(Var("m_147"))
                        , Seq(
                            Build(Var("g_4"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Anno(Op("stderr", []), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Var("l_147")
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [Var("m_147"), Anno(Op("Nil", []), Op("Nil", []))]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("printnl_0_0"), [], [])
                              , Build(Var("h_4"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "d_12"
        , []
        , []
        , Build(Anno(Str("test suite: "), Op("Nil", [])))
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "c_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_135"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("c_135"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [CallT(SVar("d_12"), [], [])]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("d_135"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "e_12"
        , []
        , []
        , Build(Anno(Str("string-test"), Op("Nil", [])))
        )
      , SDefT(
          "f_12"
        , []
        , []
        , Seq(
            CallT(SVar("explode_implode_test_0_0"), [], [])
          , Seq(
              CallT(SVar("strcat_tests_0_0"), [], [])
            , Seq(
                CallT(SVar("strlen_tests_0_0"), [], [])
              , Seq(
                  CallT(SVar("concat_strings_tests_0_0"), [], [])
                , Seq(
                    CallT(SVar("quote_tests_0_0"), [], [])
                  , Seq(
                      CallT(SVar("padd_with_test_0_0"), [], [])
                    , Seq(
                        CallT(SVar("is_substring_test_0_0"), [], [])
                      , Seq(
                          CallT(SVar("copy_char_test_0_0"), [], [])
                        , Seq(
                            CallT(SVar("upper_case_test_0_0"), [], [])
                          , Seq(
                              CallT(SVar("escape_tests_0_0"), [], [])
                            , Seq(
                                CallT(SVar("string_sort_test_0_0"), [], [])
                              , Seq(
                                  CallT(SVar("string_tokenize_test_0_0"), [], [])
                                , CallT(SVar("split_tests_0_0"), [], [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ CallT(SVar("e_12"), [], [])
            , CallT(SVar("f_12"), [], [])
            ]
          , []
          )
        )
      ]
    )
  ]
)
