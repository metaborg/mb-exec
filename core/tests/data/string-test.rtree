Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "split_2_0"
        , [ VarDec(
              "c_99"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_99"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_129", "a_130", "g_0", "f_0"]
          , Seq(
              Seq(
                Match(Var("f_0"))
              , Seq(
                  CallT(SVar("c_99"), [], [])
                , Seq(Match(Var("z_129")), Build(Var("f_0")))
                )
              )
            , Seq(
                Match(Var("g_0"))
              , Seq(
                  CallT(SVar("d_99"), [], [])
                , Seq(
                    Match(Var("a_130"))
                  , Seq(
                      Build(Var("g_0"))
                    , Build(
                        Anno(
                          Op("", [Var("z_129"), Var("a_130")])
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "split_at_dot_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("split_2_0")
            , [ Build(Anno(Op("Nil", []), Op("Nil", [])))
              , CallT(SVar("explode_string_0_0"), [], [])
              ]
            , []
            )
          , Seq(
              Let(
                [ SDefT(
                    "g_86"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["t_10", "u_10"]
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Var("t_10")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("46"), Wld), Var("u_10")]
                                    )
                                  , Wld
                                  )
                                ]
                              )
                            , Wld
                            )
                          )
                        , Build(
                            Anno(
                              Op("", [Var("t_10"), Var("u_10")])
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Scope(
                          ["v_10", "w_10", "x_10", "m_1", "i_0", "n_1", "h_0"]
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [ Var("v_10")
                                  , Anno(
                                      Op("Cons", [Var("w_10"), Var("x_10")])
                                    , Wld
                                    )
                                  ]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("i_0"))
                            , Seq(
                                Seq(
                                  Seq(
                                    Match(Var("h_0"))
                                  , Seq(
                                      Build(Var("v_10"))
                                    , Seq(
                                        CallT(
                                          SVar("at_end_1_0")
                                        , [ Build(
                                              Anno(
                                                Op(
                                                  "Cons"
                                                , [Var("w_10"), Anno(Op("Nil", []), Op("Nil", []))]
                                                )
                                              , Op("Nil", [])
                                              )
                                            )
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          Match(Var("n_1"))
                                        , Seq(
                                            Build(Var("h_0"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op("", [Var("n_1"), Var("x_10")])
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                CallT(SVar("g_86"), [], [])
                                              , Match(Var("m_1"))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                , Build(Var("i_0"))
                                )
                              , Build(Var("m_1"))
                              )
                            )
                          )
                        )
                      , Id
                      , CallT(
                          SVar("_2_0")
                        , [Id, CallT(SVar("Nil_0_0"), [], [])]
                        , []
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("g_86"), [], [])
              )
            , CallT(
                SVar("_2_0")
              , [ CallT(SVar("implode_string_0_0"), [], [])
                , CallT(SVar("implode_string_0_0"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "split_at_dot_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("split-at-dot-test"), Op("Nil", [])))
            , CallT(SVar("split_at_dot_0_0"), [], [])
            , Build(Anno(Str("3.141592"), Op("Nil", [])))
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("3"), Op("Nil", []))
                    , Anno(Str("141592"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "split_after_0_0"
        , []
        , []
        , Scope(
            ["h_11", "i_11", "j_11", "k_11"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("i_11"), Var("h_11")])
                , Wld
                )
              )
            , Seq(
                Build(Var("h_11"))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , Seq(
                    Match(Var("j_11"))
                  , Seq(
                      Build(Var("i_11"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("k_11"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Op("Nil", []), Op("Nil", [])), Var("k_11")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              Let(
                                [ SDefT(
                                    "i_86"
                                  , []
                                  , []
                                  , GuardedLChoice(
                                      CallT(
                                        SVar("_2_0")
                                      , [Id, CallT(SVar("Nil_0_0"), [], [])]
                                      , []
                                      )
                                    , Id
                                    , GuardedLChoice(
                                        Scope(
                                          ["l_11", "m_11", "r_1", "s_1", "m_0", "k_0"]
                                        , Seq(
                                            Match(
                                              Anno(
                                                Op("", [Var("l_11"), Var("m_11")])
                                              , Wld
                                              )
                                            )
                                          , Seq(
                                              Match(Var("k_0"))
                                            , Seq(
                                                Build(
                                                  Anno(
                                                    Op("", [Var("l_11"), Var("j_11")])
                                                  , Op("Nil", [])
                                                  )
                                                )
                                              , Seq(
                                                  CallT(SVar("conc_0_0"), [], [])
                                                , Seq(
                                                    Match(Var("r_1"))
                                                  , Seq(
                                                      Build(Var("k_0"))
                                                    , Seq(
                                                        Match(Var("m_0"))
                                                      , Seq(
                                                          Build(
                                                            Anno(
                                                              Op("", [Var("m_11"), Var("j_11")])
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        , Seq(
                                                            CallT(SVar("left_match_0_0"), [], [])
                                                          , Seq(
                                                              Match(Var("s_1"))
                                                            , Seq(
                                                                Build(Var("m_0"))
                                                              , Build(
                                                                  Anno(
                                                                    Op("", [Var("r_1"), Var("s_1")])
                                                                  , Op("Nil", [])
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      , Id
                                      , Scope(
                                          ["n_11", "o_11", "p_11", "t_1", "o_0", "u_1", "n_0"]
                                        , Seq(
                                            Match(
                                              Anno(
                                                Op(
                                                  ""
                                                , [ Var("n_11")
                                                  , Anno(
                                                      Op("Cons", [Var("o_11"), Var("p_11")])
                                                    , Wld
                                                    )
                                                  ]
                                                )
                                              , Wld
                                              )
                                            )
                                          , Seq(
                                              Match(Var("o_0"))
                                            , Seq(
                                                Match(Var("n_0"))
                                              , Seq(
                                                  Build(Var("n_11"))
                                                , Seq(
                                                    CallT(
                                                      SVar("at_end_1_0")
                                                    , [ Build(
                                                          Anno(
                                                            Op(
                                                              "Cons"
                                                            , [Var("o_11"), Anno(Op("Nil", []), Op("Nil", []))]
                                                            )
                                                          , Op("Nil", [])
                                                          )
                                                        )
                                                      ]
                                                    , []
                                                    )
                                                  , Seq(
                                                      Match(Var("u_1"))
                                                    , Seq(
                                                        Build(Var("n_0"))
                                                      , Seq(
                                                          Build(
                                                            Anno(
                                                              Op("", [Var("u_1"), Var("p_11")])
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        , Seq(
                                                            CallT(SVar("i_86"), [], [])
                                                          , Seq(
                                                              Match(Var("t_1"))
                                                            , Seq(Build(Var("o_0")), Build(Var("t_1")))
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                ]
                              , CallT(SVar("i_86"), [], [])
                              )
                            , CallT(
                                SVar("_2_0")
                              , [ CallT(SVar("implode_string_0_0"), [], [])
                                , CallT(SVar("implode_string_0_0"), [], [])
                                ]
                              , []
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "split_after_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("split-after-test"), Op("Nil", [])))
            , CallT(SVar("split_after_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("barfoofnord"), Op("Nil", []))
                    , Anno(Str("foo"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("barfoo"), Op("Nil", []))
                    , Anno(Str("fnord"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "split_before_0_0"
        , []
        , []
        , Scope(
            ["y_10", "z_10", "a_11", "b_11"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_10"), Var("y_10")])
                , Wld
                )
              )
            , Seq(
                Build(Var("y_10"))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , Seq(
                    Match(Var("a_11"))
                  , Seq(
                      Build(Var("z_10"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("b_11"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Op("Nil", []), Op("Nil", [])), Var("b_11")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              Let(
                                [ SDefT(
                                    "h_86"
                                  , []
                                  , []
                                  , GuardedLChoice(
                                      Scope(
                                        ["c_11", "d_11", "p_0"]
                                      , Seq(
                                          Match(
                                            As(
                                              Var("c_11")
                                            , Anno(Op("", [Wld, Var("d_11")]), Wld)
                                            )
                                          )
                                        , Seq(
                                            Match(Var("p_0"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op("", [Var("d_11"), Var("a_11")])
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                CallT(SVar("left_match_0_0"), [], [])
                                              , Seq(Build(Var("p_0")), Build(Var("c_11")))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    , Id
                                    , Scope(
                                        ["e_11", "f_11", "g_11", "o_1", "r_0", "q_1", "q_0"]
                                      , Seq(
                                          Match(
                                            Anno(
                                              Op(
                                                ""
                                              , [ Var("e_11")
                                                , Anno(
                                                    Op("Cons", [Var("f_11"), Var("g_11")])
                                                  , Wld
                                                  )
                                                ]
                                              )
                                            , Wld
                                            )
                                          )
                                        , Seq(
                                            Match(Var("r_0"))
                                          , Seq(
                                              Match(Var("q_0"))
                                            , Seq(
                                                Build(Var("e_11"))
                                              , Seq(
                                                  CallT(
                                                    SVar("at_end_1_0")
                                                  , [ Build(
                                                        Anno(
                                                          Op(
                                                            "Cons"
                                                          , [Var("f_11"), Anno(Op("Nil", []), Op("Nil", []))]
                                                          )
                                                        , Op("Nil", [])
                                                        )
                                                      )
                                                    ]
                                                  , []
                                                  )
                                                , Seq(
                                                    Match(Var("q_1"))
                                                  , Seq(
                                                      Build(Var("q_0"))
                                                    , Seq(
                                                        Build(
                                                          Anno(
                                                            Op("", [Var("q_1"), Var("g_11")])
                                                          , Op("Nil", [])
                                                          )
                                                        )
                                                      , Seq(
                                                          CallT(SVar("h_86"), [], [])
                                                        , Seq(
                                                            Match(Var("o_1"))
                                                          , Seq(Build(Var("r_0")), Build(Var("o_1")))
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                ]
                              , CallT(SVar("h_86"), [], [])
                              )
                            , CallT(
                                SVar("_2_0")
                              , [ CallT(SVar("implode_string_0_0"), [], [])
                                , CallT(SVar("implode_string_0_0"), [], [])
                                ]
                              , []
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "split_before_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("split-before-test"), Op("Nil", [])))
            , CallT(SVar("split_before_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("barfoofnord"), Op("Nil", []))
                    , Anno(Str("foo"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("bar"), Op("Nil", []))
                    , Anno(Str("foofnord"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "split_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("split_before_test_0_0"), [], [])
          , Seq(
              CallT(SVar("split_after_test_0_0"), [], [])
            , CallT(SVar("split_at_dot_test_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "q_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "r_90"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("q_90"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("r_90"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("r_90"), [], [])
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "k_89"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "l_89"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("k_89"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("l_89"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("l_89"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "t_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["m_17", "j_5", "s_0"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("t_90"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Id, Match(Var("m_17"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("s_0"))
              , Seq(
                  Match(Var("j_5"))
                , Seq(
                    Build(Var("s_0"))
                  , Build(
                      Anno(
                        Op("", [Var("j_5"), Var("m_17")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_1_0"
        , [ VarDec(
              "v_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            GuardedLChoice(
              CallT(
                SVar("split_fetch_1_0")
              , [CallT(SVar("v_90"), [], [])]
              , []
              )
            , Id
            , Scope(
                ["l_5", "t_0"]
              , Seq(
                  Match(Var("t_0"))
                , Seq(
                    Match(Var("l_5"))
                  , Seq(
                      Build(Var("t_0"))
                    , Build(
                        Anno(
                          Op(
                            ""
                          , [Var("l_5"), Anno(Op("Nil", []), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              )
            )
          , GuardedLChoice(
              Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Op("Nil", []), Wld)
                      , Anno(Op("Nil", []), Wld)
                      ]
                    )
                  , Wld
                  )
                )
              , Build(Anno(Op("Nil", []), Op("Nil", [])))
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["r_17"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          ""
                        , [ As(
                              Var("r_17")
                            , Anno(Op("Cons", [Wld, Wld]), Wld)
                            )
                          , Anno(Op("Nil", []), Wld)
                          ]
                        )
                      , Wld
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [Var("r_17"), Anno(Op("Nil", []), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["s_17", "m_5", "u_0"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , As(
                                Var("s_17")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("u_0"))
                      , Seq(
                          Build(Var("s_17"))
                        , Seq(
                            CallT(
                              SVar("list_tokenize_1_0")
                            , [CallT(SVar("v_90"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("m_5"))
                            , Seq(Build(Var("u_0")), Build(Var("m_5")))
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["t_17", "u_17", "n_5", "v_0"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ As(
                                Var("t_17")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            , As(
                                Var("u_17")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("v_0"))
                      , Seq(
                          Build(Var("u_17"))
                        , Seq(
                            CallT(
                              SVar("list_tokenize_1_0")
                            , [CallT(SVar("v_90"), [], [])]
                            , []
                            )
                          , Seq(
                              Match(Var("n_5"))
                            , Seq(
                                Build(Var("v_0"))
                              , Build(
                                  Anno(
                                    Op("Cons", [Var("t_17"), Var("n_5")])
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_1_0"
        , [ VarDec(
              "m_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(
                SVar("list_tokenize_1_0")
              , [CallT(SVar("m_86"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_0_1"
        , []
        , [VarDec("x_12", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("string_tokenize_1_0")
          , [ Scope(
                ["y_12"]
              , Seq(
                  Match(Var("y_12"))
                , Seq(
                    Build(Var("x_12"))
                  , CallT(SVar("fetch_1_0"), [Match(Var("y_12"))], [])
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "string_tokenize_0_0"
        , []
        , []
        , Scope(
            ["z_12", "l_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_12"), Var("l_2")])
                , Wld
                )
              )
            , Seq(
                Build(Var("l_2"))
              , CallT(SVar("string_tokenize_0_1"), [], [Var("z_12")])
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("tokenize-test1"), Op("Nil", [])))
              , Scope(
                  ["a_0", "y_0"]
                , Seq(
                    Match(Var("y_0"))
                  , Seq(
                      Match(Var("a_0"))
                    , Seq(
                        Build(Var("y_0"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [Anno(Op("Nil", []), Op("Nil", [])), Var("a_0")]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("string_tokenize_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              , Build(Anno(Str("This should be one token"), Op("Nil", [])))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("This should be one token"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("tokenize-test2"), Op("Nil", [])))
                , Scope(
                    ["b_0", "a_1"]
                  , Seq(
                      Match(Var("a_1"))
                    , Seq(
                        Match(Var("b_0"))
                      , Seq(
                          Build(Var("a_1"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [ Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("32"), Op("Nil", []))
                                        , Anno(Op("Nil", []), Op("Nil", []))
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  , Var("b_0")
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , CallT(SVar("string_tokenize_0_0"), [], [])
                          )
                        )
                      )
                    )
                  )
                , Build(Anno(Str("   This should not   be one token  "), Op("Nil", [])))
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("This"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("should"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("not"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("be"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Str("one"), Op("Nil", []))
                                                , Anno(
                                                    Op(
                                                      "Cons"
                                                    , [ Anno(Str("token"), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  , Op("Nil", [])
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("tokenize-test3"), Op("Nil", [])))
                  , Scope(
                      ["c_0", "b_1"]
                    , Seq(
                        Match(Var("b_1"))
                      , Seq(
                          Match(Var("c_0"))
                        , Seq(
                            Build(Var("b_1"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("32"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("46"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    , Var("c_0")
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("string_tokenize_0_0"), [], [])
                            )
                          )
                        )
                      )
                    )
                  , Build(Anno(Str("   This should not   be one token  . "), Op("Nil", [])))
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("This"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("should"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str("not"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Str("be"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(Str("one"), Op("Nil", []))
                                                  , Anno(
                                                      Op(
                                                        "Cons"
                                                      , [ Anno(Str("token"), Op("Nil", []))
                                                        , Anno(Op("Nil", []), Op("Nil", []))
                                                        ]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("tokenize-test4"), Op("Nil", [])))
                    , Scope(
                        ["d_0", "c_1"]
                      , Seq(
                          Match(Var("c_1"))
                        , Seq(
                            Match(Var("d_0"))
                          , Seq(
                              Build(Var("c_1"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [ Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Int("32"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(Int("46"), Op("Nil", []))
                                                  , Anno(Op("Nil", []), Op("Nil", []))
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      , Var("d_0")
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , CallT(SVar("string_tokenize_0_0"), [], [])
                              )
                            )
                          )
                        )
                      )
                    , Build(Anno(Str(""), Op("Nil", [])))
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    ]
                  , []
                  )
                , CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("tokenize-test5"), Op("Nil", [])))
                    , Scope(
                        ["e_0", "d_1"]
                      , Seq(
                          Match(Var("d_1"))
                        , Seq(
                            Match(Var("e_0"))
                          , Seq(
                              Build(Var("d_1"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [ Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Int("32"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(Int("46"), Op("Nil", []))
                                                  , Anno(Op("Nil", []), Op("Nil", []))
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      , Var("e_0")
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , CallT(SVar("string_tokenize_0_0"), [], [])
                              )
                            )
                          )
                        )
                      )
                    , Build(Anno(Str("    "), Op("Nil", [])))
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    ]
                  , []
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_gt_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [ CallT(
                  SVar("_2_0")
                , [ CallT(SVar("explode_string_0_0"), [], [])
                  , CallT(SVar("explode_string_0_0"), [], [])
                  ]
                , []
                )
              ]
            , []
            )
          , Seq(
              CallT(SVar("strcasecmp_0_0"), [], [])
            , Match(Anno(Int("1"), Wld))
            )
          )
        )
      , SDefT(
          "string_sort_desc_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("map_1_0")
            , [CallT(SVar("explode_string_0_0"), [], [])]
            , []
            )
          , Seq(
              CallT(
                SVar("qsort_1_0")
              , [CallT(SVar("string_gt_0_0"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "case_char_1_0"
        , [ VarDec(
              "t_85"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("to_upper_0_0"), [], [])
              , CallT(SVar("to_upper_0_0"), [], [])
              ]
            , []
            )
          , CallT(SVar("t_85"), [], [])
          )
        )
      , SDefT(
          "strcasecmp_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "e_86"
              , []
              , []
              , GuardedLChoice(
                  Scope(
                    ["n_10", "o_10", "p_10", "q_10", "l_1", "f_1", "e_1"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(
                                Op("Cons", [Var("n_10"), Var("o_10")])
                              , Wld
                              )
                            , Anno(
                                Op("Cons", [Var("p_10"), Var("q_10")])
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Seq(
                          Match(Var("e_1"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("n_10"), Var("p_10")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(
                                SVar("case_char_1_0")
                              , [CallT(SVar("eq_0_0"), [], [])]
                              , []
                              )
                            , Build(Var("e_1"))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("f_1"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("o_10"), Var("q_10")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("e_86"), [], [])
                            , Seq(
                                Match(Var("l_1"))
                              , Seq(Build(Var("f_1")), Build(Var("l_1")))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , GuardedLChoice(
                    Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , Anno(Op("Nil", []), Wld)
                            ]
                          )
                        , Wld
                        )
                      )
                    , Build(Anno(Int("0"), Op("Nil", [])))
                    )
                  , Id
                  , GuardedLChoice(
                      Scope(
                        ["r_10", "s_10", "g_1"]
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("Cons", [Var("r_10"), Wld]), Wld)
                                , Anno(Op("Cons", [Var("s_10"), Wld]), Wld)
                                ]
                              )
                            , Wld
                            )
                          )
                        , Seq(
                            Match(Var("g_1"))
                          , Seq(
                              Build(
                                Anno(
                                  Op("", [Var("r_10"), Var("s_10")])
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(
                                  SVar("case_char_1_0")
                                , [CallT(SVar("lt_0_0"), [], [])]
                                , []
                                )
                              , Seq(
                                  Build(Var("g_1"))
                                , Build(Anno(Int("-1"), Op("Nil", [])))
                                )
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("Nil", []), Wld)
                                , Anno(Op("Cons", [Wld, Wld]), Wld)
                                ]
                              )
                            , Wld
                            )
                          )
                        , Build(Anno(Int("-1"), Op("Nil", [])))
                        )
                      , Id
                      , Build(Anno(Int("1"), Op("Nil", [])))
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("e_86"), [], [])
          )
        )
      , SDefT(
          "string_lt_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [ CallT(
                  SVar("_2_0")
                , [ CallT(SVar("explode_string_0_0"), [], [])
                  , CallT(SVar("explode_string_0_0"), [], [])
                  ]
                , []
                )
              ]
            , []
            )
          , Seq(
              CallT(SVar("strcasecmp_0_0"), [], [])
            , Match(Anno(Int("-1"), Wld))
            )
          )
        )
      , SDefT(
          "filter_1_0"
        , [ VarDec(
              "s_100"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("Nil_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(
                SVar("Cons_2_0")
              , [ CallT(SVar("s_100"), [], [])
                , CallT(
                    SVar("filter_1_0")
                  , [CallT(SVar("s_100"), [], [])]
                  , []
                  )
                ]
              , []
              )
            , Id
            , Scope(
                ["z_130"]
              , Seq(
                  Match(
                    Anno(Op("Cons", [Wld, Var("z_130")]), Wld)
                  )
                , Seq(
                    Build(Var("z_130"))
                  , CallT(
                      SVar("filter_1_0")
                    , [CallT(SVar("s_100"), [], [])]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "qsort_1_0"
        , [ VarDec(
              "h_7"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              [ "q_47"
              , "r_47"
              , "s_47"
              , "t_47"
              , "n_130"
              , "d_2"
              , "o_130"
              , "p_130"
              , "c_2"
              , "x_1"
              ]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("s_47"), Var("r_47")])
                  , Wld
                  )
                )
              , Seq(
                  Scope(
                    ["w_1"]
                  , Seq(
                      Match(Var("w_1"))
                    , Seq(
                        Build(Var("r_47"))
                      , Seq(
                          CallT(
                            SVar("filter_1_0")
                          , [ Scope(
                                ["j_1", "l_130", "i_1"]
                              , Seq(
                                  Match(Var("j_1"))
                                , Seq(
                                    Match(Var("i_1"))
                                  , Seq(
                                      Match(Var("l_130"))
                                    , Seq(
                                        Build(Var("i_1"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op("", [Var("l_130"), Var("s_47")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , Seq(
                                            CallT(SVar("h_7"), [], [])
                                          , Build(Var("j_1"))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Match(Var("q_47"))
                          , Seq(
                              Build(Var("r_47"))
                            , Seq(
                                CallT(
                                  SVar("filter_1_0")
                                , [ Scope(
                                      ["v_1", "m_130", "k_1"]
                                    , Seq(
                                        Match(Var("v_1"))
                                      , Seq(
                                          Match(Var("k_1"))
                                        , Seq(
                                            Match(Var("m_130"))
                                          , Seq(
                                              Build(Var("k_1"))
                                            , Seq(
                                                Build(
                                                  Anno(
                                                    Op("", [Var("m_130"), Var("s_47")])
                                                  , Op("Nil", [])
                                                  )
                                                )
                                              , Seq(
                                                  GuardedLChoice(CallT(SVar("h_7"), [], []), Fail, Id)
                                                , Build(Var("v_1"))
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  ]
                                , []
                                )
                              , Seq(Match(Var("t_47")), Build(Var("w_1")))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Seq(
                    Match(Var("d_2"))
                  , Seq(
                      Seq(
                        Seq(
                          Seq(
                            Match(Var("x_1"))
                          , Seq(
                              Build(Var("q_47"))
                            , Seq(
                                CallT(
                                  SVar("qsort_1_0")
                                , [CallT(SVar("h_7"), [], [])]
                                , []
                                )
                              , Seq(Match(Var("o_130")), Build(Var("x_1")))
                              )
                            )
                          )
                        , Seq(
                            Match(Var("c_2"))
                          , Seq(
                              Build(Var("t_47"))
                            , Seq(
                                CallT(
                                  SVar("qsort_1_0")
                                , [CallT(SVar("h_7"), [], [])]
                                , []
                                )
                              , Seq(
                                  Match(Var("p_130"))
                                , Seq(
                                    Build(Var("c_2"))
                                  , Seq(
                                      Build(
                                        Anno(
                                          Op(
                                            "Cons"
                                          , [ Var("o_130")
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(
                                                      Op(
                                                        "Cons"
                                                      , [Var("s_47"), Anno(Op("Nil", []), Op("Nil", []))]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  , Anno(
                                                      Op(
                                                        "Cons"
                                                      , [Var("p_130"), Anno(Op("Nil", []), Op("Nil", []))]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      )
                                    , Seq(
                                        CallT(SVar("concat_0_0"), [], [])
                                      , Match(Var("n_130"))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , Build(Var("d_2"))
                      )
                    , Build(Var("n_130"))
                    )
                  )
                )
              )
            )
          , Id
          , Seq(
              Match(Anno(Op("Nil", []), Wld))
            , Build(Anno(Op("Nil", []), Op("Nil", [])))
            )
          )
        )
      , SDefT(
          "string_sort_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("map_1_0")
            , [CallT(SVar("explode_string_0_0"), [], [])]
            , []
            )
          , Seq(
              CallT(
                SVar("qsort_1_0")
              , [CallT(SVar("string_lt_0_0"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_sort_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("string-sort-test-a"), Op("Nil", [])))
              , CallT(SVar("string_sort_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("De"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("db"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("Cb"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("ac"), Op("Nil", []))
                                        , Anno(Op("Nil", []), Op("Nil", []))
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("ac"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("Cb"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("db"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("De"), Op("Nil", []))
                                        , Anno(Op("Nil", []), Op("Nil", []))
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("string-sort-test-b"), Op("Nil", [])))
                , CallT(SVar("string_sort_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("2001"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("2000"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("1999"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("1998"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("1998"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("1999"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("2000"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("2001"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("string-sort-test-c"), Op("Nil", [])))
                , CallT(SVar("string_sort_desc_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("2001"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("2000"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("1999"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("1998"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("2001"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("2000"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("1999"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("1998"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "UnEscape_carriage_return_0_0"
        , []
        , []
        , Scope(
            ["y_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("114"), Wld), Var("y_13")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("13"), Op("Nil", [])), Var("y_13")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_tab_0_0"
        , []
        , []
        , Scope(
            ["a_14"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("116"), Wld), Var("a_14")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("9"), Op("Nil", [])), Var("a_14")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_linefeed_0_0"
        , []
        , []
        , Scope(
            ["z_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("110"), Wld), Var("z_13")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("10"), Op("Nil", [])), Var("z_13")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_backslash_0_0"
        , []
        , []
        , Scope(
            ["x_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("92"), Wld), Var("x_13")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("92"), Op("Nil", [])), Var("x_13")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_double_quote_0_0"
        , []
        , []
        , Scope(
            ["v_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("34"), Wld), Var("v_13")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("34"), Op("Nil", [])), Var("v_13")]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("UnEscape_double_quote_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(SVar("UnEscape_backslash_0_0"), [], [])
            , Id
            , GuardedLChoice(
                CallT(SVar("UnEscape_linefeed_0_0"), [], [])
              , Id
              , GuardedLChoice(
                  CallT(SVar("UnEscape_tab_0_0"), [], [])
                , Id
                , CallT(SVar("UnEscape_carriage_return_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "s_103"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("s_103"), [], []), Id, Id)
        )
      , SDefT(
          "unescape_chars_1_0"
        , [ VarDec(
              "k_87"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "l_87"
              , []
              , []
              , Seq(
                  CallT(
                    SVar("try_1_0")
                  , [CallT(SVar("k_87"), [], [])]
                  , []
                  )
                , GuardedLChoice(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("l_87"), [], [])]
                    , []
                    )
                  , Id
                  , CallT(SVar("Nil_0_0"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("l_87"), [], [])
          )
        )
      , SDefT(
          "unescape_chars_0_0"
        , []
        , []
        , CallT(
            SVar("unescape_chars_1_0")
          , [CallT(SVar("UnEscape_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "unescape_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("unescape_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "unescape_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("unescape-test1"), Op("Nil", [])))
              , CallT(
                  SVar("Cons_2_0")
                , [ CallT(SVar("unescape_0_0"), [], [])
                  , CallT(SVar("Nil_0_0"), [], [])
                  ]
                , []
                )
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("\\\"ab\\\\c"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("\"ab\\c"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("unescape-test2"), Op("Nil", [])))
                , CallT(
                    SVar("Cons_2_0")
                  , [ Seq(
                        CallT(SVar("un_double_quote_0_0"), [], [])
                      , CallT(SVar("unescape_0_0"), [], [])
                      )
                    , CallT(SVar("Nil_0_0"), [], [])
                    ]
                  , []
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("\" \\\\\\n\\t\""), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str(" \\\n\t"), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("unescape-test3"), Op("Nil", [])))
                  , CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("unescape_0_0"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(" \\\\\\na\\b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(" \\\na\\b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("unescape-test4"), Op("Nil", [])))
                  , CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("unescape_0_0"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("\" \\\\\\n\\\\t\""), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("\" \\\n\\t\""), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "Cify_1_0"
        , [ VarDec(
              "p_1"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              ["k_13", "h_3", "e_2"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("92"), Wld), Var("k_13")]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("e_2"))
                , Seq(
                    Build(Var("k_13"))
                  , Seq(
                      CallT(SVar("p_1"), [], [])
                    , Seq(
                        Match(Var("h_3"))
                      , Seq(
                          Build(Var("e_2"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("95"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("98"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Anno(Int("95"), Op("Nil", [])), Var("h_3")]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["j_13", "g_3", "f_2"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        "Cons"
                      , [Anno(Int("34"), Wld), Var("j_13")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("f_2"))
                  , Seq(
                      Build(Var("j_13"))
                    , Seq(
                        CallT(SVar("p_1"), [], [])
                      , Seq(
                          Match(Var("g_3"))
                        , Seq(
                            Build(Var("f_2"))
                          , Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("95"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("113"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [Anno(Int("95"), Op("Nil", [])), Var("g_3")]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["i_13", "f_3", "g_2"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("95"), Wld), Var("i_13")]
                        )
                      , Wld
                      )
                    )
                  , Seq(
                      Match(Var("g_2"))
                    , Seq(
                        Build(Var("i_13"))
                      , Seq(
                          CallT(SVar("p_1"), [], [])
                        , Seq(
                            Match(Var("f_3"))
                          , Seq(
                              Build(Var("g_2"))
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("95"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [Anno(Int("95"), Op("Nil", [])), Var("f_3")]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["h_13", "z_2", "h_2"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("45"), Wld), Var("h_13")]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("h_2"))
                      , Seq(
                          Build(Var("h_13"))
                        , Seq(
                            CallT(SVar("p_1"), [], [])
                          , Seq(
                              Match(Var("z_2"))
                            , Seq(
                                Build(Var("h_2"))
                              , Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("95"), Op("Nil", [])), Var("z_2")]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["g_13", "y_2", "k_2"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("39"), Wld), Var("g_13")]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("k_2"))
                      , Seq(
                          Build(Var("g_13"))
                        , Seq(
                            CallT(SVar("p_1"), [], [])
                          , Seq(
                              Match(Var("y_2"))
                            , Seq(
                                Build(Var("k_2"))
                              , Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("95"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Int("112"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [Anno(Int("95"), Op("Nil", [])), Var("y_2")]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "escape_1_0"
        , [ VarDec(
              "f_87"
            , FunType(
                [ FunType(
                    [ConstType(Sort("List", [Sort("String", [])]))]
                  , ConstType(Sort("List", [Sort("String", [])]))
                  )
                , ConstType(Sort("List", [Sort("String", [])]))
                ]
              , ConstType(Sort("List", [Sort("String", [])]))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "g_87"
                  , []
                  , []
                  , GuardedLChoice(
                      CallT(
                        SVar("f_87")
                      , [CallT(SVar("g_87"), [], [])]
                      , []
                      )
                    , Id
                    , GuardedLChoice(
                        CallT(
                          SVar("Cons_2_0")
                        , [Id, CallT(SVar("g_87"), [], [])]
                        , []
                        )
                      , Id
                      , CallT(SVar("Nil_0_0"), [], [])
                      )
                    )
                  )
                ]
              , CallT(SVar("g_87"), [], [])
              )
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "cify_0_0"
        , []
        , []
        , CallT(
            SVar("escape_1_0")
          , [CallT(SVar("Cify_1_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "Escape_carriage_return_0_0"
        , []
        , []
        , Scope(
            ["u_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("13"), Wld), Var("u_13")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("114"), Op("Nil", [])), Var("u_13")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_linefeed_0_0"
        , []
        , []
        , Scope(
            ["t_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("10"), Wld), Var("t_13")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("110"), Op("Nil", [])), Var("t_13")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_backslash_0_0"
        , []
        , []
        , Scope(
            ["s_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("92"), Wld), Var("s_13")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("92"), Op("Nil", [])), Var("s_13")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_double_quote_0_0"
        , []
        , []
        , Scope(
            ["q_13"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("34"), Wld), Var("q_13")]
                  )
                , Wld
                )
              )
            , Build(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Op("Nil", []))
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("34"), Op("Nil", [])), Var("q_13")]
                        )
                      , Op("Nil", [])
                      )
                    ]
                  )
                , Op("Nil", [])
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("Escape_double_quote_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(SVar("Escape_backslash_0_0"), [], [])
            , Id
            , GuardedLChoice(
                CallT(SVar("Escape_linefeed_0_0"), [], [])
              , Id
              , CallT(SVar("Escape_carriage_return_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "escape_chars_1_0"
        , [ VarDec(
              "i_87"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "j_87"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(SVar("i_87"), [], [])
                  , CallT(
                      SVar("Cons_2_0")
                    , [ Id
                      , CallT(
                          SVar("Cons_2_0")
                        , [Id, CallT(SVar("j_87"), [], [])]
                        , []
                        )
                      ]
                    , []
                    )
                  )
                , Id
                , GuardedLChoice(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("j_87"), [], [])]
                    , []
                    )
                  , Id
                  , CallT(SVar("Nil_0_0"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("j_87"), [], [])
          )
        )
      , SDefT(
          "escape_chars_0_0"
        , []
        , []
        , CallT(
            SVar("escape_chars_1_0")
          , [CallT(SVar("Escape_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "escape_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("escape_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "escape_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("escape-test1"), Op("Nil", [])))
              , CallT(SVar("escape_0_0"), [], [])
              , Build(Anno(Str("\"ab\\c"), Op("Nil", [])))
              , Build(Anno(Str("\\\"ab\\\\c"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("escape-test2"), Op("Nil", [])))
              , CallT(SVar("cify_0_0"), [], [])
              , Build(Anno(Str("a-b_c'"), Op("Nil", [])))
              , Build(Anno(Str("a_b__c_p_"), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "escape_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("escape_test_0_0"), [], [])
          , CallT(SVar("unescape_test_0_0"), [], [])
          )
        )
      , SDefT(
          "leq_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("gt_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "comp_comp_2_0"
        , [ VarDec(
              "y_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_19", "r_19", "s_19", "n_2"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("q_19"), Var("r_19"), Var("s_19")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("n_2"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("q_19"), Var("r_19")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("y_90"), [], [])
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("r_19"), Var("s_19")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("z_90"), [], [])
                      , Build(Var("n_2"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "leq_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "is_lower_0_0"
        , []
        , []
        , Scope(
            ["p_2", "j_0", "o_2"]
          , Seq(
              Match(Var("p_2"))
            , Seq(
                Seq(
                  Match(Var("o_2"))
                , Seq(
                    Match(Var("j_0"))
                  , Seq(
                      Build(Var("o_2"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("97"), Op("Nil", []))
                              , Var("j_0")
                              , Anno(Int("122"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("p_2"))
              )
            )
          )
        )
      , SDefT(
          "to_upper_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("is_lower_0_0"), [], [])
          , Scope(
              ["l_0", "q_2"]
            , Seq(
                Match(Var("q_2"))
              , Seq(
                  Match(Var("l_0"))
                , Seq(
                    Build(Var("q_2"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("l_0"), Anno(Int("32"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("subt_0_0"), [], [])
                    )
                  )
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "i_90"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "j_90"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("i_90"), [], [])
                    , CallT(SVar("j_90"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("j_90"), [], [])
          )
        )
      , SDefT(
          "upper_case_chars_0_0"
        , []
        , []
        , CallT(
            SVar("map_1_0")
          , [CallT(SVar("to_upper_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "upper_case_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("upper_case_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "upper_case_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("upper-case-test"), Op("Nil", [])))
            , CallT(SVar("upper_case_0_0"), [], [])
            , Build(Anno(Str("foOBaR"), Op("Nil", [])))
            , Build(Anno(Str("FOOBAR"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("copy-char-test"), Op("Nil", [])))
            , CallT(SVar("copy_char_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Int("3"), Op("Nil", []))
                    , Anno(Int("32"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Str("   "), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "left_match_0_0"
        , []
        , []
        , Seq(
            Let(
              [ SDefT(
                  "b_86"
                , []
                , []
                , GuardedLChoice(
                    Scope(
                      ["z_9", "a_10", "b_10", "h_1", "s_2"]
                    , Seq(
                        Match(
                          Anno(
                            Op(
                              ""
                            , [ Anno(
                                  Op("Cons", [Var("a_10"), Var("z_9")])
                                , Wld
                                )
                              , Anno(
                                  Op("Cons", [Var("a_10"), Var("b_10")])
                                , Wld
                                )
                              ]
                            )
                          , Wld
                          )
                        )
                      , Seq(
                          Match(Var("s_2"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("z_9"), Var("b_10")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("b_86"), [], [])
                            , Seq(
                                Match(Var("h_1"))
                              , Seq(Build(Var("s_2")), Build(Var("h_1")))
                              )
                            )
                          )
                        )
                      )
                    )
                  , Id
                  , CallT(
                      SVar("_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  )
                )
              ]
            , CallT(SVar("b_86"), [], [])
            )
          , CallT(SVar("Fst_0_0"), [], [])
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["z_51"]
          , Match(
              Anno(
                Op("", [Var("z_51"), Var("z_51")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "is_substring_1_0"
        , [ VarDec(
              "j_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_11", "r_11"]
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                Match(Var("q_11"))
              , Seq(
                  CallT(SVar("j_86"), [], [])
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , Seq(
                      Match(Var("r_11"))
                    , GuardedLChoice(
                        Seq(
                          Build(
                            Anno(
                              Op("", [Var("r_11"), Var("q_11")])
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("eq_0_0"), [], [])
                        )
                      , Id
                      , Let(
                          [ SDefT(
                              "k_86"
                            , []
                            , []
                            , Scope(
                                ["s_11", "t_11"]
                              , Seq(
                                  Match(
                                    As(
                                      Var("s_11")
                                    , Anno(Op("Cons", [Wld, Var("t_11")]), Wld)
                                    )
                                  )
                                , GuardedLChoice(
                                    Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("s_11"), Var("r_11")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , CallT(SVar("left_match_0_0"), [], [])
                                    )
                                  , Id
                                  , Seq(
                                      Build(Var("t_11"))
                                    , CallT(SVar("k_86"), [], [])
                                    )
                                  )
                                )
                              )
                            )
                          ]
                        , Seq(
                            Build(Var("q_11"))
                          , CallT(SVar("k_86"), [], [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_substring_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("is-substring-test"), Op("Nil", [])))
            , CallT(
                SVar("is_substring_1_0")
              , [Build(Anno(Str("foo"), Op("Nil", [])))]
              , []
              )
            , Build(Anno(Str("barfoofnord"), Op("Nil", [])))
            , Id
            ]
          , []
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["e_14"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("e_14"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("e_14"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "while_not_2_0"
        , [ VarDec(
              "h_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "i_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "j_105"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("h_105"), [], [])
                , Id
                , Seq(
                    CallT(SVar("i_105"), [], [])
                  , CallT(SVar("j_105"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("j_105"), [], [])
          )
        )
      , SDefT(
          "for_3_0"
        , [ VarDec(
              "k_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("k_105"), [], [])
          , CallT(
              SVar("while_not_2_0")
            , [ CallT(SVar("l_105"), [], [])
              , CallT(SVar("m_105"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "copy_0_0"
        , []
        , []
        , CallT(
            SVar("for_3_0")
          , [ Scope(
                ["t_14", "u_14"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("t_14"), Var("u_14")])
                    , Wld
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Var("t_14")
                        , Var("u_14")
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                )
              )
            , Scope(
                ["v_14", "w_14"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("0"), Wld), Var("v_14"), Var("w_14")]
                      )
                    , Wld
                    )
                  )
                , Build(Var("w_14"))
                )
              )
            , Scope(
                ["x_14", "y_14", "z_14", "u_3", "u_2", "t_2"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("x_14"), Var("y_14"), Var("z_14")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Seq(
                      Match(Var("t_2"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("x_14"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("geq_0_0"), [], [])
                        , Build(Var("t_2"))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("u_2"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("x_14"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("subt_0_0"), [], [])
                        , Seq(
                            Match(Var("u_3"))
                          , Seq(
                              Build(Var("u_2"))
                            , Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Var("u_3")
                                    , Var("y_14")
                                    , Anno(
                                        Op("Cons", [Var("y_14"), Var("z_14")])
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("copy_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["u_20", "v_20", "x_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("u_20"), Var("v_20")])
                , Wld
                )
              )
            , Seq(
                Match(Var("x_2"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("u_20"), Var("v_20")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("u_20"), Var("v_20")])
                  )
                , Build(Var("x_2"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["a_21"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("a_21"), Var("a_21")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "pos_0_0"
        , []
        , []
        , Scope(
            ["b_3", "o_7", "a_3"]
          , Seq(
              Match(Var("b_3"))
            , Seq(
                Seq(
                  Match(Var("a_3"))
                , Seq(
                    Match(Var("o_7"))
                  , Seq(
                      Build(Var("a_3"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("o_7"), Anno(Int("0"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("geq_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("b_3"))
              )
            )
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["a_20", "b_20"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("a_20"), Var("b_20")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("a_20"), Var("b_20")])
              , Id
              , PrimT("SSL_subtr", [], [Var("a_20"), Var("b_20")])
              )
            )
          )
        )
      , SDefT(
          "string_length_0_0"
        , []
        , []
        , CallT(SVar("strlen_0_0"), [], [])
        )
      , SDefT(
          "align_helper_0_2"
        , []
        , [ VarDec("v_12", ConstType(Sort("ATerm", [])))
          , VarDec("w_12", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["i_2", "c_3"]
          , Seq(
              CallT(SVar("string_length_0_0"), [], [])
            , Seq(
                Match(Var("c_3"))
              , Seq(
                  Match(Var("i_2"))
                , Seq(
                    Build(Var("c_3"))
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("w_12"), Var("i_2")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("subt_0_0"), [], [])
                      , GuardedLChoice(
                          Scope(
                            ["d_3"]
                          , Seq(
                              Match(Var("d_3"))
                            , Seq(
                                CallT(SVar("pos_0_0"), [], [])
                              , Build(Var("d_3"))
                              )
                            )
                          )
                        , Scope(
                            ["j_2", "e_3"]
                          , Seq(
                              Match(Var("e_3"))
                            , Seq(
                                Match(Var("j_2"))
                              , Seq(
                                  Build(Var("e_3"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op("", [Var("j_2"), Var("v_12")])
                                      , Op("Nil", [])
                                      )
                                    )
                                  , CallT(SVar("copy_char_0_0"), [], [])
                                  )
                                )
                              )
                            )
                          )
                        , Build(Anno(Str(""), Op("Nil", [])))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "align_right_0_0"
        , []
        , []
        , Scope(
            ["e_12", "f_12", "g_12", "h_12", "b_2", "j_3", "i_3"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("f_12"), Var("e_12"), Var("g_12")]
                  )
                , Wld
                )
              )
            , Seq(
                Seq(
                  Match(Var("i_3"))
                , Seq(
                    Build(Var("e_12"))
                  , Seq(
                      CallT(
                        SVar("align_helper_0_2")
                      , []
                      , [Var("f_12"), Var("g_12")]
                      )
                    , Seq(Match(Var("h_12")), Build(Var("i_3")))
                    )
                  )
                )
              , Seq(
                  Match(Var("j_3"))
                , Seq(
                    Build(
                      Anno(
                        Op("", [Var("h_12"), Var("e_12")])
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("conc_strings_0_0"), [], [])
                    , Seq(
                        Match(Var("b_2"))
                      , Seq(Build(Var("j_3")), Build(Var("b_2")))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["o_46", "p_46", "q_46"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("o_46")
                        , Anno(
                            Op("Cons", [Var("q_46"), Var("p_46")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("q_46"))
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["m_46", "n_46"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("n_46"), Var("m_46")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Build(Var("n_46"))
            )
          )
        )
      , SDefT(
          "padd_with_1_0"
        , [ VarDec(
              "l_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_1", "z_1", "a_2", "m_3", "l_3"]
          , Seq(
              Scope(
                ["k_3"]
              , Seq(
                  Match(Var("k_3"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("l_86"), [], [])
                    , Seq(Match(Var("y_1")), Build(Var("k_3")))
                    )
                  )
                )
              )
            , Seq(
                Seq(
                  Seq(
                    Match(Var("l_3"))
                  , Seq(
                      CallT(SVar("Fst_0_0"), [], [])
                    , Seq(Match(Var("z_1")), Build(Var("l_3")))
                    )
                  )
                , Seq(
                    Match(Var("m_3"))
                  , Seq(
                      CallT(SVar("Snd_0_0"), [], [])
                    , Seq(
                        Match(Var("a_2"))
                      , Seq(
                          Build(Var("m_3"))
                        , Build(
                            Anno(
                              Op(
                                ""
                              , [Var("y_1"), Var("z_1"), Var("a_2")]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , CallT(SVar("align_right_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "padd_with_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("padd-with-test"), Op("Nil", [])))
            , CallT(
                SVar("padd_with_1_0")
              , [Build(Anno(Int("48"), Op("Nil", [])))]
              , []
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("42"), Op("Nil", []))
                    , Anno(Int("4"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Str("0042"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "is_quoted_chars_0_1"
        , []
        , [VarDec("c_13", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["n_3", "r_2"]
          , Seq(
              Match(Var("n_3"))
            , Seq(
                Seq(
                  Match(
                    Anno(
                      Op("Cons", [Var("c_13"), Var("r_2")])
                    , Wld
                    )
                  )
                , Seq(
                    Build(Var("r_2"))
                  , Seq(
                      CallT(SVar("last_0_0"), [], [])
                    , Match(Var("c_13"))
                    )
                  )
                )
              , Build(Var("n_3"))
              )
            )
          )
        )
      , SDefT(
          "is_quoted_0_1"
        , []
        , [VarDec("a_13", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["o_3"]
          , Seq(
              Match(Var("o_3"))
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  CallT(SVar("is_quoted_chars_0_1"), [], [Var("a_13")])
                , Build(Var("o_3"))
                )
              )
            )
          )
        )
      , SDefT(
          "is_double_quoted_0_0"
        , []
        , []
        , Scope(
            ["m_2", "p_3"]
          , Seq(
              Match(Var("p_3"))
            , Seq(
                Build(Anno(Int("34"), Op("Nil", [])))
              , Seq(
                  Match(Var("m_2"))
                , Seq(
                    Build(Var("p_3"))
                  , CallT(SVar("is_quoted_0_1"), [], [Var("m_2")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_double_quote_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("is-double-quote 1"), Op("Nil", [])))
              , CallT(SVar("is_double_quoted_0_0"), [], [])
              , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
              , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_and_fail_3_0")
              , [ Build(Anno(Str("is-double-quote 2"), Op("Nil", [])))
                , CallT(SVar("is_double_quoted_0_0"), [], [])
                , Build(Anno(Str("fnord"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ Build(Anno(Str("is-double-quote 3"), Op("Nil", [])))
                  , CallT(SVar("is_double_quoted_0_0"), [], [])
                  , Build(Anno(Str("\"fnord"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ Build(Anno(Str("is-double-quote 4"), Op("Nil", [])))
                    , CallT(SVar("is_double_quoted_0_0"), [], [])
                    , Build(Anno(Str(""), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("is-double-quote 5"), Op("Nil", [])))
                      , CallT(SVar("is_double_quoted_0_0"), [], [])
                      , Build(Anno(Str("\"\""), Op("Nil", [])))
                      , Build(Anno(Str("\"\""), Op("Nil", [])))
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("is-double-quote 6"), Op("Nil", [])))
                      , CallT(SVar("is_double_quoted_0_0"), [], [])
                      , Build(Anno(Str("\" \""), Op("Nil", [])))
                      , Build(Anno(Str("\" \""), Op("Nil", [])))
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "o_89"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "p_89"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  , CallT(SVar("o_89"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("p_89"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("p_89"), [], [])
          )
        )
      , SDefT(
          "init_0_0"
        , []
        , []
        , CallT(
            SVar("at_last_1_0")
          , [CallT(SVar("Tl_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["w_17"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("w_17")]), Wld)
              )
            , Build(Var("w_17"))
            )
          )
        )
      , SDefT(
          "Last_0_0"
        , []
        , []
        , Scope(
            ["x_17"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Var("x_17"), Anno(Op("Nil", []), Wld)]
                  )
                , Wld
                )
              )
            , Build(Var("x_17"))
            )
          )
        )
      , SDefT(
          "last_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "l_88"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Last_0_0"), [], [])
                , Id
                , Seq(
                    CallT(SVar("Tl_0_0"), [], [])
                  , CallT(SVar("l_88"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("l_88"), [], [])
          )
        )
      , SDefT(
          "Hd_0_0"
        , []
        , []
        , Scope(
            ["v_17"]
          , Seq(
              Match(
                Anno(Op("Cons", [Var("v_17"), Wld]), Wld)
              )
            , Build(Var("v_17"))
            )
          )
        )
      , SDefT(
          "unquote_chars_2_0"
        , [ VarDec(
              "r_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "s_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["r_3", "q_3"]
          , Seq(
              Seq(
                Match(Var("q_3"))
              , Seq(
                  CallT(SVar("Hd_0_0"), [], [])
                , Seq(
                    CallT(SVar("r_86"), [], [])
                  , Build(Var("q_3"))
                  )
                )
              )
            , Seq(
                Match(Var("r_3"))
              , Seq(
                  CallT(SVar("last_0_0"), [], [])
                , Seq(
                    CallT(SVar("s_86"), [], [])
                  , Seq(
                      Build(Var("r_3"))
                    , Seq(
                        CallT(SVar("Tl_0_0"), [], [])
                      , CallT(SVar("init_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "unquote_chars_1_0"
        , [ VarDec(
              "q_86"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("unquote_chars_2_0")
          , [ CallT(SVar("q_86"), [], [])
            , CallT(SVar("q_86"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "un_double_quote_chars_0_0"
        , []
        , []
        , CallT(
            SVar("unquote_chars_1_0")
          , [Match(Anno(Int("34"), Wld))]
          , []
          )
        )
      , SDefT(
          "un_double_quote_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("un_double_quote_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "un_double_quote_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("un-double-quote-test"), Op("Nil", [])))
            , CallT(SVar("un_double_quote_0_0"), [], [])
            , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
            , Build(Anno(Str("fnord"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "concat_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "f_89"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , Scope(
                    ["r_16", "s_16", "z_4", "s_3"]
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("r_16"), Var("s_16")])
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("s_3"))
                      , Seq(
                          Build(Var("r_16"))
                        , Seq(
                            CallT(
                              SVar("at_end_1_0")
                            , [Seq(
                                 Build(Var("s_16"))
                               , CallT(SVar("f_89"), [], [])
                               )]
                            , []
                            )
                          , Seq(
                              Match(Var("z_4"))
                            , Seq(Build(Var("s_3")), Build(Var("z_4")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("f_89"), [], [])
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "l_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_0", "w_0", "x_0", "i_4", "j_4"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("w_0"), Var("x_0")])
                , Var("z_0")
                )
              )
            , Seq(
                Build(Var("w_0"))
              , Seq(
                  CallT(SVar("l_77"), [], [])
                , Seq(
                    Match(Var("i_4"))
                  , Seq(
                      Build(Var("x_0"))
                    , Seq(
                        CallT(SVar("m_77"), [], [])
                      , Seq(
                          Match(Var("j_4"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("i_4"), Var("j_4")])
                            , Var("z_0")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_end_1_0"
        , [ VarDec(
              "i_89"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "j_89"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("j_89"), [], [])]
                  , []
                  )
                , Id
                , Seq(
                    CallT(SVar("Nil_0_0"), [], [])
                  , CallT(SVar("i_89"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("j_89"), [], [])
          )
        )
      , SDefT(
          "conc_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["o_16", "p_16", "x_4", "t_3"]
            , Seq(
                Match(
                  Anno(
                    Op("", [Var("o_16"), Var("p_16")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("t_3"))
                , Seq(
                    Build(Var("o_16"))
                  , Seq(
                      CallT(SVar("at_end_1_0"), [Build(Var("p_16"))], [])
                    , Seq(
                        Match(Var("x_4"))
                      , Seq(Build(Var("t_3")), Build(Var("x_4")))
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["q_16", "y_4", "v_3"]
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("q_16"))
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("v_3"))
                , Seq(
                    Build(Var("q_16"))
                  , Seq(
                      CallT(SVar("concat_0_0"), [], [])
                    , Seq(
                        Match(Var("y_4"))
                      , Seq(Build(Var("v_3")), Build(Var("y_4")))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "quote_chars_0_0"
        , []
        , []
        , Scope(
            ["e_13", "f_13", "v_2", "w_3"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_13"), Var("e_13")])
                , Wld
                )
              )
            , Seq(
                Match(Var("w_3"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op("Cons", [Var("f_13"), Var("e_13")])
                          , Op("Nil", [])
                          )
                        , Anno(
                            Op(
                              "Cons"
                            , [Var("f_13"), Anno(Op("Nil", []), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("conc_0_0"), [], [])
                  , Seq(
                      Match(Var("v_2"))
                    , Seq(Build(Var("w_3")), Build(Var("v_2")))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "single_quote_chars_0_0"
        , []
        , []
        , Scope(
            ["w_2", "x_3"]
          , Seq(
              Match(Var("x_3"))
            , Seq(
                Match(Var("w_2"))
              , Seq(
                  Build(Var("x_3"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Anno(Int("39"), Op("Nil", [])), Var("w_2")]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("quote_chars_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "m_87"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("m_87"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "single_quote_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("single_quote_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "single_quote_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("single-quote-test"), Op("Nil", [])))
            , CallT(SVar("single_quote_0_0"), [], [])
            , Build(Anno(Str("foobar"), Op("Nil", [])))
            , Build(Anno(Str("'foobar'"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "quote_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("single_quote_test_0_0"), [], [])
          , Seq(
              CallT(SVar("un_double_quote_test_0_0"), [], [])
            , CallT(SVar("is_double_quote_test_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["h_14"]
          , Seq(
              Match(Var("h_14"))
            , PrimT("SSL_concat_strings", [], [Var("h_14")])
            )
          )
        )
      , SDefT(
          "concat_strings_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("concat-strings-1"), Op("Nil", [])))
              , CallT(SVar("concat_strings_0_0"), [], [])
              , Build(Anno(Op("Nil", []), Op("Nil", [])))
              , Build(Anno(Str(""), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("concat-strings-2"), Op("Nil", [])))
                , CallT(SVar("concat_strings_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("a"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str(""), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(Anno(Str("a"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("concat-strings-3"), Op("Nil", [])))
                  , CallT(SVar("concat_strings_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(""), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("a"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(Anno(Str("a"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("concat-strings-4"), Op("Nil", [])))
                    , CallT(SVar("concat_strings_0_0"), [], [])
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("hello "), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("world"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Build(Anno(Str("hello world"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("concat-strings-5"), Op("Nil", [])))
                      , CallT(SVar("concat_strings_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("hello "), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("world"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          )
                        )
                      , Build(Anno(Str("hello world"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("concat-strings-6"), Op("Nil", [])))
                        , CallT(SVar("concat_strings_0_0"), [], [])
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("hello"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op(
                                "Cons"
                              , [ Anno(Int("1"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            )
                          )
                        , Build(Anno(Str("hello"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("concat-strings-7"), Op("Nil", [])))
                        , CallT(SVar("concat_strings_0_0"), [], [])
                        , Build(
                            Anno(
                              Op("Nil", [])
                            , Op(
                                "Cons"
                              , [ Anno(Int("1"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            )
                          )
                        , Build(Anno(Str(""), Op("Nil", [])))
                        ]
                      , []
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strlen_0_0"
        , []
        , []
        , Scope(
            ["d_14"]
          , Seq(
              Match(Var("d_14"))
            , PrimT("SSL_strlen", [], [Var("d_14")])
            )
          )
        )
      , SDefT(
          "strlen_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("strlen-1"), Op("Nil", [])))
              , CallT(SVar("strlen_0_0"), [], [])
              , Build(Anno(Str(""), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("strlen-2"), Op("Nil", [])))
                , CallT(SVar("strlen_0_0"), [], [])
                , Build(Anno(Str("a"), Op("Nil", [])))
                , Build(Anno(Int("1"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("strlen-3"), Op("Nil", [])))
                , CallT(SVar("strlen_0_0"), [], [])
                , Build(Anno(Str("hello world"), Op("Nil", [])))
                , Build(Anno(Int("11"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["f_14", "g_14"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_14"), Var("g_14")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("f_14"), Var("g_14")])
            )
          )
        )
      , SDefT(
          "strcat_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("strcat-1"), Op("Nil", [])))
              , CallT(SVar("strcat_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str(""), Op("Nil", []))
                      , Anno(Str(""), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(Anno(Str(""), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("strcat-2"), Op("Nil", [])))
                , CallT(SVar("strcat_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Str("a"), Op("Nil", []))
                        , Anno(Str(""), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(Anno(Str("a"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("strcat-3"), Op("Nil", [])))
                  , CallT(SVar("strcat_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Str(""), Op("Nil", []))
                          , Anno(Str("a"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(Anno(Str("a"), Op("Nil", [])))
                  ]
                , []
                )
              , CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("strcat-4"), Op("Nil", [])))
                  , CallT(SVar("strcat_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Str("hello "), Op("Nil", []))
                          , Anno(Str("world"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(Anno(Str("hello world"), Op("Nil", [])))
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["k_14"]
          , Seq(
              Match(Var("k_14"))
            , PrimT("SSL_implode_string", [], [Var("k_14")])
            )
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "w_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("w_116"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "k_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "n_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["t_63", "u_63"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("k_117"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("m_117"), [], [])]
                      , []
                      )
                    , CallT(SVar("l_117"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("t_63"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("n_117"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("u_63"))
                      , GuardedLChoice(
                          Seq(Build(Var("u_63")), Match(Var("t_63")))
                        , Id
                        , Seq(
                            Build(Var("t_63"))
                          , Seq(
                              CallT(
                                SVar("debug_1_0")
                              , [Build(Anno(Str("  result not equal : "), Op("Nil", [])))]
                              , []
                              )
                            , Seq(
                                Build(Var("u_63"))
                              , Seq(
                                  CallT(
                                    SVar("debug_1_0")
                                  , [Build(Anno(Str("  expected         : "), Op("Nil", [])))]
                                  , []
                                  )
                                , Fail
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["z_3", "d_134", "y_3"]
          , Seq(
              Match(Var("z_3"))
            , Seq(
                Seq(
                  Match(Var("y_3"))
                , Seq(
                    Match(Var("d_134"))
                  , Seq(
                      Build(Var("y_3"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Op("stderr", []), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [Var("d_134"), Anno(Op("Nil", []), Op("Nil", []))]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("printnl_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Var("z_3"))
              )
            )
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "b_106"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_4"]
          , Seq(
              Match(Var("a_4"))
            , Seq(
                CallT(SVar("b_106"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("a_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "v_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("v_116"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["u_19", "v_19"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("u_19"), Var("v_19")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("u_19"), Var("v_19")])
              , Id
              , PrimT("SSL_addr", [], [Var("u_19"), Var("v_19")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["z_6", "b_4"]
          , Seq(
              Match(Var("b_4"))
            , Seq(
                Match(Var("z_6"))
              , Seq(
                  Build(Var("b_4"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("z_6"), Anno(Int("1"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "x_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["c_4"]
          , Seq(
              Match(Var("c_4"))
            , Seq(
                CallT(SVar("x_116"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("c_4"))
                  , GuardedLChoice(
                      Scope(
                        ["d_4"]
                      , Seq(
                          Match(Var("d_4"))
                        , Seq(
                            CallT(SVar("y_116"), [], [])
                          , Seq(
                              Build(Var("d_4"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "y_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_118"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_118"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("y_117"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("a_118"), [], [])]
                  , []
                  )
                , GuardedLChoice(CallT(SVar("z_117"), [], []), Fail, Id)
                )
              , Id
              , Seq(
                  Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                , Seq(CallT(SVar("debug_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "v_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("v_117"), [], [])
            , CallT(SVar("w_117"), [], [])
            , CallT(SVar("x_117"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["l_14"]
          , Seq(
              Match(Var("l_14"))
            , PrimT("SSL_explode_string", [], [Var("l_14")])
            )
          )
        )
      , SDefT(
          "explode_implode_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("explode-implode-test1"), Op("Nil", [])))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , CallT(SVar("implode_string_0_0"), [], [])
                )
              , Build(Anno(Str("foOBaR"), Op("Nil", [])))
              , Build(Anno(Str("foOBaR"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("explode-implode-test2"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , CallT(SVar("implode_string_0_0"), [], [])
                  )
                , Build(Anno(Str("\n\t"), Op("Nil", [])))
                , Build(Anno(Str("\n\t"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ Build(Anno(Str("implode-string applied to non list"), Op("Nil", [])))
                  , CallT(SVar("implode_string_0_0"), [], [])
                  , Build(Anno(Str("foo"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ Build(Anno(Str("implode-string applied to non list"), Op("Nil", [])))
                    , CallT(SVar("implode_string_0_0"), [], [])
                    , Build(Anno(Int("1"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("implode-string on simple list."), Op("Nil", [])))
                      , CallT(SVar("implode_string_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("97"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("98"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("99"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Build(Anno(Str("abc"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("implode-string on empty list."), Op("Nil", [])))
                        , CallT(SVar("implode_string_0_0"), [], [])
                        , Build(Anno(Op("Nil", []), Op("Nil", [])))
                        , Build(Anno(Str(""), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("implode-string on empty list with annotation."), Op("Nil", [])))
                          , CallT(SVar("implode_string_0_0"), [], [])
                          , Build(
                              Anno(
                                Op("Nil", [])
                              , Op(
                                  "Cons"
                                , [ Anno(Int("1"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              )
                            )
                          , Build(Anno(Str(""), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("implode-string on list where nil has annotation."), Op("Nil", [])))
                            , CallT(SVar("implode_string_0_0"), [], [])
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("97"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("98"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("99"), Op("Nil", []))
                                                , Anno(
                                                    Op("Nil", [])
                                                  , Op(
                                                      "Cons"
                                                    , [ Anno(Int("1"), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Build(Anno(Str("abc"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("implode-string on list where nil has annotation."), Op("Nil", [])))
                            , CallT(SVar("implode_string_0_0"), [], [])
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("97"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("98"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("99"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op(
                                    "Cons"
                                  , [ Anno(Int("1"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                )
                              )
                            , Build(Anno(Str("abc"), Op("Nil", [])))
                            ]
                          , []
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "w_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "x_77"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["m_4", "k_4", "l_4", "n_4", "o_4"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("k_4"), Var("l_4")])
                , Var("m_4")
                )
              )
            , Seq(
                Build(Var("k_4"))
              , Seq(
                  CallT(SVar("w_77"), [], [])
                , Seq(
                    Match(Var("n_4"))
                  , Seq(
                      Build(Var("l_4"))
                    , Seq(
                        CallT(SVar("x_77"), [], [])
                      , Seq(
                          Match(Var("o_4"))
                        , Build(
                            Anno(
                              Op("", [Var("n_4"), Var("o_4")])
                            , Var("m_4")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["c_53", "d_53", "e_4"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("c_53"), Var("d_53")])
                , Wld
                )
              )
            , Seq(
                Match(Var("e_4"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("c_53"), Var("d_53")])
                , Build(Var("e_4"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "k_106"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_4", "e_134", "f_134", "g_4", "f_4"]
          , Seq(
              Match(Var("h_4"))
            , Seq(
                Seq(
                  Seq(
                    Match(Var("f_4"))
                  , Seq(
                      CallT(SVar("k_106"), [], [])
                    , Seq(Match(Var("e_134")), Build(Var("f_4")))
                    )
                  )
                , Seq(
                    Match(Var("g_4"))
                  , Seq(
                      Match(Var("f_134"))
                    , Seq(
                        Build(Var("g_4"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("stderr", []), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("e_134")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("f_134"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("printnl_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              , Build(Var("h_4"))
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "i_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("i_117"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("j_117"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("string-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("explode_implode_test_0_0"), [], [])
              , Seq(
                  CallT(SVar("strcat_tests_0_0"), [], [])
                , Seq(
                    CallT(SVar("strlen_tests_0_0"), [], [])
                  , Seq(
                      CallT(SVar("concat_strings_tests_0_0"), [], [])
                    , Seq(
                        CallT(SVar("quote_tests_0_0"), [], [])
                      , Seq(
                          CallT(SVar("padd_with_test_0_0"), [], [])
                        , Seq(
                            CallT(SVar("is_substring_test_0_0"), [], [])
                          , Seq(
                              CallT(SVar("copy_char_test_0_0"), [], [])
                            , Seq(
                                CallT(SVar("upper_case_test_0_0"), [], [])
                              , Seq(
                                  CallT(SVar("escape_tests_0_0"), [], [])
                                , Seq(
                                    CallT(SVar("string_sort_test_0_0"), [], [])
                                  , Seq(
                                      CallT(SVar("string_tokenize_test_0_0"), [], [])
                                    , CallT(SVar("split_tests_0_0"), [], [])
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
