Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "reverse_acc_2_0"
        , [ VarDec(
              "n_5"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_5"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              [ "o_31"
              , "p_31"
              , "w_14"
              , "x_14"
              , "q_31"
              , "r_31"
              , "y_14"
              , "z_14"
              , "b_15"
              , "a_15"
              ]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("o_31"), Var("p_31")])
                  , Wld
                  )
                )
              , Seq(
                  Scope(["v_14"], Match(Var("v_14")))
                , Seq(
                    Match(Var("x_14"))
                  , Seq(
                      Seq(
                        Build(Var("p_31"))
                      , Seq(
                          Seq(
                            Seq(
                              Match(Var("r_31"))
                            , Seq(
                                Seq(
                                  Seq(
                                    Match(Var("a_15"))
                                  , Seq(
                                      Build(Var("o_31"))
                                    , Seq(
                                        CallT(SVar("n_5"), [], [])
                                      , Seq(Match(Var("y_14")), Build(Var("a_15")))
                                      )
                                    )
                                  )
                                , Seq(
                                    Match(Var("b_15"))
                                  , Seq(
                                      CallT(SVar("p_5"), [], [])
                                    , Seq(
                                        Match(Var("z_14"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op("Cons", [Var("y_14"), Var("z_14")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , Seq(Match(Var("q_31")), Build(Var("r_31")))
                                        )
                                      )
                                    )
                                  )
                                )
                              , CallT(
                                  SVar("reverse_acc_2_0")
                                , [CallT(SVar("n_5"), [], []), Build(Var("q_31"))]
                                , []
                                )
                              )
                            )
                          , Match(Var("w_14"))
                          )
                        , Build(Var("x_14"))
                        )
                      )
                    , Build(Var("w_14"))
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["t_14", "u_14", "s_14"]
            , Seq(
                Match(Anno(Op("Nil", []), Wld))
              , Seq(
                  Match(Var("s_14"))
                , Seq(
                    Match(Var("u_14"))
                  , Seq(
                      Build(Anno(Op("", []), Op("Nil", [])))
                    , Seq(
                        CallT(SVar("p_5"), [], [])
                      , Match(Var("t_14"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "reverse_0_0"
        , []
        , []
        , CallT(
            SVar("reverse_acc_2_0")
          , [Id, Build(Anno(Op("Nil", []), Op("Nil", [])))]
          , []
          )
        )
      , SDefT(
          "internal_string_replace_found_0_2"
        , []
        , [ VarDec("b_5", ConstType(Sort("ATerm", [])))
          , VarDec("k_5", ConstType(Sort("ATerm", [])))
          ]
        , GuardedLChoice(
            Scope(
              ["y_21", "z_21", "y_0", "z_0", "x_0"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [ Var("y_21")
                      , Anno(
                          Op(
                            "Cons"
                          , [ Var("z_21")
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Op("Nil", []), Wld)
                                  , Anno(Op("Nil", []), Wld)
                                  ]
                                )
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      ]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("x_0"))
                , Seq(
                    Match(Var("z_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Var("y_21")
                            , Anno(
                                Op(
                                  "Cons"
                                , [Var("k_5"), Anno(Op("Nil", []), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("concat_0_0"), [], [])
                      , Seq(
                          Match(Var("y_0"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Var("y_0")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("z_21")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("b_5"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["r_21", "s_21", "t_21", "u_21", "v_21"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [ Var("t_21")
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(
                                Op("Cons", [Var("s_21"), Var("u_21")])
                              , Wld
                              )
                            , Anno(
                                Op(
                                  "Cons"
                                , [Var("r_21"), Anno(Op("Nil", []), Wld)]
                                )
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      ]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("r_21"))
                , Seq(
                    Match(
                      Anno(
                        Op("Cons", [Var("s_21"), Var("v_21")])
                      , Wld
                      )
                    )
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Var("t_21")
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Var("u_21")
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("v_21"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(
                        SVar("internal_string_replace_found_0_2")
                      , []
                      , [Var("b_5"), Var("k_5")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "internal_string_replace_0_2"
        , []
        , [ VarDec("p_1", ConstType(Sort("ATerm", [])))
          , VarDec("x_4", ConstType(Sort("ATerm", [])))
          ]
        , GuardedLChoice(
            Scope(
              ["o_21", "w_0"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [ Var("o_21")
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Op("Nil", []), Wld)
                            , Anno(
                                Op(
                                  "Cons"
                                , [Wld, Anno(Op("Nil", []), Wld)]
                                )
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      ]
                    )
                  , Wld
                  )
                )
              , Seq(Match(Var("w_0")), Build(Var("o_21")))
              )
            )
          , Id
          , Scope(
              ["h_21", "i_21", "j_21", "k_21", "l_21"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [ Var("j_21")
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(
                                Op("Cons", [Var("i_21"), Var("k_21")])
                              , Wld
                              )
                            , Anno(
                                Op(
                                  "Cons"
                                , [Var("l_21"), Anno(Op("Nil", []), Wld)]
                                )
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      ]
                    )
                  , Wld
                  )
                )
              , GuardedLChoice(
                  Seq(
                    Build(Var("l_21"))
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("i_21"), Var("h_21")])
                        , Wld
                        )
                      )
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Var("j_21")
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Var("k_21")
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [Var("h_21"), Anno(Op("Nil", []), Op("Nil", []))]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(
                            SVar("internal_string_replace_found_0_2")
                          , []
                          , [Var("p_1"), Var("x_4")]
                          )
                        , CallT(
                            SVar("internal_string_replace_0_2")
                          , []
                          , [Var("p_1"), Var("x_4")]
                          )
                        )
                      )
                    )
                  )
                , Id
                , Seq(
                    Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(
                              Op("Cons", [Var("i_21"), Var("j_21")])
                            , Op("Nil", [])
                            )
                          , Anno(
                              Op(
                                "Cons"
                              , [ Var("k_21")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [Var("l_21"), Anno(Op("Nil", []), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(
                      SVar("internal_string_replace_0_2")
                    , []
                    , [Var("p_1"), Var("x_4")]
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_replace_0_2"
        , []
        , [ VarDec("g_22", ConstType(Sort("ATerm", [])))
          , VarDec("h_22", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["x_1", "y_1", "c_2", "d_2", "e_2", "z_1", "a_2", "b_2"]
          , Seq(
              Scope(
                ["t_1", "u_1", "w_1", "v_1"]
              , Seq(
                  Seq(
                    Match(Var("v_1"))
                  , Seq(
                      CallT(SVar("explode_string_0_0"), [], [])
                    , Seq(Match(Var("t_1")), Build(Var("v_1")))
                    )
                  )
                , Seq(
                    Match(Var("w_1"))
                  , Seq(
                      Build(Var("g_22"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("u_1"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Op("Nil", []), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("t_1")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("u_1"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Seq(
                Seq(
                  Match(Var("z_1"))
                , Seq(
                    Match(Var("b_2"))
                  , Seq(
                      Build(Var("g_22"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("a_2"))
                        , Seq(Match(Var("x_1")), Build(Var("z_1")))
                        )
                      )
                    )
                  )
                )
              , Seq(
                  Match(Var("c_2"))
                , Seq(
                    Match(Var("e_2"))
                  , Seq(
                      Build(Var("h_22"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          CallT(SVar("reverse_0_0"), [], [])
                        , Seq(
                            Match(Var("d_2"))
                          , Seq(
                              Match(Var("y_1"))
                            , Seq(
                                Build(Var("c_2"))
                              , Seq(
                                  CallT(
                                    SVar("internal_string_replace_0_2")
                                  , []
                                  , [Var("x_1"), Var("y_1")]
                                  )
                                , Seq(
                                    CallT(SVar("reverse_0_0"), [], [])
                                  , CallT(SVar("implode_string_0_0"), [], [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_replace_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("string-replace-test-a"), Op("Nil", [])))
              , Scope(
                  ["a_0", "b_0", "d_0", "c_0"]
                , Seq(
                    Seq(
                      Match(Var("c_0"))
                    , Seq(
                        Build(Anno(Str("foo"), Op("Nil", [])))
                      , Seq(Match(Var("a_0")), Build(Var("c_0")))
                      )
                    )
                  , Seq(
                      Match(Var("d_0"))
                    , Seq(
                        Build(Anno(Str("bar"), Op("Nil", [])))
                      , Seq(
                          Match(Var("b_0"))
                        , Seq(
                            Build(Var("d_0"))
                          , CallT(
                              SVar("string_replace_0_2")
                            , []
                            , [Var("a_0"), Var("b_0")]
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , Build(Anno(Str("foobarfoo"), Op("Nil", [])))
              , Build(Anno(Str("barbarbar"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("string-replace-test-b"), Op("Nil", [])))
                , Scope(
                    ["e_0", "f_0", "h_0", "g_0"]
                  , Seq(
                      Seq(
                        Match(Var("g_0"))
                      , Seq(
                          Build(Anno(Str(""), Op("Nil", [])))
                        , Seq(Match(Var("e_0")), Build(Var("g_0")))
                        )
                      )
                    , Seq(
                        Match(Var("h_0"))
                      , Seq(
                          Build(Anno(Str("bar"), Op("Nil", [])))
                        , Seq(
                            Match(Var("f_0"))
                          , Seq(
                              Build(Var("h_0"))
                            , CallT(
                                SVar("string_replace_0_2")
                              , []
                              , [Var("e_0"), Var("f_0")]
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Build(Anno(Str("foobarfoo"), Op("Nil", [])))
                , Build(Anno(Str("foobarfoo"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("string-replace-test-c"), Op("Nil", [])))
                , Scope(
                    ["i_0", "j_0", "l_0", "k_0"]
                  , Seq(
                      Seq(
                        Match(Var("k_0"))
                      , Seq(
                          Build(Anno(Str("foo"), Op("Nil", [])))
                        , Seq(Match(Var("i_0")), Build(Var("k_0")))
                        )
                      )
                    , Seq(
                        Match(Var("l_0"))
                      , Seq(
                          Build(Anno(Str(""), Op("Nil", [])))
                        , Seq(
                            Match(Var("j_0"))
                          , Seq(
                              Build(Var("l_0"))
                            , CallT(
                                SVar("string_replace_0_2")
                              , []
                              , [Var("i_0"), Var("j_0")]
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Build(Anno(Str("foobarfoo"), Op("Nil", [])))
                , Build(Anno(Str("bar"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "split_2_0"
        , [ VarDec(
              "i_126"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_126"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_172", "v_172", "x_172", "w_172"]
          , Seq(
              Seq(
                Match(Var("w_172"))
              , Seq(
                  CallT(SVar("i_126"), [], [])
                , Seq(Match(Var("u_172")), Build(Var("w_172")))
                )
              )
            , Seq(
                Match(Var("x_172"))
              , Seq(
                  CallT(SVar("j_126"), [], [])
                , Seq(
                    Match(Var("v_172"))
                  , Build(
                      Anno(
                        Op("", [Var("u_172"), Var("v_172")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "split_at_dot_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("split_2_0")
            , [ Build(Anno(Op("Nil", []), Op("Nil", [])))
              , CallT(SVar("explode_string_0_0"), [], [])
              ]
            , []
            )
          , Seq(
              Let(
                [ SDefT(
                    "k_113"
                  , []
                  , []
                  , GuardedLChoice(
                      Scope(
                        ["k_24", "l_24", "u_4"]
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Var("k_24")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("46"), Wld), Var("l_24")]
                                    )
                                  , Wld
                                  )
                                ]
                              )
                            , Wld
                            )
                          )
                        , Seq(
                            Match(Var("u_4"))
                          , Build(
                              Anno(
                                Op("", [Var("k_24"), Var("l_24")])
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Scope(
                          ["m_24", "n_24", "o_24", "w_4", "y_4", "z_4", "a_5", "v_4"]
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [ Var("m_24")
                                  , Anno(
                                      Op("Cons", [Var("n_24"), Var("o_24")])
                                    , Wld
                                    )
                                  ]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("v_4"))
                            , Seq(
                                Match(Var("y_4"))
                              , Seq(
                                  Match(Var("a_5"))
                                , Seq(
                                    Build(Var("m_24"))
                                  , Seq(
                                      CallT(
                                        SVar("at_end_1_0")
                                      , [ Build(
                                            Anno(
                                              Op(
                                                "Cons"
                                              , [Var("n_24"), Anno(Op("Nil", []), Op("Nil", []))]
                                              )
                                            , Op("Nil", [])
                                            )
                                          )
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        Match(Var("z_4"))
                                      , Seq(
                                          Build(
                                            Anno(
                                              Op("", [Var("z_4"), Var("o_24")])
                                            , Op("Nil", [])
                                            )
                                          )
                                        , Seq(
                                            CallT(SVar("k_113"), [], [])
                                          , Match(Var("w_4"))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , Id
                      , CallT(
                          SVar("_2_0")
                        , [Id, CallT(SVar("Nil_0_0"), [], [])]
                        , []
                        )
                      )
                    )
                  )
                ]
              , CallT(SVar("k_113"), [], [])
              )
            , CallT(
                SVar("_2_0")
              , [ CallT(SVar("implode_string_0_0"), [], [])
                , CallT(SVar("implode_string_0_0"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "split_at_dot_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("split-at-dot-test"), Op("Nil", [])))
            , CallT(SVar("split_at_dot_0_0"), [], [])
            , Build(Anno(Str("3.141592"), Op("Nil", [])))
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("3"), Op("Nil", []))
                    , Anno(Str("141592"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "split_after_0_0"
        , []
        , []
        , Scope(
            ["y_24", "z_24", "a_25", "b_25", "l_5"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_24"), Var("y_24")])
                , Wld
                )
              )
            , Seq(
                Build(Var("y_24"))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , Seq(
                    Match(Var("a_25"))
                  , Seq(
                      Build(Var("z_24"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("b_25"))
                        , Seq(
                            Match(Var("l_5"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Anno(Op("Nil", []), Op("Nil", [])), Var("b_25")]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                Let(
                                  [ SDefT(
                                      "m_113"
                                    , []
                                    , []
                                    , GuardedLChoice(
                                        CallT(
                                          SVar("_2_0")
                                        , [Id, CallT(SVar("Nil_0_0"), [], [])]
                                        , []
                                        )
                                      , Id
                                      , GuardedLChoice(
                                          Scope(
                                            ["c_25", "d_25", "o_5", "q_5", "x_5", "t_5", "m_5"]
                                          , Seq(
                                              Match(
                                                Anno(
                                                  Op("", [Var("c_25"), Var("d_25")])
                                                , Wld
                                                )
                                              )
                                            , Seq(
                                                Match(Var("m_5"))
                                              , Seq(
                                                  Match(Var("t_5"))
                                                , Seq(
                                                    Build(
                                                      Anno(
                                                        Op("", [Var("c_25"), Var("a_25")])
                                                      , Op("Nil", [])
                                                      )
                                                    )
                                                  , Seq(
                                                      CallT(SVar("conc_0_0"), [], [])
                                                    , Seq(
                                                        Match(Var("o_5"))
                                                      , Seq(
                                                          Build(Var("t_5"))
                                                        , Seq(
                                                            Match(Var("x_5"))
                                                          , Seq(
                                                              Build(
                                                                Anno(
                                                                  Op("", [Var("d_25"), Var("a_25")])
                                                                , Op("Nil", [])
                                                                )
                                                              )
                                                            , Seq(
                                                                CallT(SVar("left_match_0_0"), [], [])
                                                              , Seq(
                                                                  Match(Var("q_5"))
                                                                , Build(
                                                                    Anno(
                                                                      Op("", [Var("o_5"), Var("q_5")])
                                                                    , Op("Nil", [])
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        , Id
                                        , Scope(
                                            ["e_25", "f_25", "g_25", "z_5", "a_6", "b_6", "c_6", "y_5"]
                                          , Seq(
                                              Match(
                                                Anno(
                                                  Op(
                                                    ""
                                                  , [ Var("e_25")
                                                    , Anno(
                                                        Op("Cons", [Var("f_25"), Var("g_25")])
                                                      , Wld
                                                      )
                                                    ]
                                                  )
                                                , Wld
                                                )
                                              )
                                            , Seq(
                                                Match(Var("y_5"))
                                              , Seq(
                                                  Match(Var("a_6"))
                                                , Seq(
                                                    Match(Var("c_6"))
                                                  , Seq(
                                                      Build(Var("e_25"))
                                                    , Seq(
                                                        CallT(
                                                          SVar("at_end_1_0")
                                                        , [ Build(
                                                              Anno(
                                                                Op(
                                                                  "Cons"
                                                                , [Var("f_25"), Anno(Op("Nil", []), Op("Nil", []))]
                                                                )
                                                              , Op("Nil", [])
                                                              )
                                                            )
                                                          ]
                                                        , []
                                                        )
                                                      , Seq(
                                                          Match(Var("b_6"))
                                                        , Seq(
                                                            Build(
                                                              Anno(
                                                                Op("", [Var("b_6"), Var("g_25")])
                                                              , Op("Nil", [])
                                                              )
                                                            )
                                                          , Seq(
                                                              CallT(SVar("m_113"), [], [])
                                                            , Match(Var("z_5"))
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  ]
                                , CallT(SVar("m_113"), [], [])
                                )
                              , CallT(
                                  SVar("_2_0")
                                , [ CallT(SVar("implode_string_0_0"), [], [])
                                  , CallT(SVar("implode_string_0_0"), [], [])
                                  ]
                                , []
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "split_after_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("split-after-test"), Op("Nil", [])))
            , CallT(SVar("split_after_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("barfoofnord"), Op("Nil", []))
                    , Anno(Str("foo"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("barfoo"), Op("Nil", []))
                    , Anno(Str("fnord"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "split_before_0_0"
        , []
        , []
        , Scope(
            ["p_24", "q_24", "r_24", "s_24", "c_5"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("q_24"), Var("p_24")])
                , Wld
                )
              )
            , Seq(
                Build(Var("p_24"))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , Seq(
                    Match(Var("r_24"))
                  , Seq(
                      Build(Var("q_24"))
                    , Seq(
                        CallT(SVar("explode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("s_24"))
                        , Seq(
                            Match(Var("c_5"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Anno(Op("Nil", []), Op("Nil", [])), Var("s_24")]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                Let(
                                  [ SDefT(
                                      "l_113"
                                    , []
                                    , []
                                    , GuardedLChoice(
                                        Scope(
                                          ["t_24", "u_24", "d_5"]
                                        , Seq(
                                            Match(
                                              As(
                                                Var("t_24")
                                              , Anno(Op("", [Wld, Var("u_24")]), Wld)
                                              )
                                            )
                                          , Seq(
                                              Match(Var("d_5"))
                                            , Seq(
                                                Build(
                                                  Anno(
                                                    Op("", [Var("u_24"), Var("r_24")])
                                                  , Op("Nil", [])
                                                  )
                                                )
                                              , Seq(
                                                  CallT(SVar("left_match_0_0"), [], [])
                                                , Build(Var("t_24"))
                                                )
                                              )
                                            )
                                          )
                                        )
                                      , Id
                                      , Scope(
                                          ["v_24", "w_24", "x_24", "g_5", "h_5", "i_5", "j_5", "f_5"]
                                        , Seq(
                                            Match(
                                              Anno(
                                                Op(
                                                  ""
                                                , [ Var("v_24")
                                                  , Anno(
                                                      Op("Cons", [Var("w_24"), Var("x_24")])
                                                    , Wld
                                                    )
                                                  ]
                                                )
                                              , Wld
                                              )
                                            )
                                          , Seq(
                                              Match(Var("f_5"))
                                            , Seq(
                                                Match(Var("h_5"))
                                              , Seq(
                                                  Match(Var("j_5"))
                                                , Seq(
                                                    Build(Var("v_24"))
                                                  , Seq(
                                                      CallT(
                                                        SVar("at_end_1_0")
                                                      , [ Build(
                                                            Anno(
                                                              Op(
                                                                "Cons"
                                                              , [Var("w_24"), Anno(Op("Nil", []), Op("Nil", []))]
                                                              )
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        ]
                                                      , []
                                                      )
                                                    , Seq(
                                                        Match(Var("i_5"))
                                                      , Seq(
                                                          Build(
                                                            Anno(
                                                              Op("", [Var("i_5"), Var("x_24")])
                                                            , Op("Nil", [])
                                                            )
                                                          )
                                                        , Seq(
                                                            CallT(SVar("l_113"), [], [])
                                                          , Match(Var("g_5"))
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  ]
                                , CallT(SVar("l_113"), [], [])
                                )
                              , CallT(
                                  SVar("_2_0")
                                , [ CallT(SVar("implode_string_0_0"), [], [])
                                  , CallT(SVar("implode_string_0_0"), [], [])
                                  ]
                                , []
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "split_before_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("split-before-test"), Op("Nil", [])))
            , CallT(SVar("split_before_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("barfoofnord"), Op("Nil", []))
                    , Anno(Str("foo"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("bar"), Op("Nil", []))
                    , Anno(Str("foofnord"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "split_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("split_before_test_0_0"), [], [])
          , Seq(
              CallT(SVar("split_after_test_0_0"), [], [])
            , CallT(SVar("split_at_dot_test_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "u_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "v_117"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("u_117"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("v_117"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("v_117"), [], [])
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "o_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "p_116"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("o_116"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("p_116"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("p_116"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "x_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_31", "g_15", "h_15"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("x_117"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Id, Match(Var("v_31"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("h_15"))
              , Seq(
                  Match(Var("g_15"))
                , Build(
                    Anno(
                      Op("", [Var("g_15"), Var("v_31")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_1_0"
        , [ VarDec(
              "z_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            GuardedLChoice(
              CallT(
                SVar("split_fetch_1_0")
              , [CallT(SVar("z_117"), [], [])]
              , []
              )
            , Id
            , Scope(
                ["k_15", "l_15"]
              , Seq(
                  Match(Var("l_15"))
                , Seq(
                    Match(Var("k_15"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [Var("k_15"), Anno(Op("Nil", []), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          , GuardedLChoice(
              Scope(
                ["m_15"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Op("Nil", []), Wld)
                        , Anno(Op("Nil", []), Wld)
                        ]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("m_15"))
                  , Build(Anno(Op("Nil", []), Op("Nil", [])))
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["a_32", "n_15"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          ""
                        , [ As(
                              Var("a_32")
                            , Anno(Op("Cons", [Wld, Wld]), Wld)
                            )
                          , Anno(Op("Nil", []), Wld)
                          ]
                        )
                      , Wld
                      )
                    )
                  , Seq(
                      Match(Var("n_15"))
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [Var("a_32"), Anno(Op("Nil", []), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["b_32", "p_15", "q_15", "o_15"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , As(
                                Var("b_32")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("o_15"))
                      , Seq(
                          Match(Var("q_15"))
                        , Seq(
                            Build(Var("b_32"))
                          , Seq(
                              CallT(
                                SVar("list_tokenize_1_0")
                              , [CallT(SVar("z_117"), [], [])]
                              , []
                              )
                            , Match(Var("p_15"))
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["c_32", "d_32", "s_15", "t_15", "r_15"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ As(
                                Var("c_32")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            , As(
                                Var("d_32")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("r_15"))
                      , Seq(
                          Match(Var("t_15"))
                        , Seq(
                            Build(Var("d_32"))
                          , Seq(
                              CallT(
                                SVar("list_tokenize_1_0")
                              , [CallT(SVar("z_117"), [], [])]
                              , []
                              )
                            , Seq(
                                Match(Var("s_15"))
                              , Build(
                                  Anno(
                                    Op("Cons", [Var("c_32"), Var("s_15")])
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_1_0"
        , [ VarDec(
              "q_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(
                SVar("list_tokenize_1_0")
              , [CallT(SVar("q_113"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_0_1"
        , []
        , [VarDec("p_26", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("string_tokenize_1_0")
          , [ Scope(
                ["q_26"]
              , Seq(
                  Match(Var("q_26"))
                , Seq(
                    Build(Var("p_26"))
                  , CallT(SVar("fetch_1_0"), [Match(Var("q_26"))], [])
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "string_tokenize_0_0"
        , []
        , []
        , Scope(
            ["r_26", "d_8"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("r_26"), Var("d_8")])
                , Wld
                )
              )
            , Seq(
                Build(Var("d_8"))
              , CallT(SVar("string_tokenize_0_1"), [], [Var("r_26")])
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("tokenize-test1"), Op("Nil", [])))
              , Scope(
                  ["m_0", "n_0"]
                , Seq(
                    Match(Var("n_0"))
                  , Seq(
                      Match(Var("m_0"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Anno(Op("Nil", []), Op("Nil", [])), Var("m_0")]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("string_tokenize_0_0"), [], [])
                      )
                    )
                  )
                )
              , Build(Anno(Str("This should be one token"), Op("Nil", [])))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("This should be one token"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("tokenize-test2"), Op("Nil", [])))
                , Scope(
                    ["o_0", "p_0"]
                  , Seq(
                      Match(Var("p_0"))
                    , Seq(
                        Match(Var("o_0"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [ Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("32"), Op("Nil", []))
                                      , Anno(Op("Nil", []), Op("Nil", []))
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                , Var("o_0")
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("string_tokenize_0_0"), [], [])
                        )
                      )
                    )
                  )
                , Build(Anno(Str("   This should not   be one token  "), Op("Nil", [])))
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("This"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("should"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("not"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("be"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Str("one"), Op("Nil", []))
                                                , Anno(
                                                    Op(
                                                      "Cons"
                                                    , [ Anno(Str("token"), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  , Op("Nil", [])
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("tokenize-test3"), Op("Nil", [])))
                  , Scope(
                      ["q_0", "r_0"]
                    , Seq(
                        Match(Var("r_0"))
                      , Seq(
                          Match(Var("q_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [ Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("32"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(Int("46"), Op("Nil", []))
                                              , Anno(Op("Nil", []), Op("Nil", []))
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  , Var("q_0")
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , CallT(SVar("string_tokenize_0_0"), [], [])
                          )
                        )
                      )
                    )
                  , Build(Anno(Str("   This should not   be one token  . "), Op("Nil", [])))
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("This"), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("should"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Str("not"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Str("be"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(Str("one"), Op("Nil", []))
                                                  , Anno(
                                                      Op(
                                                        "Cons"
                                                      , [ Anno(Str("token"), Op("Nil", []))
                                                        , Anno(Op("Nil", []), Op("Nil", []))
                                                        ]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("tokenize-test4"), Op("Nil", [])))
                    , Scope(
                        ["s_0", "t_0"]
                      , Seq(
                          Match(Var("t_0"))
                        , Seq(
                            Match(Var("s_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("32"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("46"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    , Var("s_0")
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("string_tokenize_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Build(Anno(Str(""), Op("Nil", [])))
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    ]
                  , []
                  )
                , CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("tokenize-test5"), Op("Nil", [])))
                    , Scope(
                        ["u_0", "v_0"]
                      , Seq(
                          Match(Var("v_0"))
                        , Seq(
                            Match(Var("u_0"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [ Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("32"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("46"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    , Var("u_0")
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , CallT(SVar("string_tokenize_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Build(Anno(Str("    "), Op("Nil", [])))
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    ]
                  , []
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_gt_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [ CallT(
                  SVar("_2_0")
                , [ CallT(SVar("explode_string_0_0"), [], [])
                  , CallT(SVar("explode_string_0_0"), [], [])
                  ]
                , []
                )
              ]
            , []
            )
          , Seq(
              CallT(SVar("strcasecmp_0_0"), [], [])
            , Match(Anno(Int("1"), Wld))
            )
          )
        )
      , SDefT(
          "string_sort_desc_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("map_1_0")
            , [CallT(SVar("explode_string_0_0"), [], [])]
            , []
            )
          , Seq(
              CallT(
                SVar("qsort_1_0")
              , [CallT(SVar("string_gt_0_0"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "case_char_1_0"
        , [ VarDec(
              "x_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("to_upper_0_0"), [], [])
              , CallT(SVar("to_upper_0_0"), [], [])
              ]
            , []
            )
          , CallT(SVar("x_112"), [], [])
          )
        )
      , SDefT(
          "strcasecmp_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "i_113"
              , []
              , []
              , GuardedLChoice(
                  Scope(
                    ["e_24", "f_24", "g_24", "h_24", "p_4", "q_4", "o_4"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(
                                Op("Cons", [Var("e_24"), Var("f_24")])
                              , Wld
                              )
                            , Anno(
                                Op("Cons", [Var("g_24"), Var("h_24")])
                              , Wld
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Seq(
                          Match(Var("o_4"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("e_24"), Var("g_24")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(
                                SVar("case_char_1_0")
                              , [CallT(SVar("eq_0_0"), [], [])]
                              , []
                              )
                            , Build(Var("o_4"))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("q_4"))
                        , Seq(
                            Build(
                              Anno(
                                Op("", [Var("f_24"), Var("h_24")])
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("i_113"), [], [])
                            , Match(Var("p_4"))
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , GuardedLChoice(
                    Scope(
                      ["r_4"]
                    , Seq(
                        Match(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Op("Nil", []), Wld)
                              , Anno(Op("Nil", []), Wld)
                              ]
                            )
                          , Wld
                          )
                        )
                      , Seq(
                          Match(Var("r_4"))
                        , Build(Anno(Int("0"), Op("Nil", [])))
                        )
                      )
                    )
                  , Id
                  , GuardedLChoice(
                      Scope(
                        ["i_24", "j_24", "s_4"]
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [ Anno(Op("Cons", [Var("i_24"), Wld]), Wld)
                                , Anno(Op("Cons", [Var("j_24"), Wld]), Wld)
                                ]
                              )
                            , Wld
                            )
                          )
                        , Seq(
                            Match(Var("s_4"))
                          , Seq(
                              Build(
                                Anno(
                                  Op("", [Var("i_24"), Var("j_24")])
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(
                                  SVar("case_char_1_0")
                                , [CallT(SVar("lt_0_0"), [], [])]
                                , []
                                )
                              , Build(Anno(Int("-1"), Op("Nil", [])))
                              )
                            )
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Scope(
                          ["t_4"]
                        , Seq(
                            Match(
                              Anno(
                                Op(
                                  ""
                                , [ Anno(Op("Nil", []), Wld)
                                  , Anno(Op("Cons", [Wld, Wld]), Wld)
                                  ]
                                )
                              , Wld
                              )
                            )
                          , Seq(
                              Match(Var("t_4"))
                            , Build(Anno(Int("-1"), Op("Nil", [])))
                            )
                          )
                        )
                      , Id
                      , Build(Anno(Int("1"), Op("Nil", [])))
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("i_113"), [], [])
          )
        )
      , SDefT(
          "string_lt_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("try_1_0")
            , [ CallT(
                  SVar("_2_0")
                , [ CallT(SVar("explode_string_0_0"), [], [])
                  , CallT(SVar("explode_string_0_0"), [], [])
                  ]
                , []
                )
              ]
            , []
            )
          , Seq(
              CallT(SVar("strcasecmp_0_0"), [], [])
            , Match(Anno(Int("-1"), Wld))
            )
          )
        )
      , SDefT(
          "filter_1_0"
        , [ VarDec(
              "y_127"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("Nil_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(
                SVar("Cons_2_0")
              , [ CallT(SVar("y_127"), [], [])
                , CallT(
                    SVar("filter_1_0")
                  , [CallT(SVar("y_127"), [], [])]
                  , []
                  )
                ]
              , []
              )
            , Id
            , Scope(
                ["j_175"]
              , Seq(
                  Match(
                    Anno(Op("Cons", [Wld, Var("j_175")]), Wld)
                  )
                , Seq(
                    Build(Var("j_175"))
                  , CallT(
                      SVar("filter_1_0")
                    , [CallT(SVar("y_127"), [], [])]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "qsort_1_0"
        , [ VarDec(
              "o_1"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              [ "c_67"
              , "d_67"
              , "e_67"
              , "f_67"
              , "a_174"
              , "b_174"
              , "c_174"
              , "d_174"
              , "f_174"
              , "e_174"
              ]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("e_67"), Var("d_67")])
                  , Wld
                  )
                )
              , Seq(
                  Scope(
                    ["v_173"]
                  , Seq(
                      Match(Var("v_173"))
                    , Seq(
                        Build(Var("d_67"))
                      , Seq(
                          CallT(
                            SVar("filter_1_0")
                          , [ Scope(
                                ["g_67", "w_173", "x_173"]
                              , Seq(
                                  Match(Var("g_67"))
                                , Seq(
                                    Match(Var("x_173"))
                                  , Seq(
                                      Match(Var("w_173"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op("", [Var("w_173"), Var("e_67")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      , Seq(
                                          CallT(SVar("o_1"), [], [])
                                        , Build(Var("g_67"))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Match(Var("c_67"))
                          , Seq(
                              Build(Var("d_67"))
                            , Seq(
                                CallT(
                                  SVar("filter_1_0")
                                , [ Scope(
                                      ["h_67", "y_173", "z_173"]
                                    , Seq(
                                        Match(Var("h_67"))
                                      , Seq(
                                          Match(Var("z_173"))
                                        , Seq(
                                            Match(Var("y_173"))
                                          , Seq(
                                              Build(
                                                Anno(
                                                  Op("", [Var("y_173"), Var("e_67")])
                                                , Op("Nil", [])
                                                )
                                              )
                                            , Seq(
                                                GuardedLChoice(CallT(SVar("o_1"), [], []), Fail, Id)
                                              , Build(Var("h_67"))
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  ]
                                , []
                                )
                              , Seq(Match(Var("f_67")), Build(Var("v_173")))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Seq(
                    Match(Var("b_174"))
                  , Seq(
                      Seq(
                        Seq(
                          Match(Var("e_174"))
                        , Seq(
                            Build(Var("c_67"))
                          , Seq(
                              CallT(
                                SVar("qsort_1_0")
                              , [CallT(SVar("o_1"), [], [])]
                              , []
                              )
                            , Seq(Match(Var("c_174")), Build(Var("e_174")))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("f_174"))
                        , Seq(
                            Build(Var("f_67"))
                          , Seq(
                              CallT(
                                SVar("qsort_1_0")
                              , [CallT(SVar("o_1"), [], [])]
                              , []
                              )
                            , Seq(
                                Match(Var("d_174"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op(
                                        "Cons"
                                      , [ Var("c_174")
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [ Anno(
                                                  Op(
                                                    "Cons"
                                                  , [Var("e_67"), Anno(Op("Nil", []), Op("Nil", []))]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              , Anno(
                                                  Op(
                                                    "Cons"
                                                  , [Var("d_174"), Anno(Op("Nil", []), Op("Nil", []))]
                                                  )
                                                , Op("Nil", [])
                                                )
                                              ]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("concat_0_0"), [], [])
                                  , Seq(Match(Var("a_174")), Build(Var("b_174")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("a_174"))
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["u_173"]
            , Seq(
                Match(Anno(Op("Nil", []), Wld))
              , Seq(
                  Match(Var("u_173"))
                , Build(Anno(Op("Nil", []), Op("Nil", [])))
                )
              )
            )
          )
        )
      , SDefT(
          "string_sort_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("map_1_0")
            , [CallT(SVar("explode_string_0_0"), [], [])]
            , []
            )
          , Seq(
              CallT(
                SVar("qsort_1_0")
              , [CallT(SVar("string_lt_0_0"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_sort_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("string-sort-test-a"), Op("Nil", [])))
              , CallT(SVar("string_sort_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("De"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("db"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("Cb"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("ac"), Op("Nil", []))
                                        , Anno(Op("Nil", []), Op("Nil", []))
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("ac"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("Cb"), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("db"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Str("De"), Op("Nil", []))
                                        , Anno(Op("Nil", []), Op("Nil", []))
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("string-sort-test-b"), Op("Nil", [])))
                , CallT(SVar("string_sort_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("2001"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("2000"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("1999"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("1998"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("1998"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("1999"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("2000"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("2001"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("string-sort-test-c"), Op("Nil", [])))
                , CallT(SVar("string_sort_desc_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("2001"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("2000"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("1999"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("1998"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("2001"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("2000"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("1999"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Str("1998"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "UnEscape_carriage_return_0_0"
        , []
        , []
        , Scope(
            ["w_27", "m_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("114"), Wld), Var("w_27")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("m_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("13"), Op("Nil", [])), Var("w_27")]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_tab_0_0"
        , []
        , []
        , Scope(
            ["y_27", "o_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("116"), Wld), Var("y_27")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("o_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("9"), Op("Nil", [])), Var("y_27")]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_linefeed_0_0"
        , []
        , []
        , Scope(
            ["x_27", "n_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("110"), Wld), Var("x_27")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("n_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("10"), Op("Nil", [])), Var("x_27")]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_backslash_0_0"
        , []
        , []
        , Scope(
            ["v_27", "l_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("92"), Wld), Var("v_27")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("l_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("92"), Op("Nil", [])), Var("v_27")]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_double_quote_0_0"
        , []
        , []
        , Scope(
            ["t_27", "j_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [ Anno(Int("92"), Wld)
                    , Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("34"), Wld), Var("t_27")]
                        )
                      , Wld
                      )
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("j_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("34"), Op("Nil", [])), Var("t_27")]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "UnEscape_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("UnEscape_double_quote_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(SVar("UnEscape_backslash_0_0"), [], [])
            , Id
            , GuardedLChoice(
                CallT(SVar("UnEscape_linefeed_0_0"), [], [])
              , Id
              , GuardedLChoice(
                  CallT(SVar("UnEscape_tab_0_0"), [], [])
                , Id
                , CallT(SVar("UnEscape_carriage_return_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "j_131"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("j_131"), [], []), Id, Id)
        )
      , SDefT(
          "unescape_chars_1_0"
        , [ VarDec(
              "o_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "p_114"
              , []
              , []
              , Seq(
                  CallT(
                    SVar("try_1_0")
                  , [CallT(SVar("o_114"), [], [])]
                  , []
                  )
                , GuardedLChoice(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("p_114"), [], [])]
                    , []
                    )
                  , Id
                  , CallT(SVar("Nil_0_0"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("p_114"), [], [])
          )
        )
      , SDefT(
          "unescape_chars_0_0"
        , []
        , []
        , CallT(
            SVar("unescape_chars_1_0")
          , [CallT(SVar("UnEscape_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "unescape_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("unescape_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "unescape_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("unescape-test1"), Op("Nil", [])))
              , CallT(
                  SVar("Cons_2_0")
                , [ CallT(SVar("unescape_0_0"), [], [])
                  , CallT(SVar("Nil_0_0"), [], [])
                  ]
                , []
                )
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("\\\"ab\\\\c"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Str("\"ab\\c"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("unescape-test2"), Op("Nil", [])))
                , CallT(
                    SVar("Cons_2_0")
                  , [ Seq(
                        CallT(SVar("un_double_quote_0_0"), [], [])
                      , CallT(SVar("unescape_0_0"), [], [])
                      )
                    , CallT(SVar("Nil_0_0"), [], [])
                    ]
                  , []
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("\" \\\\\\n\\t\""), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str(" \\\n\t"), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("unescape-test3"), Op("Nil", [])))
                  , CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("unescape_0_0"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(" \\\\\\na\\b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(" \\\na\\b"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("unescape-test4"), Op("Nil", [])))
                  , CallT(
                      SVar("Cons_2_0")
                    , [ CallT(SVar("unescape_0_0"), [], [])
                      , CallT(SVar("Nil_0_0"), [], [])
                      ]
                    , []
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("\" \\\\\\n\\\\t\""), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str("\" \\\n\\t\""), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "Cify_1_0"
        , [ VarDec(
              "n_1"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Scope(
              ["i_27", "n_9", "o_9", "m_9"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      "Cons"
                    , [Anno(Int("92"), Wld), Var("i_27")]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("m_9"))
                , Seq(
                    Match(Var("o_9"))
                  , Seq(
                      Build(Var("i_27"))
                    , Seq(
                        CallT(SVar("n_1"), [], [])
                      , Seq(
                          Match(Var("n_9"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Int("95"), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("98"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Anno(Int("95"), Op("Nil", [])), Var("n_9")]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["h_27", "k_9", "l_9", "j_9"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        "Cons"
                      , [Anno(Int("34"), Wld), Var("h_27")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("j_9"))
                  , Seq(
                      Match(Var("l_9"))
                    , Seq(
                        Build(Var("h_27"))
                      , Seq(
                          CallT(SVar("n_1"), [], [])
                        , Seq(
                            Match(Var("k_9"))
                          , Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("95"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [ Anno(Int("113"), Op("Nil", []))
                                        , Anno(
                                            Op(
                                              "Cons"
                                            , [Anno(Int("95"), Op("Nil", [])), Var("k_9")]
                                            )
                                          , Op("Nil", [])
                                          )
                                        ]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["g_27", "h_9", "i_9", "g_9"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("95"), Wld), Var("g_27")]
                        )
                      , Wld
                      )
                    )
                  , Seq(
                      Match(Var("g_9"))
                    , Seq(
                        Match(Var("i_9"))
                      , Seq(
                          Build(Var("g_27"))
                        , Seq(
                            CallT(SVar("n_1"), [], [])
                          , Seq(
                              Match(Var("h_9"))
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("95"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [Anno(Int("95"), Op("Nil", [])), Var("h_9")]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["f_27", "e_9", "f_9", "d_9"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("45"), Wld), Var("f_27")]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("d_9"))
                      , Seq(
                          Match(Var("f_9"))
                        , Seq(
                            Build(Var("f_27"))
                          , Seq(
                              CallT(SVar("n_1"), [], [])
                            , Seq(
                                Match(Var("e_9"))
                              , Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [Anno(Int("95"), Op("Nil", [])), Var("e_9")]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["e_27", "b_9", "c_9", "a_9"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("39"), Wld), Var("e_27")]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("a_9"))
                      , Seq(
                          Match(Var("c_9"))
                        , Seq(
                            Build(Var("e_27"))
                          , Seq(
                              CallT(SVar("n_1"), [], [])
                            , Seq(
                                Match(Var("b_9"))
                              , Build(
                                  Anno(
                                    Op(
                                      "Cons"
                                    , [ Anno(Int("95"), Op("Nil", []))
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [ Anno(Int("112"), Op("Nil", []))
                                            , Anno(
                                                Op(
                                                  "Cons"
                                                , [Anno(Int("95"), Op("Nil", [])), Var("b_9")]
                                                )
                                              , Op("Nil", [])
                                              )
                                            ]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "escape_1_0"
        , [ VarDec(
              "j_114"
            , FunType(
                [ FunType(
                    [ConstType(Sort("List", [Sort("String", [])]))]
                  , ConstType(Sort("List", [Sort("String", [])]))
                  )
                , ConstType(Sort("List", [Sort("String", [])]))
                ]
              , ConstType(Sort("List", [Sort("String", [])]))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              Let(
                [ SDefT(
                    "k_114"
                  , []
                  , []
                  , GuardedLChoice(
                      CallT(
                        SVar("j_114")
                      , [CallT(SVar("k_114"), [], [])]
                      , []
                      )
                    , Id
                    , GuardedLChoice(
                        CallT(
                          SVar("Cons_2_0")
                        , [Id, CallT(SVar("k_114"), [], [])]
                        , []
                        )
                      , Id
                      , CallT(SVar("Nil_0_0"), [], [])
                      )
                    )
                  )
                ]
              , CallT(SVar("k_114"), [], [])
              )
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "cify_0_0"
        , []
        , []
        , CallT(
            SVar("escape_1_0")
          , [CallT(SVar("Cify_1_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "Escape_carriage_return_0_0"
        , []
        , []
        , Scope(
            ["s_27", "i_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("13"), Wld), Var("s_27")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("i_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("92"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("114"), Op("Nil", [])), Var("s_27")]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_linefeed_0_0"
        , []
        , []
        , Scope(
            ["r_27", "h_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("10"), Wld), Var("r_27")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("h_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("92"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("110"), Op("Nil", [])), Var("r_27")]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_backslash_0_0"
        , []
        , []
        , Scope(
            ["q_27", "g_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("92"), Wld), Var("q_27")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("g_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("92"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("92"), Op("Nil", [])), Var("q_27")]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_double_quote_0_0"
        , []
        , []
        , Scope(
            ["o_27", "e_10"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Anno(Int("34"), Wld), Var("o_27")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("e_10"))
              , Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("92"), Op("Nil", []))
                      , Anno(
                          Op(
                            "Cons"
                          , [Anno(Int("34"), Op("Nil", [])), Var("o_27")]
                          )
                        , Op("Nil", [])
                        )
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Escape_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("Escape_double_quote_0_0"), [], [])
          , Id
          , GuardedLChoice(
              CallT(SVar("Escape_backslash_0_0"), [], [])
            , Id
            , GuardedLChoice(
                CallT(SVar("Escape_linefeed_0_0"), [], [])
              , Id
              , CallT(SVar("Escape_carriage_return_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "escape_chars_1_0"
        , [ VarDec(
              "m_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "n_114"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(SVar("m_114"), [], [])
                  , CallT(
                      SVar("Cons_2_0")
                    , [ Id
                      , CallT(
                          SVar("Cons_2_0")
                        , [Id, CallT(SVar("n_114"), [], [])]
                        , []
                        )
                      ]
                    , []
                    )
                  )
                , Id
                , GuardedLChoice(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("n_114"), [], [])]
                    , []
                    )
                  , Id
                  , CallT(SVar("Nil_0_0"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("n_114"), [], [])
          )
        )
      , SDefT(
          "escape_chars_0_0"
        , []
        , []
        , CallT(
            SVar("escape_chars_1_0")
          , [CallT(SVar("Escape_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "escape_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("escape_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "escape_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("escape-test1"), Op("Nil", [])))
              , CallT(SVar("escape_0_0"), [], [])
              , Build(Anno(Str("\"ab\\c"), Op("Nil", [])))
              , Build(Anno(Str("\\\"ab\\\\c"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("escape-test2"), Op("Nil", [])))
              , CallT(SVar("cify_0_0"), [], [])
              , Build(Anno(Str("a-b_c'"), Op("Nil", [])))
              , Build(Anno(Str("a_b__c_p_"), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "escape_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("escape_test_0_0"), [], [])
          , CallT(SVar("unescape_test_0_0"), [], [])
          )
        )
      , SDefT(
          "leq_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("gt_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "comp_comp_2_0"
        , [ VarDec(
              "c_118"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_118"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["m_34", "n_34", "o_34", "p_34"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("m_34"), Var("n_34"), Var("o_34")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("p_34"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("m_34"), Var("n_34")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("c_118"), [], [])
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("n_34"), Var("o_34")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("d_118"), [], [])
                      , Build(Var("p_34"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "leq_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "is_lower_0_0"
        , []
        , []
        , Scope(
            ["e_22", "i_1", "j_1"]
          , Seq(
              Match(Var("e_22"))
            , Seq(
                Match(Var("j_1"))
              , Seq(
                  Match(Var("i_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("97"), Op("Nil", []))
                          , Var("i_1")
                          , Anno(Int("122"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("leq_leq_0_0"), [], [])
                    , Build(Var("e_22"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "to_upper_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("is_lower_0_0"), [], [])
          , Scope(
              ["m_1", "q_1"]
            , Seq(
                Match(Var("q_1"))
              , Seq(
                  Match(Var("m_1"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("m_1"), Anno(Int("32"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("subt_0_0"), [], [])
                  )
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "m_117"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "n_117"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("m_117"), [], [])
                    , CallT(SVar("n_117"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("n_117"), [], [])
          )
        )
      , SDefT(
          "upper_case_chars_0_0"
        , []
        , []
        , CallT(
            SVar("map_1_0")
          , [CallT(SVar("to_upper_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "upper_case_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("upper_case_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "upper_case_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("upper-case-test"), Op("Nil", [])))
            , CallT(SVar("upper_case_0_0"), [], [])
            , Build(Anno(Str("foOBaR"), Op("Nil", [])))
            , Build(Anno(Str("FOOBAR"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("copy-char-test"), Op("Nil", [])))
            , CallT(SVar("copy_char_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Int("3"), Op("Nil", []))
                    , Anno(Int("32"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Str("   "), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "left_match_0_0"
        , []
        , []
        , Seq(
            Let(
              [ SDefT(
                  "f_113"
                , []
                , []
                , GuardedLChoice(
                    Scope(
                      ["q_23", "r_23", "s_23", "x_3", "y_3", "w_3"]
                    , Seq(
                        Match(
                          Anno(
                            Op(
                              ""
                            , [ Anno(
                                  Op("Cons", [Var("r_23"), Var("q_23")])
                                , Wld
                                )
                              , Anno(
                                  Op("Cons", [Var("r_23"), Var("s_23")])
                                , Wld
                                )
                              ]
                            )
                          , Wld
                          )
                        )
                      , Seq(
                          Match(Var("w_3"))
                        , Seq(
                            Match(Var("y_3"))
                          , Seq(
                              Build(
                                Anno(
                                  Op("", [Var("q_23"), Var("s_23")])
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("f_113"), [], [])
                              , Match(Var("x_3"))
                              )
                            )
                          )
                        )
                      )
                    )
                  , Id
                  , CallT(
                      SVar("_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  )
                )
              ]
            , CallT(SVar("f_113"), [], [])
            )
          , CallT(SVar("Fst_0_0"), [], [])
          )
        )
      , SDefT(
          "eq_0_0"
        , []
        , []
        , Scope(
            ["r_72"]
          , Match(
              Anno(
                Op("", [Var("r_72"), Var("r_72")])
              , Wld
              )
            )
          )
        )
      , SDefT(
          "is_substring_1_0"
        , [ VarDec(
              "n_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_25", "i_25"]
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                Match(Var("h_25"))
              , Seq(
                  CallT(SVar("n_113"), [], [])
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , Seq(
                      Match(Var("i_25"))
                    , GuardedLChoice(
                        Seq(
                          Build(
                            Anno(
                              Op("", [Var("i_25"), Var("h_25")])
                            , Op("Nil", [])
                            )
                          )
                        , CallT(SVar("eq_0_0"), [], [])
                        )
                      , Id
                      , Let(
                          [ SDefT(
                              "o_113"
                            , []
                            , []
                            , Scope(
                                ["j_25", "k_25"]
                              , Seq(
                                  Match(
                                    As(
                                      Var("j_25")
                                    , Anno(Op("Cons", [Wld, Var("k_25")]), Wld)
                                    )
                                  )
                                , GuardedLChoice(
                                    Seq(
                                      Build(
                                        Anno(
                                          Op("", [Var("j_25"), Var("i_25")])
                                        , Op("Nil", [])
                                        )
                                      )
                                    , CallT(SVar("left_match_0_0"), [], [])
                                    )
                                  , Id
                                  , Seq(
                                      Build(Var("k_25"))
                                    , CallT(SVar("o_113"), [], [])
                                    )
                                  )
                                )
                              )
                            )
                          ]
                        , Seq(
                            Build(Var("h_25"))
                          , CallT(SVar("o_113"), [], [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_substring_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("is-substring-test"), Op("Nil", [])))
            , CallT(
                SVar("is_substring_1_0")
              , [Build(Anno(Str("foo"), Op("Nil", [])))]
              , []
              )
            , Build(Anno(Str("barfoofnord"), Op("Nil", [])))
            , Id
            ]
          , []
          )
        )
      , SDefT(
          "while_not_2_0"
        , [ VarDec(
              "g_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "h_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("g_132"), [], [])
          , Id
          , Seq(
              CallT(SVar("h_132"), [], [])
            , CallT(
                SVar("while_not_2_0")
              , [ CallT(SVar("g_132"), [], [])
                , CallT(SVar("h_132"), [], [])
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "for_3_0"
        , [ VarDec(
              "k_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_132"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("k_132"), [], [])
          , CallT(
              SVar("while_not_2_0")
            , [ CallT(SVar("l_132"), [], [])
              , CallT(SVar("m_132"), [], [])
              ]
            , []
            )
          )
        )
      , SDefT(
          "copy_0_0"
        , []
        , []
        , CallT(
            SVar("for_3_0")
          , [ Scope(
                ["s_28", "t_28", "i_11"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("s_28"), Var("t_28")])
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("i_11"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Var("s_28")
                          , Var("t_28")
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            , Scope(
                ["u_28", "v_28", "j_11"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("0"), Wld), Var("u_28"), Var("v_28")]
                      )
                    , Wld
                    )
                  )
                , Seq(Match(Var("j_11")), Build(Var("v_28")))
                )
              )
            , Scope(
                ["w_28", "x_28", "y_28", "l_11", "m_11", "k_11"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("w_28"), Var("x_28"), Var("y_28")]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Seq(
                      Match(Var("k_11"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("w_28"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("geq_0_0"), [], [])
                        , Build(Var("k_11"))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("m_11"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("w_28"), Anno(Int("1"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("subt_0_0"), [], [])
                        , Seq(
                            Match(Var("l_11"))
                          , Build(
                              Anno(
                                Op(
                                  ""
                                , [ Var("l_11")
                                  , Var("x_28")
                                  , Anno(
                                      Op("Cons", [Var("x_28"), Var("y_28")])
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "copy_char_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("copy_0_0"), [], [])
          , CallT(SVar("implode_string_0_0"), [], [])
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["r_35", "s_35", "a_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("r_35"), Var("s_35")])
                , Wld
                )
              )
            , Seq(
                Match(Var("a_1"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("r_35"), Var("s_35")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("r_35"), Var("s_35")])
                  )
                , Build(Var("a_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["x_35"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("x_35"), Var("x_35")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "pos_0_0"
        , []
        , []
        , Scope(
            ["j_34", "y_19", "z_19"]
          , Seq(
              Match(Var("j_34"))
            , Seq(
                Match(Var("z_19"))
              , Seq(
                  Match(Var("y_19"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [Var("y_19"), Anno(Int("0"), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("geq_0_0"), [], [])
                    , Build(Var("j_34"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["x_34", "y_34"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("x_34"), Var("y_34")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("x_34"), Var("y_34")])
              , Id
              , PrimT("SSL_subtr", [], [Var("x_34"), Var("y_34")])
              )
            )
          )
        )
      , SDefT(
          "string_length_0_0"
        , []
        , []
        , CallT(SVar("strlen_0_0"), [], [])
        )
      , SDefT(
          "align_helper_0_2"
        , []
        , [ VarDec("m_26", ConstType(Sort("ATerm", [])))
          , VarDec("n_26", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["x_7", "y_7"]
          , Seq(
              CallT(SVar("string_length_0_0"), [], [])
            , Seq(
                Match(Var("y_7"))
              , Seq(
                  Match(Var("x_7"))
                , Seq(
                    Build(
                      Anno(
                        Op("", [Var("n_26"), Var("x_7")])
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("subt_0_0"), [], [])
                    , GuardedLChoice(
                        Scope(
                          ["o_26"]
                        , Seq(
                            Match(Var("o_26"))
                          , Seq(
                              CallT(SVar("pos_0_0"), [], [])
                            , Build(Var("o_26"))
                            )
                          )
                        )
                      , Scope(
                          ["z_7", "a_8"]
                        , Seq(
                            Match(Var("a_8"))
                          , Seq(
                              Match(Var("z_7"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("z_7"), Var("m_26")])
                                  , Op("Nil", [])
                                  )
                                )
                              , CallT(SVar("copy_char_0_0"), [], [])
                              )
                            )
                          )
                        )
                      , Build(Anno(Str(""), Op("Nil", [])))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "align_right_0_0"
        , []
        , []
        , Scope(
            ["v_25", "w_25", "x_25", "y_25", "f_7", "g_7", "d_7"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("w_25"), Var("v_25"), Var("x_25")]
                  )
                , Wld
                )
              )
            , Seq(
                Seq(
                  Match(Var("d_7"))
                , Seq(
                    Build(Var("v_25"))
                  , Seq(
                      CallT(
                        SVar("align_helper_0_2")
                      , []
                      , [Var("w_25"), Var("x_25")]
                      )
                    , Seq(Match(Var("y_25")), Build(Var("d_7")))
                    )
                  )
                )
              , Seq(
                  Match(Var("g_7"))
                , Seq(
                    Build(
                      Anno(
                        Op("", [Var("y_25"), Var("v_25")])
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("conc_strings_0_0"), [], [])
                    , Match(Var("f_7"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["o_66", "p_66", "q_66", "r_172"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("o_66")
                        , Anno(
                            Op("Cons", [Var("q_66"), Var("p_66")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("r_172")), Build(Var("q_66")))
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["m_66", "n_66", "q_172"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("n_66"), Var("m_66")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("q_172")), Build(Var("n_66")))
            )
          )
        )
      , SDefT(
          "padd_with_1_0"
        , [ VarDec(
              "p_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_6", "v_6", "x_6", "a_7", "z_6"]
          , Seq(
              Scope(
                ["y_6"]
              , Seq(
                  Match(Var("y_6"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("p_113"), [], [])
                    , Seq(Match(Var("q_6")), Build(Var("y_6")))
                    )
                  )
                )
              )
            , Seq(
                Seq(
                  Seq(
                    Match(Var("z_6"))
                  , Seq(
                      CallT(SVar("Fst_0_0"), [], [])
                    , Seq(Match(Var("v_6")), Build(Var("z_6")))
                    )
                  )
                , Seq(
                    Match(Var("a_7"))
                  , Seq(
                      CallT(SVar("Snd_0_0"), [], [])
                    , Seq(
                        Match(Var("x_6"))
                      , Build(
                          Anno(
                            Op(
                              ""
                            , [Var("q_6"), Var("v_6"), Var("x_6")]
                            )
                          , Op("Nil", [])
                          )
                        )
                      )
                    )
                  )
                )
              , CallT(SVar("align_right_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "padd_with_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("padd-with-test"), Op("Nil", [])))
            , CallT(
                SVar("padd_with_1_0")
              , [Build(Anno(Int("48"), Op("Nil", [])))]
              , []
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Str("42"), Op("Nil", []))
                    , Anno(Int("4"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(Anno(Str("0042"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "is_quoted_chars_0_1"
        , []
        , [VarDec("w_26", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["x_26", "n_8"]
          , Seq(
              Match(Var("x_26"))
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("w_26"), Var("n_8")])
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("n_8"))
                , Seq(
                    CallT(SVar("last_0_0"), [], [])
                  , Seq(Match(Var("w_26")), Build(Var("x_26")))
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_quoted_0_1"
        , []
        , [VarDec("s_26", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["t_26"]
          , Seq(
              Match(Var("t_26"))
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  CallT(SVar("is_quoted_chars_0_1"), [], [Var("s_26")])
                , Build(Var("t_26"))
                )
              )
            )
          )
        )
      , SDefT(
          "is_double_quoted_0_0"
        , []
        , []
        , Scope(
            ["e_8", "f_8"]
          , Seq(
              Match(Var("f_8"))
            , Seq(
                Build(Anno(Int("34"), Op("Nil", [])))
              , Seq(
                  Match(Var("e_8"))
                , Seq(
                    Build(Var("f_8"))
                  , CallT(SVar("is_quoted_0_1"), [], [Var("e_8")])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_double_quote_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("is-double-quote 1"), Op("Nil", [])))
              , CallT(SVar("is_double_quoted_0_0"), [], [])
              , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
              , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_and_fail_3_0")
              , [ Build(Anno(Str("is-double-quote 2"), Op("Nil", [])))
                , CallT(SVar("is_double_quoted_0_0"), [], [])
                , Build(Anno(Str("fnord"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ Build(Anno(Str("is-double-quote 3"), Op("Nil", [])))
                  , CallT(SVar("is_double_quoted_0_0"), [], [])
                  , Build(Anno(Str("\"fnord"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ Build(Anno(Str("is-double-quote 4"), Op("Nil", [])))
                    , CallT(SVar("is_double_quoted_0_0"), [], [])
                    , Build(Anno(Str(""), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("is-double-quote 5"), Op("Nil", [])))
                      , CallT(SVar("is_double_quoted_0_0"), [], [])
                      , Build(Anno(Str("\"\""), Op("Nil", [])))
                      , Build(Anno(Str("\"\""), Op("Nil", [])))
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("is-double-quote 6"), Op("Nil", [])))
                      , CallT(SVar("is_double_quoted_0_0"), [], [])
                      , Build(Anno(Str("\" \""), Op("Nil", [])))
                      , Build(Anno(Str("\" \""), Op("Nil", [])))
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "s_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "t_116"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  , CallT(SVar("s_116"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("t_116"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("t_116"), [], [])
          )
        )
      , SDefT(
          "init_0_0"
        , []
        , []
        , CallT(
            SVar("at_last_1_0")
          , [CallT(SVar("Tl_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["f_32", "v_15"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("f_32")]), Wld)
              )
            , Seq(Match(Var("v_15")), Build(Var("f_32")))
            )
          )
        )
      , SDefT(
          "Last_0_0"
        , []
        , []
        , Scope(
            ["g_32", "w_15"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Var("g_32"), Anno(Op("Nil", []), Wld)]
                  )
                , Wld
                )
              )
            , Seq(Match(Var("w_15")), Build(Var("g_32")))
            )
          )
        )
      , SDefT(
          "last_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "p_115"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Last_0_0"), [], [])
                , Id
                , Seq(
                    CallT(SVar("Tl_0_0"), [], [])
                  , CallT(SVar("p_115"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("p_115"), [], [])
          )
        )
      , SDefT(
          "Hd_0_0"
        , []
        , []
        , Scope(
            ["e_32", "u_15"]
          , Seq(
              Match(
                Anno(Op("Cons", [Var("e_32"), Wld]), Wld)
              )
            , Seq(Match(Var("u_15")), Build(Var("e_32")))
            )
          )
        )
      , SDefT(
          "unquote_chars_2_0"
        , [ VarDec(
              "v_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["b_27", "a_27"]
          , Seq(
              Seq(
                Match(Var("a_27"))
              , Seq(
                  CallT(SVar("Hd_0_0"), [], [])
                , Seq(
                    CallT(SVar("v_113"), [], [])
                  , Build(Var("a_27"))
                  )
                )
              )
            , Seq(
                Match(Var("b_27"))
              , Seq(
                  CallT(SVar("last_0_0"), [], [])
                , Seq(
                    CallT(SVar("w_113"), [], [])
                  , Seq(
                      Build(Var("b_27"))
                    , Seq(
                        CallT(SVar("Tl_0_0"), [], [])
                      , CallT(SVar("init_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "unquote_chars_1_0"
        , [ VarDec(
              "u_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("unquote_chars_2_0")
          , [ CallT(SVar("u_113"), [], [])
            , CallT(SVar("u_113"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "un_double_quote_chars_0_0"
        , []
        , []
        , CallT(
            SVar("unquote_chars_1_0")
          , [Match(Anno(Int("34"), Wld))]
          , []
          )
        )
      , SDefT(
          "un_double_quote_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("un_double_quote_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "un_double_quote_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("un-double-quote-test"), Op("Nil", [])))
            , CallT(SVar("un_double_quote_0_0"), [], [])
            , Build(Anno(Str("\"fnord\""), Op("Nil", [])))
            , Build(Anno(Str("fnord"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "concat_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "j_116"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , Scope(
                    ["y_30", "z_30", "g_14", "h_14", "f_14"]
                  , Seq(
                      Match(
                        Anno(
                          Op("Cons", [Var("y_30"), Var("z_30")])
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("f_14"))
                      , Seq(
                          Match(Var("h_14"))
                        , Seq(
                            Build(Var("y_30"))
                          , Seq(
                              CallT(
                                SVar("at_end_1_0")
                              , [Seq(
                                   Build(Var("z_30"))
                                 , CallT(SVar("j_116"), [], [])
                                 )]
                              , []
                              )
                            , Match(Var("g_14"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , CallT(SVar("j_116"), [], [])
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "n_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["f_1", "c_1", "e_1", "g_1", "h_1"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("c_1"), Var("e_1")])
                , Var("f_1")
                )
              )
            , Seq(
                Build(Var("c_1"))
              , Seq(
                  CallT(SVar("n_104"), [], [])
                , Seq(
                    Match(Var("g_1"))
                  , Seq(
                      Build(Var("e_1"))
                    , Seq(
                        CallT(SVar("o_104"), [], [])
                      , Seq(
                          Match(Var("h_1"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("g_1"), Var("h_1")])
                            , Var("f_1")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "at_end_1_0"
        , [ VarDec(
              "m_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "n_116"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("n_116"), [], [])]
                  , []
                  )
                , Id
                , Seq(
                    CallT(SVar("Nil_0_0"), [], [])
                  , CallT(SVar("m_116"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("n_116"), [], [])
          )
        )
      , SDefT(
          "conc_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["v_30", "w_30", "a_14", "b_14", "z_13"]
            , Seq(
                Match(
                  Anno(
                    Op("", [Var("v_30"), Var("w_30")])
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("z_13"))
                , Seq(
                    Match(Var("b_14"))
                  , Seq(
                      Build(Var("v_30"))
                    , Seq(
                        CallT(SVar("at_end_1_0"), [Build(Var("w_30"))], [])
                      , Match(Var("a_14"))
                      )
                    )
                  )
                )
              )
            )
          , Id
          , Scope(
              ["x_30", "d_14", "e_14", "c_14"]
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("x_30"))
                  , Wld
                  )
                )
              , Seq(
                  Match(Var("c_14"))
                , Seq(
                    Match(Var("e_14"))
                  , Seq(
                      Build(Var("x_30"))
                    , Seq(
                        CallT(SVar("concat_0_0"), [], [])
                      , Match(Var("d_14"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "quote_chars_0_0"
        , []
        , []
        , Scope(
            ["c_27", "d_27", "u_8", "v_8", "t_8"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("d_27"), Var("c_27")])
                , Wld
                )
              )
            , Seq(
                Match(Var("t_8"))
              , Seq(
                  Match(Var("v_8"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(
                              Op("Cons", [Var("d_27"), Var("c_27")])
                            , Op("Nil", [])
                            )
                          , Anno(
                              Op(
                                "Cons"
                              , [Var("d_27"), Anno(Op("Nil", []), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("conc_0_0"), [], [])
                    , Match(Var("u_8"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "single_quote_chars_0_0"
        , []
        , []
        , Scope(
            ["w_8", "x_8"]
          , Seq(
              Match(Var("x_8"))
            , Seq(
                Match(Var("w_8"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("39"), Op("Nil", [])), Var("w_8")]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("quote_chars_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "q_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("q_114"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "single_quote_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [CallT(SVar("single_quote_chars_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "single_quote_test_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("single-quote-test"), Op("Nil", [])))
            , CallT(SVar("single_quote_0_0"), [], [])
            , Build(Anno(Str("foobar"), Op("Nil", [])))
            , Build(Anno(Str("'foobar'"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "quote_tests_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("single_quote_test_0_0"), [], [])
          , Seq(
              CallT(SVar("un_double_quote_test_0_0"), [], [])
            , CallT(SVar("is_double_quote_test_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "concat_strings_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("concat-strings-1"), Op("Nil", [])))
              , CallT(SVar("concat_strings_0_0"), [], [])
              , Build(Anno(Op("Nil", []), Op("Nil", [])))
              , Build(Anno(Str(""), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("concat-strings-2"), Op("Nil", [])))
                , CallT(SVar("concat_strings_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Str("a"), Op("Nil", []))
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str(""), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(Anno(Str("a"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("concat-strings-3"), Op("Nil", [])))
                  , CallT(SVar("concat_strings_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Str(""), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("a"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(Anno(Str("a"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("concat-strings-4"), Op("Nil", [])))
                    , CallT(SVar("concat_strings_0_0"), [], [])
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Anno(Str("hello "), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("world"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Build(Anno(Str("hello world"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("concat-strings-5"), Op("Nil", [])))
                      , CallT(SVar("concat_strings_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Str("hello "), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Str("world"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op(
                              "Cons"
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          )
                        )
                      , Build(Anno(Str("hello world"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("concat-strings-6"), Op("Nil", [])))
                        , CallT(SVar("concat_strings_0_0"), [], [])
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("hello"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            , Op(
                                "Cons"
                              , [ Anno(Int("1"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            )
                          )
                        , Build(Anno(Str("hello"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("concat-strings-7"), Op("Nil", [])))
                        , CallT(SVar("concat_strings_0_0"), [], [])
                        , Build(
                            Anno(
                              Op("Nil", [])
                            , Op(
                                "Cons"
                              , [ Anno(Int("1"), Op("Nil", []))
                                , Anno(Op("Nil", []), Op("Nil", []))
                                ]
                              )
                            )
                          )
                        , Build(Anno(Str(""), Op("Nil", [])))
                        ]
                      , []
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strlen_0_0"
        , []
        , []
        , Scope(
            ["b_28"]
          , Seq(
              Match(Var("b_28"))
            , PrimT("SSL_strlen", [], [Var("b_28")])
            )
          )
        )
      , SDefT(
          "strlen_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("strlen-1"), Op("Nil", [])))
              , CallT(SVar("strlen_0_0"), [], [])
              , Build(Anno(Str(""), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("strlen-2"), Op("Nil", [])))
                , CallT(SVar("strlen_0_0"), [], [])
                , Build(Anno(Str("a"), Op("Nil", [])))
                , Build(Anno(Int("1"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("strlen-3"), Op("Nil", [])))
                , CallT(SVar("strlen_0_0"), [], [])
                , Build(Anno(Str("hello world"), Op("Nil", [])))
                , Build(Anno(Int("11"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "strcat_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("strcat-1"), Op("Nil", [])))
              , CallT(SVar("strcat_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str(""), Op("Nil", []))
                      , Anno(Str(""), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(Anno(Str(""), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("strcat-2"), Op("Nil", [])))
                , CallT(SVar("strcat_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Str("a"), Op("Nil", []))
                        , Anno(Str(""), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(Anno(Str("a"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("strcat-3"), Op("Nil", [])))
                  , CallT(SVar("strcat_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Str(""), Op("Nil", []))
                          , Anno(Str("a"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(Anno(Str("a"), Op("Nil", [])))
                  ]
                , []
                )
              , CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("strcat-4"), Op("Nil", [])))
                  , CallT(SVar("strcat_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Str("hello "), Op("Nil", []))
                          , Anno(Str("world"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(Anno(Str("hello world"), Op("Nil", [])))
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["i_28"]
          , Seq(
              Match(Var("i_28"))
            , PrimT("SSL_implode_string", [], [Var("i_28")])
            )
          )
        )
      , SDefT(
          "print_failure_0_1"
        , []
        , [VarDec("n_88", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("debug_1_0")
          , [Seq(
               Build(Var("n_88"))
             , CallT(SVar("sunit_failure_string_0_0"), [], [])
             )]
          , []
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "p_145"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("p_145"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "d_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "e_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "f_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["i_89", "j_89"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("d_146"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("f_146"), [], [])]
                      , []
                      )
                    , CallT(SVar("e_146"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("i_89"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("g_146"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("j_89"))
                      , GuardedLChoice(
                          Seq(Build(Var("j_89")), Match(Var("i_89")))
                        , Id
                        , Scope(
                            ["u_196", "v_196", "s_196", "t_196"]
                          , Seq(
                              Build(Var("i_89"))
                            , Seq(
                                Match(Var("t_196"))
                              , Seq(
                                  Build(Anno(Str("  result not equal : "), Op("Nil", [])))
                                , Seq(
                                    Match(Var("s_196"))
                                  , Seq(
                                      Build(Var("t_196"))
                                    , Seq(
                                        CallT(SVar("print_failure_0_1"), [], [Var("s_196")])
                                      , Seq(
                                          Build(Var("j_89"))
                                        , Seq(
                                            Match(Var("v_196"))
                                          , Seq(
                                              Build(Anno(Str("  expected         : "), Op("Nil", [])))
                                            , Seq(
                                                Match(Var("u_196"))
                                              , Seq(
                                                  Build(Var("v_196"))
                                                , Seq(
                                                    CallT(SVar("print_failure_0_1"), [], [Var("u_196")])
                                                  , Fail
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["f_28"]
          , Seq(
              Match(Var("f_28"))
            , PrimT("SSL_concat_strings", [], [Var("f_28")])
            )
          )
        )
      , SDefT(
          "sunit_color_plain_0_0"
        , []
        , []
        , Scope(
            ["q_196", "r_196"]
          , Seq(
              Match(Var("r_196"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("q_196"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("q_196"), Anno(Str("[m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["d_28", "e_28"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("d_28"), Var("e_28")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("d_28"), Var("e_28")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["c_28"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("c_28"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("c_28"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_color_red_0_0"
        , []
        , []
        , Scope(
            ["o_196", "p_196"]
          , Seq(
              Match(Var("p_196"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("o_196"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("o_196"), Anno(Str("[01;31m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "getenv_0_0"
        , []
        , []
        , Scope(
            ["f_104"]
          , Seq(
              Match(Var("f_104"))
            , PrimT("SSL_getenv", [], [Var("f_104")])
            )
          )
        )
      , SDefT(
          "sunit_failure_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["m_88"]
            , Seq(
                Match(Var("m_88"))
              , Seq(
                  Build(Anno(Str("ENABLE_COLORS"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("getenv_0_0"), [], [])
                  , Seq(
                      Match(Anno(Str("true"), Wld))
                    , Build(Var("m_88"))
                    )
                  )
                )
              )
            )
          , Scope(
              ["i_196", "j_196", "k_196", "n_196", "m_196"]
            , Seq(
                Scope(
                  ["l_196"]
                , Seq(
                    Match(Var("l_196"))
                  , Seq(
                      CallT(SVar("sunit_color_red_0_0"), [], [])
                    , Seq(Match(Var("i_196")), Build(Var("l_196")))
                    )
                  )
                )
              , Seq(
                  Seq(
                    Seq(
                      Match(Var("m_196"))
                    , Seq(Match(Var("j_196")), Build(Var("m_196")))
                    )
                  , Seq(
                      Match(Var("n_196"))
                    , Seq(
                        CallT(SVar("sunit_color_plain_0_0"), [], [])
                      , Seq(
                          Match(Var("k_196"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Var("i_196")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("j_196")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("k_196"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "print_failure_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("sunit_failure_string_0_0"), [], [])
          , CallT(SVar("debug_0_0"), [], [])
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "c_133"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["l_74"]
          , Seq(
              Match(Var("l_74"))
            , Seq(
                CallT(SVar("c_133"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("l_74"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "o_145"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("o_145"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["r_34", "s_34"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("r_34"), Var("s_34")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("r_34"), Var("s_34")])
              , Id
              , PrimT("SSL_addr", [], [Var("r_34"), Var("s_34")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["h_19", "i_19"]
          , Seq(
              Match(Var("i_19"))
            , Seq(
                Match(Var("h_19"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("h_19"), Anno(Int("1"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("add_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["p_74", "s_181", "t_181"]
          , Seq(
              Match(Var("p_74"))
            , Seq(
                Match(Var("t_181"))
              , Seq(
                  Match(Var("s_181"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Op("stderr", []), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [Var("s_181"), Anno(Op("Nil", []), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("printnl_0_0"), [], [])
                    , Build(Var("p_74"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "q_145"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "r_145"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["o_88"]
          , Seq(
              Match(Var("o_88"))
            , Seq(
                CallT(SVar("q_145"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("o_88"))
                  , GuardedLChoice(
                      Scope(
                        ["p_88"]
                      , Seq(
                          Match(Var("p_88"))
                        , Seq(
                            CallT(SVar("r_145"), [], [])
                          , Seq(
                              Build(Var("p_88"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "r_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "s_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "t_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("r_146"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("t_146"), [], [])]
                  , []
                  )
                , GuardedLChoice(CallT(SVar("s_146"), [], []), Fail, Id)
                )
              , Id
              , Seq(
                  Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "o_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("o_146"), [], [])
            , CallT(SVar("p_146"), [], [])
            , CallT(SVar("q_146"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["j_28"]
          , Seq(
              Match(Var("j_28"))
            , PrimT("SSL_explode_string", [], [Var("j_28")])
            )
          )
        )
      , SDefT(
          "explode_implode_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("explode-implode-test1"), Op("Nil", [])))
              , Seq(
                  CallT(SVar("explode_string_0_0"), [], [])
                , CallT(SVar("implode_string_0_0"), [], [])
                )
              , Build(Anno(Str("foOBaR"), Op("Nil", [])))
              , Build(Anno(Str("foOBaR"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("explode-implode-test2"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , CallT(SVar("implode_string_0_0"), [], [])
                  )
                , Build(Anno(Str("\n\t"), Op("Nil", [])))
                , Build(Anno(Str("\n\t"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ Build(Anno(Str("implode-string applied to non list"), Op("Nil", [])))
                  , CallT(SVar("implode_string_0_0"), [], [])
                  , Build(Anno(Str("foo"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ Build(Anno(Str("implode-string applied to non list"), Op("Nil", [])))
                    , CallT(SVar("implode_string_0_0"), [], [])
                    , Build(Anno(Int("1"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("implode-string on simple list."), Op("Nil", [])))
                      , CallT(SVar("implode_string_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("97"), Op("Nil", []))
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("98"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("99"), Op("Nil", []))
                                          , Anno(Op("Nil", []), Op("Nil", []))
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Build(Anno(Str("abc"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("implode-string on empty list."), Op("Nil", [])))
                        , CallT(SVar("implode_string_0_0"), [], [])
                        , Build(Anno(Op("Nil", []), Op("Nil", [])))
                        , Build(Anno(Str(""), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("implode-string on empty list with annotation."), Op("Nil", [])))
                          , CallT(SVar("implode_string_0_0"), [], [])
                          , Build(
                              Anno(
                                Op("Nil", [])
                              , Op(
                                  "Cons"
                                , [ Anno(Int("1"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              )
                            )
                          , Build(Anno(Str(""), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("implode-string on list where nil has annotation."), Op("Nil", [])))
                            , CallT(SVar("implode_string_0_0"), [], [])
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("97"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("98"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("99"), Op("Nil", []))
                                                , Anno(
                                                    Op("Nil", [])
                                                  , Op(
                                                      "Cons"
                                                    , [ Anno(Int("1"), Op("Nil", []))
                                                      , Anno(Op("Nil", []), Op("Nil", []))
                                                      ]
                                                    )
                                                  )
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Build(Anno(Str("abc"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("implode-string on list where nil has annotation."), Op("Nil", [])))
                            , CallT(SVar("implode_string_0_0"), [], [])
                            , Build(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [ Anno(Int("97"), Op("Nil", []))
                                    , Anno(
                                        Op(
                                          "Cons"
                                        , [ Anno(Int("98"), Op("Nil", []))
                                          , Anno(
                                              Op(
                                                "Cons"
                                              , [ Anno(Int("99"), Op("Nil", []))
                                                , Anno(Op("Nil", []), Op("Nil", []))
                                                ]
                                              )
                                            , Op("Nil", [])
                                            )
                                          ]
                                        )
                                      , Op("Nil", [])
                                      )
                                    ]
                                  )
                                , Op(
                                    "Cons"
                                  , [ Anno(Int("1"), Op("Nil", []))
                                    , Anno(Op("Nil", []), Op("Nil", []))
                                    ]
                                  )
                                )
                              )
                            , Build(Anno(Str("abc"), Op("Nil", [])))
                            ]
                          , []
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "y_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_104"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["s_1", "k_1", "l_1", "f_2", "g_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("k_1"), Var("l_1")])
                , Var("s_1")
                )
              )
            , Seq(
                Build(Var("k_1"))
              , Seq(
                  CallT(SVar("y_104"), [], [])
                , Seq(
                    Match(Var("f_2"))
                  , Seq(
                      Build(Var("l_1"))
                    , Seq(
                        CallT(SVar("z_104"), [], [])
                      , Seq(
                          Match(Var("g_2"))
                        , Build(
                            Anno(
                              Op("", [Var("f_2"), Var("g_2")])
                            , Var("s_1")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["x_74", "y_74", "z_74"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("x_74"), Var("y_74")])
                , Wld
                )
              )
            , Seq(
                Match(Var("z_74"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("x_74"), Var("y_74")])
                , Build(Var("z_74"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "l_133"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_74", "u_181", "v_181", "x_181", "w_181"]
          , Seq(
              Match(Var("q_74"))
            , Seq(
                Seq(
                  Match(Var("w_181"))
                , Seq(
                    CallT(SVar("l_133"), [], [])
                  , Seq(Match(Var("u_181")), Build(Var("w_181")))
                  )
                )
              , Seq(
                  Match(Var("x_181"))
                , Seq(
                    Match(Var("v_181"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Var("u_181")
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("v_181"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("q_74"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "b_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "c_146"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("b_146"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("c_146"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("string-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("explode_implode_test_0_0"), [], [])
              , Seq(
                  CallT(SVar("strcat_tests_0_0"), [], [])
                , Seq(
                    CallT(SVar("strlen_tests_0_0"), [], [])
                  , Seq(
                      CallT(SVar("concat_strings_tests_0_0"), [], [])
                    , Seq(
                        CallT(SVar("quote_tests_0_0"), [], [])
                      , Seq(
                          CallT(SVar("padd_with_test_0_0"), [], [])
                        , Seq(
                            CallT(SVar("is_substring_test_0_0"), [], [])
                          , Seq(
                              CallT(SVar("copy_char_test_0_0"), [], [])
                            , Seq(
                                CallT(SVar("upper_case_test_0_0"), [], [])
                              , Seq(
                                  CallT(SVar("escape_tests_0_0"), [], [])
                                , Seq(
                                    CallT(SVar("string_sort_test_0_0"), [], [])
                                  , Seq(
                                      CallT(SVar("string_tokenize_test_0_0"), [], [])
                                    , Seq(
                                        CallT(SVar("split_tests_0_0"), [], [])
                                      , CallT(SVar("string_replace_test_0_0"), [], [])
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
