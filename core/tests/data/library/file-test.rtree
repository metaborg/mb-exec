Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("W_OK", ConstType(Sort("AccessPermission", [])))
          , OpDecl(
              "Stream"
            , FunType(
                [ConstType(Sort("ImplDep", []))]
              , ConstType(Sort("Stream", []))
              )
            )
          , OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              "Hashtable"
            , FunType(
                [ConstType(Sort("ImplDep", []))]
              , ConstType(Sort("Hashtable", []))
              )
            )
          , OpDecl("Emergency", ConstType(Sort("Severity", [])))
          , OpDecl("Alert", ConstType(Sort("Severity", [])))
          , OpDecl("Critical", ConstType(Sort("Severity", [])))
          , OpDecl("Error", ConstType(Sort("Severity", [])))
          , OpDecl("Warning", ConstType(Sort("Severity", [])))
          , OpDecl("Notice", ConstType(Sort("Severity", [])))
          , OpDecl("Info", ConstType(Sort("Severity", [])))
          , OpDecl("Debug", ConstType(Sort("Severity", [])))
          , OpDecl("Vomit", ConstType(Sort("Severity", [])))
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "test_extension_1_0"
        , [ VarDec(
              "d_126"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["q_51"]
          , Seq(
              Match(Var("q_51"))
            , Seq(
                CallT(SVar("get_extension_0_0"), [], [])
              , Seq(
                  CallT(SVar("d_126"), [], [])
                , Build(Var("q_51"))
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_0_1"
        , []
        , [VarDec("d_56", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("list_tokenize_1_0")
          , [ Scope(
                ["e_56"]
              , Seq(
                  Match(Var("e_56"))
                , Seq(
                    Build(Var("d_56"))
                  , CallT(SVar("fetch_1_0"), [Match(Var("e_56"))], [])
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "get_extension_0_0"
        , []
        , []
        , Scope(
            ["v_51", "w_51", "x_51", "y_51", "y_157", "z_157"]
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                Seq(
                  Match(Var("z_157"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Anno(Int("46"), Op("Nil", []))
                          , Anno(Op("Nil", []), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      Match(Var("y_157"))
                    , Seq(
                        Build(Var("z_157"))
                      , CallT(SVar("list_tokenize_0_1"), [], [Var("y_157")])
                      )
                    )
                  )
                )
              , Seq(
                  Match(
                    Anno(
                      Op(
                        "Cons"
                      , [Wld, Anno(Op("Cons", [Wld, Wld]), Wld)]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    CallT(
                      SVar("at_suffix_1_0")
                    , [ Seq(
                          Match(
                            Anno(
                              Op(
                                "Cons"
                              , [ Wld
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [Wld, Anno(Op("Nil", []), Wld)]
                                    )
                                  , Wld
                                  )
                                ]
                              )
                            , Wld
                            )
                          )
                        , Match(Var("v_51"))
                        )
                      ]
                    , []
                    )
                  , Seq(
                      Build(Var("v_51"))
                    , Seq(
                        Match(
                          Anno(
                            Op(
                              "Cons"
                            , [ Var("w_51")
                              , Anno(
                                  Op(
                                    "Cons"
                                  , [Var("x_51"), Anno(Op("Nil", []), Wld)]
                                  )
                                , Wld
                                )
                              ]
                            )
                          , Wld
                          )
                        )
                      , Seq(
                          Match(Var("y_51"))
                        , Seq(
                            Build(Var("x_51"))
                          , Seq(
                              GuardedLChoice(
                                CallT(
                                  SVar("fetch_1_0")
                                , [ GuardedLChoice(
                                      Match(Anno(Int("47"), Wld))
                                    , Id
                                    , Match(Anno(Int("92"), Wld))
                                    )
                                  ]
                                , []
                                )
                              , Fail
                              , Id
                              )
                            , Seq(
                                Build(Var("w_51"))
                              , Seq(
                                  CallT(SVar("last_0_0"), [], [])
                                , Seq(
                                    GuardedLChoice(
                                      GuardedLChoice(
                                        Match(Anno(Int("47"), Wld))
                                      , Id
                                      , Match(Anno(Int("92"), Wld))
                                      )
                                    , Fail
                                    , Id
                                    )
                                  , Seq(
                                      Build(Var("x_51"))
                                    , CallT(SVar("implode_string_0_0"), [], [])
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "has_extension_1_0"
        , [ VarDec(
              "u_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_50", "z_50"]
          , Seq(
              CallT(
                SVar("obsolete_1_0")
              , [Build(Anno(Str("has-extension(s); use has-extension(|t), without a dot in the extension argument."), Op("Nil", [])))]
              , []
              )
            , Seq(
                Match(Var("z_50"))
              , Seq(
                  CallT(SVar("u_125"), [], [])
                , Seq(
                    CallT(SVar("explode_string_0_0"), [], [])
                  , Seq(
                      CallT(
                        SVar("try_1_0")
                      , [ Scope(
                            ["q_156"]
                          , Seq(
                              Match(
                                Anno(
                                  Op(
                                    "Cons"
                                  , [Anno(Int("46"), Wld), Var("q_156")]
                                  )
                                , Wld
                                )
                              )
                            , Build(Var("q_156"))
                            )
                          )
                        ]
                      , []
                      )
                    , Seq(
                        CallT(SVar("implode_string_0_0"), [], [])
                      , Seq(
                          Match(Var("y_50"))
                        , Seq(
                            Build(Var("z_50"))
                          , CallT(SVar("has_extension_0_1"), [], [Var("y_50")])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "has_extension_0_1"
        , []
        , [VarDec("p_51", ConstType(Sort("ATerm", [])))]
        , CallT(SVar("test_extension_1_0"), [Match(Var("p_51"))], [])
        )
      , SDefT(
          "add_extension_0_0"
        , []
        , []
        , Scope(
            ["r_51", "s_51", "u_157", "v_157", "t_157"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("r_51"), Var("s_51")])
                , Wld
                )
              )
            , Seq(
                Match(Var("t_157"))
              , Seq(
                  Match(Var("v_157"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          "Cons"
                        , [ Var("r_51")
                          , Anno(
                              Op(
                                "Cons"
                              , [ Anno(Str("."), Op("Nil", []))
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [Var("s_51"), Anno(Op("Nil", []), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("concat_strings_0_0"), [], [])
                    , Match(Var("u_157"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "guarantee_extension_0_1"
        , []
        , [VarDec("o_51", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["r_157", "s_157"]
          , Seq(
              CallT(SVar("remove_extension_0_0"), [], [])
            , Seq(
                Match(Var("s_157"))
              , Seq(
                  Match(Var("r_157"))
                , Seq(
                    Build(
                      Anno(
                        Op("", [Var("r_157"), Var("o_51")])
                      , Op("Nil", [])
                      )
                    )
                  , CallT(SVar("add_extension_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "remove_extension_0_0"
        , []
        , []
        , Scope(
            ["t_51"]
          , GuardedLChoice(
              Scope(
                ["u_51", "w_157", "x_157"]
              , Seq(
                  Match(Var("u_51"))
                , Seq(
                    CallT(SVar("get_extension_0_0"), [], [])
                  , Seq(
                      CallT(SVar("explode_string_0_0"), [], [])
                    , Seq(
                        Match(Var("x_157"))
                      , Seq(
                          Match(Var("w_157"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [Anno(Int("46"), Op("Nil", [])), Var("w_157")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(Match(Var("t_51")), Build(Var("u_51")))
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  CallT(
                    SVar("at_suffix_1_0")
                  , [ Seq(
                        Match(Var("t_51"))
                      , Build(Anno(Op("Nil", []), Op("Nil", [])))
                      )
                    ]
                  , []
                  )
                , CallT(SVar("implode_string_0_0"), [], [])
                )
              )
            , Id
            )
          )
        )
      , SDefT(
          "file_extension_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("remove-extension 1"), Op("Nil", [])))
              , CallT(SVar("remove_extension_0_0"), [], [])
              , Build(Anno(Str("foo.str"), Op("Nil", [])))
              , Build(Anno(Str("foo"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("remove-extension 2"), Op("Nil", [])))
                , CallT(SVar("remove_extension_0_0"), [], [])
                , Build(Anno(Str("foo"), Op("Nil", [])))
                , Build(Anno(Str("foo"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("remove-extension 3"), Op("Nil", [])))
                  , CallT(SVar("remove_extension_0_0"), [], [])
                  , Build(Anno(Str("foo.rtree"), Op("Nil", [])))
                  , Build(Anno(Str("foo"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("remove-extension 4"), Op("Nil", [])))
                    , CallT(SVar("remove_extension_0_0"), [], [])
                    , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
                    , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("remove-extension 5"), Op("Nil", [])))
                      , CallT(SVar("remove_extension_0_0"), [], [])
                      , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
                      , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("remove-extension 6"), Op("Nil", [])))
                        , CallT(SVar("remove_extension_0_0"), [], [])
                        , Build(Anno(Str("/bar.foo/fred.str"), Op("Nil", [])))
                        , Build(Anno(Str("/bar.foo/fred"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("remove-extension 7"), Op("Nil", [])))
                          , CallT(SVar("remove_extension_0_0"), [], [])
                          , Build(Anno(Str("/bar.foo/fred"), Op("Nil", [])))
                          , Build(Anno(Str("/bar.foo/fred"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("remove-extension 8"), Op("Nil", [])))
                            , CallT(SVar("remove_extension_0_0"), [], [])
                            , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
                            , Build(Anno(Str("/bar.foo"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("remove-extension 9"), Op("Nil", [])))
                              , CallT(SVar("remove_extension_0_0"), [], [])
                              , Build(Anno(Str("/bar.foo"), Op("Nil", [])))
                              , Build(Anno(Str("/bar"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("remove-extension 10"), Op("Nil", [])))
                                , CallT(SVar("remove_extension_0_0"), [], [])
                                , Build(Anno(Str("/bar.foo.rtree"), Op("Nil", [])))
                                , Build(Anno(Str("/bar.foo"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("remove-extension 11"), Op("Nil", [])))
                                  , CallT(SVar("remove_extension_0_0"), [], [])
                                  , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
                                  , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ Build(Anno(Str("remove-extension 12"), Op("Nil", [])))
                                    , CallT(SVar("remove_extension_0_0"), [], [])
                                    , Build(Anno(Str("../bar/foo.str"), Op("Nil", [])))
                                    , Build(Anno(Str("../bar/foo"), Op("Nil", [])))
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ Build(Anno(Str("remove-extension 13"), Op("Nil", [])))
                                      , CallT(SVar("remove_extension_0_0"), [], [])
                                      , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
                                      , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ Build(Anno(Str("remove-extension 14"), Op("Nil", [])))
                                        , CallT(SVar("remove_extension_0_0"), [], [])
                                        , Build(Anno(Str("../bar/foo"), Op("Nil", [])))
                                        , Build(Anno(Str("../bar/foo"), Op("Nil", [])))
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ Build(Anno(Str("remove-extension 15"), Op("Nil", [])))
                                          , CallT(SVar("remove_extension_0_0"), [], [])
                                          , Build(Anno(Str("./bar.foo/fred.str"), Op("Nil", [])))
                                          , Build(Anno(Str("./bar.foo/fred"), Op("Nil", [])))
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ Build(Anno(Str("remove-extension 16"), Op("Nil", [])))
                                            , CallT(SVar("remove_extension_0_0"), [], [])
                                            , Build(Anno(Str("../bar.foo/fred.str"), Op("Nil", [])))
                                            , Build(Anno(Str("../bar.foo/fred"), Op("Nil", [])))
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("remove-extension 17"), Op("Nil", [])))
                                              , CallT(SVar("remove_extension_0_0"), [], [])
                                              , Build(Anno(Str("./bar/../foo"), Op("Nil", [])))
                                              , Build(Anno(Str("./bar/../foo"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          , Seq(
                                              CallT(
                                                SVar("apply_test_4_0")
                                              , [ Build(Anno(Str("remove-extension 18"), Op("Nil", [])))
                                                , CallT(SVar("remove_extension_0_0"), [], [])
                                                , Build(Anno(Str("../bar/../foo"), Op("Nil", [])))
                                                , Build(Anno(Str("../bar/../foo"), Op("Nil", [])))
                                                ]
                                              , []
                                              )
                                            , Seq(
                                                CallT(
                                                  SVar("apply_test_4_0")
                                                , [ Build(Anno(Str("remove-extension 19"), Op("Nil", [])))
                                                  , CallT(SVar("remove_extension_0_0"), [], [])
                                                  , Build(Anno(Str("./bar/.foo.str"), Op("Nil", [])))
                                                  , Build(Anno(Str("./bar/.foo"), Op("Nil", [])))
                                                  ]
                                                , []
                                                )
                                              , Seq(
                                                  CallT(
                                                    SVar("apply_test_4_0")
                                                  , [ Build(Anno(Str("remove-extension 20"), Op("Nil", [])))
                                                    , CallT(SVar("remove_extension_0_0"), [], [])
                                                    , Build(Anno(Str("../bar/.foo.str"), Op("Nil", [])))
                                                    , Build(Anno(Str("../bar/.foo"), Op("Nil", [])))
                                                    ]
                                                  , []
                                                  )
                                                , Seq(
                                                    CallT(
                                                      SVar("apply_test_4_0")
                                                    , [ Build(Anno(Str("remove-extension 21"), Op("Nil", [])))
                                                      , CallT(SVar("remove_extension_0_0"), [], [])
                                                      , Build(Anno(Str("./bar/.foo"), Op("Nil", [])))
                                                      , Build(Anno(Str("./bar/.foo"), Op("Nil", [])))
                                                      ]
                                                    , []
                                                    )
                                                  , Seq(
                                                      CallT(
                                                        SVar("apply_test_4_0")
                                                      , [ Build(Anno(Str("remove-extension 22"), Op("Nil", [])))
                                                        , CallT(SVar("remove_extension_0_0"), [], [])
                                                        , Build(Anno(Str("../bar/.foo"), Op("Nil", [])))
                                                        , Build(Anno(Str("../bar/.foo"), Op("Nil", [])))
                                                        ]
                                                      , []
                                                      )
                                                    , Seq(
                                                        CallT(
                                                          SVar("apply_test_4_0")
                                                        , [ Build(Anno(Str("remove-extension 23"), Op("Nil", [])))
                                                          , CallT(SVar("remove_extension_0_0"), [], [])
                                                          , Build(Anno(Str("../bar/.."), Op("Nil", [])))
                                                          , Build(Anno(Str("../bar/.."), Op("Nil", [])))
                                                          ]
                                                        , []
                                                        )
                                                      , Seq(
                                                          CallT(
                                                            SVar("apply_test_4_0")
                                                          , [ Build(Anno(Str("guarantee-extension 1"), Op("Nil", [])))
                                                            , Scope(
                                                                ["a_0", "b_0"]
                                                              , Seq(
                                                                  Match(Var("b_0"))
                                                                , Seq(
                                                                    Build(Anno(Str("str"), Op("Nil", [])))
                                                                  , Seq(
                                                                      Match(Var("a_0"))
                                                                    , Seq(
                                                                        Build(Var("b_0"))
                                                                      , CallT(SVar("guarantee_extension_0_1"), [], [Var("a_0")])
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                            , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                            ]
                                                          , []
                                                          )
                                                        , Seq(
                                                            CallT(
                                                              SVar("apply_test_4_0")
                                                            , [ Build(Anno(Str("guarantee-extension 2"), Op("Nil", [])))
                                                              , Scope(
                                                                  ["c_0", "d_0"]
                                                                , Seq(
                                                                    Match(Var("d_0"))
                                                                  , Seq(
                                                                      Build(Anno(Str("str"), Op("Nil", [])))
                                                                    , Seq(
                                                                        Match(Var("c_0"))
                                                                      , Seq(
                                                                          Build(Var("d_0"))
                                                                        , CallT(SVar("guarantee_extension_0_1"), [], [Var("c_0")])
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              , Build(Anno(Str("foo"), Op("Nil", [])))
                                                              , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                              ]
                                                            , []
                                                            )
                                                          , Seq(
                                                              CallT(
                                                                SVar("apply_test_4_0")
                                                              , [ Build(Anno(Str("guarantee-extension 3"), Op("Nil", [])))
                                                                , Scope(
                                                                    ["e_0", "f_0"]
                                                                  , Seq(
                                                                      Match(Var("f_0"))
                                                                    , Seq(
                                                                        Build(Anno(Str("str"), Op("Nil", [])))
                                                                      , Seq(
                                                                          Match(Var("e_0"))
                                                                        , Seq(
                                                                            Build(Var("f_0"))
                                                                          , CallT(SVar("guarantee_extension_0_1"), [], [Var("e_0")])
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                , Build(Anno(Str("foo.rtree"), Op("Nil", [])))
                                                                , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                ]
                                                              , []
                                                              )
                                                            , Seq(
                                                                CallT(
                                                                  SVar("apply_test_4_0")
                                                                , [ Build(Anno(Str("guarantee-extension 4"), Op("Nil", [])))
                                                                  , Scope(
                                                                      ["g_0", "h_0"]
                                                                    , Seq(
                                                                        Match(Var("h_0"))
                                                                      , Seq(
                                                                          Build(Anno(Str("str"), Op("Nil", [])))
                                                                        , Seq(
                                                                            Match(Var("g_0"))
                                                                          , Seq(
                                                                              Build(Var("h_0"))
                                                                            , CallT(SVar("guarantee_extension_0_1"), [], [Var("g_0")])
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
                                                                  , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
                                                                  ]
                                                                , []
                                                                )
                                                              , Seq(
                                                                  CallT(
                                                                    SVar("apply_test_4_0")
                                                                  , [ Build(Anno(Str("guarantee-extension 5"), Op("Nil", [])))
                                                                    , Scope(
                                                                        ["i_0", "j_0"]
                                                                      , Seq(
                                                                          Match(Var("j_0"))
                                                                        , Seq(
                                                                            Build(Anno(Str("str"), Op("Nil", [])))
                                                                          , Seq(
                                                                              Match(Var("i_0"))
                                                                            , Seq(
                                                                                Build(Var("j_0"))
                                                                              , CallT(SVar("guarantee_extension_0_1"), [], [Var("i_0")])
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    , Build(Anno(Str("/bar/foo"), Op("Nil", [])))
                                                                    , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
                                                                    ]
                                                                  , []
                                                                  )
                                                                , Seq(
                                                                    CallT(
                                                                      SVar("apply_test_4_0")
                                                                    , [ Build(Anno(Str("guarantee-extension 6"), Op("Nil", [])))
                                                                      , Scope(
                                                                          ["k_0", "l_0"]
                                                                        , Seq(
                                                                            Match(Var("l_0"))
                                                                          , Seq(
                                                                              Build(Anno(Str("str"), Op("Nil", [])))
                                                                            , Seq(
                                                                                Match(Var("k_0"))
                                                                              , Seq(
                                                                                  Build(Var("l_0"))
                                                                                , CallT(SVar("guarantee_extension_0_1"), [], [Var("k_0")])
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      , Build(Anno(Str("/bar/foo.rtree"), Op("Nil", [])))
                                                                      , Build(Anno(Str("/bar/foo.str"), Op("Nil", [])))
                                                                      ]
                                                                    , []
                                                                    )
                                                                  , Seq(
                                                                      CallT(
                                                                        SVar("apply_test_4_0")
                                                                      , [ Build(Anno(Str("guarantee-extension 7"), Op("Nil", [])))
                                                                        , Scope(
                                                                            ["m_0", "n_0"]
                                                                          , Seq(
                                                                              Match(Var("n_0"))
                                                                            , Seq(
                                                                                Build(Anno(Str("str"), Op("Nil", [])))
                                                                              , Seq(
                                                                                  Match(Var("m_0"))
                                                                                , Seq(
                                                                                    Build(Var("n_0"))
                                                                                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("m_0")])
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
                                                                        , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
                                                                        ]
                                                                      , []
                                                                      )
                                                                    , Seq(
                                                                        CallT(
                                                                          SVar("apply_test_4_0")
                                                                        , [ Build(Anno(Str("guarantee-extension 9"), Op("Nil", [])))
                                                                          , Scope(
                                                                              ["o_0", "p_0"]
                                                                            , Seq(
                                                                                Match(Var("p_0"))
                                                                              , Seq(
                                                                                  Build(Anno(Str("str"), Op("Nil", [])))
                                                                                , Seq(
                                                                                    Match(Var("o_0"))
                                                                                  , Seq(
                                                                                      Build(Var("p_0"))
                                                                                    , CallT(SVar("guarantee_extension_0_1"), [], [Var("o_0")])
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          , Build(Anno(Str("/bar.foo.rtree"), Op("Nil", [])))
                                                                          , Build(Anno(Str("/bar.foo.str"), Op("Nil", [])))
                                                                          ]
                                                                        , []
                                                                        )
                                                                      , Seq(
                                                                          CallT(
                                                                            SVar("apply_test_4_0")
                                                                          , [ Build(Anno(Str("guarantee-extension 10"), Op("Nil", [])))
                                                                            , Scope(
                                                                                ["q_0", "r_0"]
                                                                              , Seq(
                                                                                  Match(Var("r_0"))
                                                                                , Seq(
                                                                                    Build(Anno(Str("str"), Op("Nil", [])))
                                                                                  , Seq(
                                                                                      Match(Var("q_0"))
                                                                                    , Seq(
                                                                                        Build(Var("r_0"))
                                                                                      , CallT(SVar("guarantee_extension_0_1"), [], [Var("q_0")])
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            , Build(Anno(Str("./foo.str"), Op("Nil", [])))
                                                                            , Build(Anno(Str("./foo.str"), Op("Nil", [])))
                                                                            ]
                                                                          , []
                                                                          )
                                                                        , Seq(
                                                                            CallT(
                                                                              SVar("apply_test_4_0")
                                                                            , [ Build(Anno(Str("guarantee-extension 11"), Op("Nil", [])))
                                                                              , Scope(
                                                                                  ["s_0", "t_0"]
                                                                                , Seq(
                                                                                    Match(Var("t_0"))
                                                                                  , Seq(
                                                                                      Build(Anno(Str("str"), Op("Nil", [])))
                                                                                    , Seq(
                                                                                        Match(Var("s_0"))
                                                                                      , Seq(
                                                                                          Build(Var("t_0"))
                                                                                        , CallT(SVar("guarantee_extension_0_1"), [], [Var("s_0")])
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              , Build(Anno(Str("../foo"), Op("Nil", [])))
                                                                              , Build(Anno(Str("../foo.str"), Op("Nil", [])))
                                                                              ]
                                                                            , []
                                                                            )
                                                                          , Seq(
                                                                              CallT(
                                                                                SVar("apply_test_4_0")
                                                                              , [ Build(Anno(Str("guarantee-extension 12"), Op("Nil", [])))
                                                                                , Scope(
                                                                                    ["u_0", "v_0"]
                                                                                  , Seq(
                                                                                      Match(Var("v_0"))
                                                                                    , Seq(
                                                                                        Build(Anno(Str("str"), Op("Nil", [])))
                                                                                      , Seq(
                                                                                          Match(Var("u_0"))
                                                                                        , Seq(
                                                                                            Build(Var("v_0"))
                                                                                          , CallT(SVar("guarantee_extension_0_1"), [], [Var("u_0")])
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                , Build(Anno(Str("./foo.rtree"), Op("Nil", [])))
                                                                                , Build(Anno(Str("./foo.str"), Op("Nil", [])))
                                                                                ]
                                                                              , []
                                                                              )
                                                                            , Seq(
                                                                                CallT(
                                                                                  SVar("apply_test_4_0")
                                                                                , [ Build(Anno(Str("guarantee-extension 13"), Op("Nil", [])))
                                                                                  , Scope(
                                                                                      ["w_0", "x_0"]
                                                                                    , Seq(
                                                                                        Match(Var("x_0"))
                                                                                      , Seq(
                                                                                          Build(Anno(Str("str"), Op("Nil", [])))
                                                                                        , Seq(
                                                                                            Match(Var("w_0"))
                                                                                          , Seq(
                                                                                              Build(Var("x_0"))
                                                                                            , CallT(SVar("guarantee_extension_0_1"), [], [Var("w_0")])
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
                                                                                  , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
                                                                                  ]
                                                                                , []
                                                                                )
                                                                              , Seq(
                                                                                  CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ Build(Anno(Str("guarantee-extension 14"), Op("Nil", [])))
                                                                                    , Scope(
                                                                                        ["y_0", "z_0"]
                                                                                      , Seq(
                                                                                          Match(Var("z_0"))
                                                                                        , Seq(
                                                                                            Build(Anno(Str("str"), Op("Nil", [])))
                                                                                          , Seq(
                                                                                              Match(Var("y_0"))
                                                                                            , Seq(
                                                                                                Build(Var("z_0"))
                                                                                              , CallT(SVar("guarantee_extension_0_1"), [], [Var("y_0")])
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    , Build(Anno(Str("./bar/foo"), Op("Nil", [])))
                                                                                    , Build(Anno(Str("./bar/foo.str"), Op("Nil", [])))
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                , Seq(
                                                                                    CallT(
                                                                                      SVar("apply_test_4_0")
                                                                                    , [ Build(Anno(Str("guarantee-extension 15"), Op("Nil", [])))
                                                                                      , Scope(
                                                                                          ["a_1", "b_1"]
                                                                                        , Seq(
                                                                                            Match(Var("b_1"))
                                                                                          , Seq(
                                                                                              Build(Anno(Str("str"), Op("Nil", [])))
                                                                                            , Seq(
                                                                                                Match(Var("a_1"))
                                                                                              , Seq(
                                                                                                  Build(Var("b_1"))
                                                                                                , CallT(SVar("guarantee_extension_0_1"), [], [Var("a_1")])
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      , Build(Anno(Str(".str"), Op("Nil", [])))
                                                                                      , Build(Anno(Str(".str.str"), Op("Nil", [])))
                                                                                      ]
                                                                                    , []
                                                                                    )
                                                                                  , Seq(
                                                                                      CallT(
                                                                                        SVar("apply_test_4_0")
                                                                                      , [ Build(Anno(Str("guarantee-extension 16"), Op("Nil", [])))
                                                                                        , Scope(
                                                                                            ["c_1", "d_1"]
                                                                                          , Seq(
                                                                                              Match(Var("d_1"))
                                                                                            , Seq(
                                                                                                Build(Anno(Str("str"), Op("Nil", [])))
                                                                                              , Seq(
                                                                                                  Match(Var("c_1"))
                                                                                                , Seq(
                                                                                                    Build(Var("d_1"))
                                                                                                  , CallT(SVar("guarantee_extension_0_1"), [], [Var("c_1")])
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        , Build(Anno(Str("..str"), Op("Nil", [])))
                                                                                        , Build(Anno(Str("..str.str"), Op("Nil", [])))
                                                                                        ]
                                                                                      , []
                                                                                      )
                                                                                    , Seq(
                                                                                        CallT(
                                                                                          SVar("apply_test_4_0")
                                                                                        , [ Build(Anno(Str("guarantee-extension 17"), Op("Nil", [])))
                                                                                          , Scope(
                                                                                              ["e_1", "f_1"]
                                                                                            , Seq(
                                                                                                Match(Var("f_1"))
                                                                                              , Seq(
                                                                                                  Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                , Seq(
                                                                                                    Match(Var("e_1"))
                                                                                                  , Seq(
                                                                                                      Build(Var("f_1"))
                                                                                                    , CallT(SVar("guarantee_extension_0_1"), [], [Var("e_1")])
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          , Build(Anno(Str("./.str"), Op("Nil", [])))
                                                                                          , Build(Anno(Str("./.str.str"), Op("Nil", [])))
                                                                                          ]
                                                                                        , []
                                                                                        )
                                                                                      , Seq(
                                                                                          CallT(
                                                                                            SVar("apply_test_3_0")
                                                                                          , [ Build(Anno(Str("has-extension 1"), Op("Nil", [])))
                                                                                            , Scope(
                                                                                                ["g_1", "h_1"]
                                                                                              , Seq(
                                                                                                  Match(Var("h_1"))
                                                                                                , Seq(
                                                                                                    Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                  , Seq(
                                                                                                      Match(Var("g_1"))
                                                                                                    , Seq(
                                                                                                        Build(Var("h_1"))
                                                                                                      , CallT(SVar("has_extension_0_1"), [], [Var("g_1")])
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                            ]
                                                                                          , []
                                                                                          )
                                                                                        , Seq(
                                                                                            CallT(
                                                                                              SVar("apply_test_3_0")
                                                                                            , [ Build(Anno(Str("has-extension 2"), Op("Nil", [])))
                                                                                              , Scope(
                                                                                                  ["i_1", "j_1"]
                                                                                                , Seq(
                                                                                                    Match(Var("j_1"))
                                                                                                  , Seq(
                                                                                                      Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                    , Seq(
                                                                                                        Match(Var("i_1"))
                                                                                                      , Seq(
                                                                                                          Build(Var("j_1"))
                                                                                                        , CallT(SVar("has_extension_0_1"), [], [Var("i_1")])
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
                                                                                              ]
                                                                                            , []
                                                                                            )
                                                                                          , Seq(
                                                                                              CallT(
                                                                                                SVar("apply_and_fail_3_0")
                                                                                              , [ Build(Anno(Str("has-extension 3"), Op("Nil", [])))
                                                                                                , Scope(
                                                                                                    ["k_1", "l_1"]
                                                                                                  , Seq(
                                                                                                      Match(Var("l_1"))
                                                                                                    , Seq(
                                                                                                        Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                      , Seq(
                                                                                                          Match(Var("k_1"))
                                                                                                        , Seq(
                                                                                                            Build(Var("l_1"))
                                                                                                          , CallT(SVar("has_extension_0_1"), [], [Var("k_1")])
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                , Build(Anno(Str("foo.rtee"), Op("Nil", [])))
                                                                                                ]
                                                                                              , []
                                                                                              )
                                                                                            , Seq(
                                                                                                CallT(
                                                                                                  SVar("apply_and_fail_3_0")
                                                                                                , [ Build(Anno(Str("has-extension 4"), Op("Nil", [])))
                                                                                                  , Scope(
                                                                                                      ["m_1", "q_1"]
                                                                                                    , Seq(
                                                                                                        Match(Var("q_1"))
                                                                                                      , Seq(
                                                                                                          Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                        , Seq(
                                                                                                            Match(Var("m_1"))
                                                                                                          , Seq(
                                                                                                              Build(Var("q_1"))
                                                                                                            , CallT(SVar("has_extension_0_1"), [], [Var("m_1")])
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                  ]
                                                                                                , []
                                                                                                )
                                                                                              , Seq(
                                                                                                  CallT(
                                                                                                    SVar("apply_and_fail_3_0")
                                                                                                  , [ Build(Anno(Str("has-extension 5"), Op("Nil", [])))
                                                                                                    , Scope(
                                                                                                        ["r_1", "s_1"]
                                                                                                      , Seq(
                                                                                                          Match(Var("s_1"))
                                                                                                        , Seq(
                                                                                                            Build(Anno(Str(""), Op("Nil", [])))
                                                                                                          , Seq(
                                                                                                              Match(Var("r_1"))
                                                                                                            , Seq(
                                                                                                                Build(Var("s_1"))
                                                                                                              , CallT(SVar("has_extension_0_1"), [], [Var("r_1")])
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                    ]
                                                                                                  , []
                                                                                                  )
                                                                                                , Seq(
                                                                                                    CallT(
                                                                                                      SVar("apply_and_fail_3_0")
                                                                                                    , [ Build(Anno(Str("has-extension 6"), Op("Nil", [])))
                                                                                                      , Scope(
                                                                                                          ["t_1", "u_1"]
                                                                                                        , Seq(
                                                                                                            Match(Var("u_1"))
                                                                                                          , Seq(
                                                                                                              Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                            , Seq(
                                                                                                                Match(Var("t_1"))
                                                                                                              , Seq(
                                                                                                                  Build(Var("u_1"))
                                                                                                                , CallT(SVar("has_extension_0_1"), [], [Var("t_1")])
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      , Build(Anno(Str("foo.str.rtree"), Op("Nil", [])))
                                                                                                      ]
                                                                                                    , []
                                                                                                    )
                                                                                                  , Seq(
                                                                                                      CallT(
                                                                                                        SVar("apply_test_3_0")
                                                                                                      , [ Build(Anno(Str("obsolete-has-extension 1"), Op("Nil", [])))
                                                                                                        , CallT(
                                                                                                            SVar("has_extension_1_0")
                                                                                                          , [Build(Anno(Str(".str"), Op("Nil", [])))]
                                                                                                          , []
                                                                                                          )
                                                                                                        , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                                        ]
                                                                                                      , []
                                                                                                      )
                                                                                                    , Seq(
                                                                                                        CallT(
                                                                                                          SVar("apply_test_3_0")
                                                                                                        , [ Build(Anno(Str("obsolete-has-extension 2"), Op("Nil", [])))
                                                                                                          , CallT(
                                                                                                              SVar("has_extension_1_0")
                                                                                                            , [Build(Anno(Str(".str"), Op("Nil", [])))]
                                                                                                            , []
                                                                                                            )
                                                                                                          , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
                                                                                                          ]
                                                                                                        , []
                                                                                                        )
                                                                                                      , Seq(
                                                                                                          CallT(
                                                                                                            SVar("apply_and_fail_3_0")
                                                                                                          , [ Build(Anno(Str("obsolete-has-extension 3"), Op("Nil", [])))
                                                                                                            , CallT(
                                                                                                                SVar("has_extension_1_0")
                                                                                                              , [Build(Anno(Str(".str"), Op("Nil", [])))]
                                                                                                              , []
                                                                                                              )
                                                                                                            , Build(Anno(Str("foo.rtee"), Op("Nil", [])))
                                                                                                            ]
                                                                                                          , []
                                                                                                          )
                                                                                                        , Seq(
                                                                                                            CallT(
                                                                                                              SVar("apply_and_fail_3_0")
                                                                                                            , [ Build(Anno(Str("obsolete-has-extension 4"), Op("Nil", [])))
                                                                                                              , CallT(
                                                                                                                  SVar("has_extension_1_0")
                                                                                                                , [Build(Anno(Str(".str"), Op("Nil", [])))]
                                                                                                                , []
                                                                                                                )
                                                                                                              , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                              ]
                                                                                                            , []
                                                                                                            )
                                                                                                          , Seq(
                                                                                                              CallT(
                                                                                                                SVar("apply_and_fail_3_0")
                                                                                                              , [ Build(Anno(Str("obsolete-has-extension 5"), Op("Nil", [])))
                                                                                                                , CallT(
                                                                                                                    SVar("has_extension_1_0")
                                                                                                                  , [Build(Anno(Str(""), Op("Nil", [])))]
                                                                                                                  , []
                                                                                                                  )
                                                                                                                , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                                ]
                                                                                                              , []
                                                                                                              )
                                                                                                            , Seq(
                                                                                                                CallT(
                                                                                                                  SVar("apply_and_fail_3_0")
                                                                                                                , [ Build(Anno(Str("obsolete-has-extension 6"), Op("Nil", [])))
                                                                                                                  , CallT(
                                                                                                                      SVar("has_extension_1_0")
                                                                                                                    , [Build(Anno(Str(".str"), Op("Nil", [])))]
                                                                                                                    , []
                                                                                                                    )
                                                                                                                  , Build(Anno(Str("foo.str.rtree"), Op("Nil", [])))
                                                                                                                  ]
                                                                                                                , []
                                                                                                                )
                                                                                                              , Seq(
                                                                                                                  CallT(
                                                                                                                    SVar("apply_test_3_0")
                                                                                                                  , [ Build(Anno(Str("obsolete-has-extension 7"), Op("Nil", [])))
                                                                                                                    , CallT(
                                                                                                                        SVar("has_extension_1_0")
                                                                                                                      , [Build(Anno(Str("str"), Op("Nil", [])))]
                                                                                                                      , []
                                                                                                                      )
                                                                                                                    , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                                                    ]
                                                                                                                  , []
                                                                                                                  )
                                                                                                                , Seq(
                                                                                                                    CallT(
                                                                                                                      SVar("apply_test_3_0")
                                                                                                                    , [ Build(Anno(Str("obsolete-has-extension 8"), Op("Nil", [])))
                                                                                                                      , CallT(
                                                                                                                          SVar("has_extension_1_0")
                                                                                                                        , [Build(Anno(Str("str"), Op("Nil", [])))]
                                                                                                                        , []
                                                                                                                        )
                                                                                                                      , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
                                                                                                                      ]
                                                                                                                    , []
                                                                                                                    )
                                                                                                                  , Seq(
                                                                                                                      CallT(
                                                                                                                        SVar("apply_and_fail_3_0")
                                                                                                                      , [ Build(Anno(Str("obsolete-has-extension 9"), Op("Nil", [])))
                                                                                                                        , CallT(
                                                                                                                            SVar("has_extension_1_0")
                                                                                                                          , [Build(Anno(Str("str"), Op("Nil", [])))]
                                                                                                                          , []
                                                                                                                          )
                                                                                                                        , Build(Anno(Str("foo.rtee"), Op("Nil", [])))
                                                                                                                        ]
                                                                                                                      , []
                                                                                                                      )
                                                                                                                    , Seq(
                                                                                                                        CallT(
                                                                                                                          SVar("apply_and_fail_3_0")
                                                                                                                        , [ Build(Anno(Str("obsolete-has-extension 10"), Op("Nil", [])))
                                                                                                                          , CallT(
                                                                                                                              SVar("has_extension_1_0")
                                                                                                                            , [Build(Anno(Str("str"), Op("Nil", [])))]
                                                                                                                            , []
                                                                                                                            )
                                                                                                                          , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                                          ]
                                                                                                                        , []
                                                                                                                        )
                                                                                                                      , Seq(
                                                                                                                          CallT(
                                                                                                                            SVar("apply_and_fail_3_0")
                                                                                                                          , [ Build(Anno(Str("obsolete-has-extension 11"), Op("Nil", [])))
                                                                                                                            , CallT(
                                                                                                                                SVar("has_extension_1_0")
                                                                                                                              , [Build(Anno(Str(""), Op("Nil", [])))]
                                                                                                                              , []
                                                                                                                              )
                                                                                                                            , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                                            ]
                                                                                                                          , []
                                                                                                                          )
                                                                                                                        , Seq(
                                                                                                                            CallT(
                                                                                                                              SVar("apply_and_fail_3_0")
                                                                                                                            , [ Build(Anno(Str("obsolete-has-extension 12"), Op("Nil", [])))
                                                                                                                              , CallT(
                                                                                                                                  SVar("has_extension_1_0")
                                                                                                                                , [Build(Anno(Str("str"), Op("Nil", [])))]
                                                                                                                                , []
                                                                                                                                )
                                                                                                                              , Build(Anno(Str("foo.str.rtree"), Op("Nil", [])))
                                                                                                                              ]
                                                                                                                            , []
                                                                                                                            )
                                                                                                                          , Seq(
                                                                                                                              CallT(
                                                                                                                                SVar("apply_test_4_0")
                                                                                                                              , [ Build(Anno(Str("get-extension 1"), Op("Nil", [])))
                                                                                                                                , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                                                                , Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                                                ]
                                                                                                                              , []
                                                                                                                              )
                                                                                                                            , Seq(
                                                                                                                                CallT(
                                                                                                                                  SVar("apply_test_4_0")
                                                                                                                                , [ Build(Anno(Str("get-extension 2"), Op("Nil", [])))
                                                                                                                                  , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                  , Build(Anno(Str("foo.fred.str"), Op("Nil", [])))
                                                                                                                                  , Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                                                  ]
                                                                                                                                , []
                                                                                                                                )
                                                                                                                              , Seq(
                                                                                                                                  CallT(
                                                                                                                                    SVar("apply_test_4_0")
                                                                                                                                  , [ Build(Anno(Str("get-extension 3"), Op("Nil", [])))
                                                                                                                                    , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                    , Build(Anno(Str("/foo/fred.str"), Op("Nil", [])))
                                                                                                                                    , Build(Anno(Str("str"), Op("Nil", [])))
                                                                                                                                    ]
                                                                                                                                  , []
                                                                                                                                  )
                                                                                                                                , Seq(
                                                                                                                                    CallT(
                                                                                                                                      SVar("apply_and_fail_3_0")
                                                                                                                                    , [ Build(Anno(Str("get-extension 4"), Op("Nil", [])))
                                                                                                                                      , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                      , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                                                      ]
                                                                                                                                    , []
                                                                                                                                    )
                                                                                                                                  , Seq(
                                                                                                                                      CallT(
                                                                                                                                        SVar("apply_and_fail_3_0")
                                                                                                                                      , [ Build(Anno(Str("get-extension 5"), Op("Nil", [])))
                                                                                                                                        , CallT(SVar("get_extension_0_0"), [], [])
                                                                                                                                        , Build(Anno(Str("/foo.str/fred"), Op("Nil", [])))
                                                                                                                                        ]
                                                                                                                                      , []
                                                                                                                                      )
                                                                                                                                    , Seq(
                                                                                                                                        CallT(
                                                                                                                                          SVar("apply_test_3_0")
                                                                                                                                        , [ Build(Anno(Str("test-extension 1"), Op("Nil", [])))
                                                                                                                                          , CallT(
                                                                                                                                              SVar("test_extension_1_0")
                                                                                                                                            , [Match(Anno(Str("str"), Wld))]
                                                                                                                                            , []
                                                                                                                                            )
                                                                                                                                          , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                                                                          ]
                                                                                                                                        , []
                                                                                                                                        )
                                                                                                                                      , Seq(
                                                                                                                                          CallT(
                                                                                                                                            SVar("apply_test_3_0")
                                                                                                                                          , [ Build(Anno(Str("test-extension 2"), Op("Nil", [])))
                                                                                                                                            , CallT(SVar("test_extension_1_0"), [Id], [])
                                                                                                                                            , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                                                                            ]
                                                                                                                                          , []
                                                                                                                                          )
                                                                                                                                        , Seq(
                                                                                                                                            CallT(
                                                                                                                                              SVar("apply_and_fail_3_0")
                                                                                                                                            , [ Build(Anno(Str("test-extension 3"), Op("Nil", [])))
                                                                                                                                              , CallT(SVar("test_extension_1_0"), [Id], [])
                                                                                                                                              , Build(Anno(Str("foo"), Op("Nil", [])))
                                                                                                                                              ]
                                                                                                                                            , []
                                                                                                                                            )
                                                                                                                                          , Seq(
                                                                                                                                              CallT(
                                                                                                                                                SVar("apply_test_3_0")
                                                                                                                                              , [ Build(Anno(Str("test-extension 4"), Op("Nil", [])))
                                                                                                                                                , CallT(
                                                                                                                                                    SVar("test_extension_1_0")
                                                                                                                                                  , [ GuardedLChoice(
                                                                                                                                                        Match(Anno(Str("str"), Wld))
                                                                                                                                                      , Id
                                                                                                                                                      , Match(Anno(Str("rtree"), Wld))
                                                                                                                                                      )
                                                                                                                                                    ]
                                                                                                                                                  , []
                                                                                                                                                  )
                                                                                                                                                , Build(Anno(Str("foo.str"), Op("Nil", [])))
                                                                                                                                                ]
                                                                                                                                              , []
                                                                                                                                              )
                                                                                                                                            , CallT(
                                                                                                                                                SVar("apply_test_3_0")
                                                                                                                                              , [ Build(Anno(Str("test-extension 5"), Op("Nil", [])))
                                                                                                                                                , CallT(
                                                                                                                                                    SVar("test_extension_1_0")
                                                                                                                                                  , [ GuardedLChoice(
                                                                                                                                                        Match(Anno(Str("str"), Wld))
                                                                                                                                                      , Id
                                                                                                                                                      , Match(Anno(Str("rtree"), Wld))
                                                                                                                                                      )
                                                                                                                                                    ]
                                                                                                                                                  , []
                                                                                                                                                  )
                                                                                                                                                , Build(Anno(Str("foo.rtree"), Op("Nil", [])))
                                                                                                                                                ]
                                                                                                                                              , []
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      )
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "is_abspath_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("is-abspath -- 1"), Op("Nil", [])))
              , CallT(SVar("is_abspath_0_0"), [], [])
              , Build(Anno(Str("/"), Op("Nil", [])))
              , Build(Anno(Str("/"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("is-abspath -- 2"), Op("Nil", [])))
                , CallT(SVar("is_abspath_0_0"), [], [])
                , Build(Anno(Str("/bla"), Op("Nil", [])))
                , Build(Anno(Str("/bla"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_and_fail_3_0")
                , [ Build(Anno(Str("is-abspath -- 3"), Op("Nil", [])))
                  , CallT(SVar("is_abspath_0_0"), [], [])
                  , Build(Anno(Str("bla"), Op("Nil", [])))
                  ]
                , []
                )
              , CallT(
                  SVar("apply_and_fail_3_0")
                , [ Build(Anno(Str("is-abspath -- 4"), Op("Nil", [])))
                  , CallT(SVar("is_abspath_0_0"), [], [])
                  , Build(Anno(Str("./bla"), Op("Nil", [])))
                  ]
                , []
                )
              )
            )
          )
        )
      , SDefT(
          "is_abspath_0_0"
        , []
        , []
        , Scope(
            ["z_51"]
          , Seq(
              Match(Var("z_51"))
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  Match(
                    Anno(
                      Op("Cons", [Anno(Int("47"), Wld), Wld])
                    , Wld
                    )
                  )
                , Build(Var("z_51"))
                )
              )
            )
          )
        )
      , SDefT(
          "abspath_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("is_abspath_0_0"), [], [])
          , Id
          , Scope(
              ["c_158", "d_158", "f_158", "e_158"]
            , Seq(
                Seq(
                  Match(Var("e_158"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("getcwd_0_0"), [], [])
                    , Seq(Match(Var("c_158")), Build(Var("e_158")))
                    )
                  )
                )
              , Seq(
                  Match(Var("f_158"))
                , Seq(
                    Match(Var("d_158"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            "Cons"
                          , [ Var("c_158")
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Str("/"), Op("Nil", []))
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("d_158"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("concat_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "abspath_tests_0_0"
        , []
        , []
        , Scope(
            ["g_21", "h_21"]
          , Seq(
              Match(Var("h_21"))
            , Seq(
                CallT(SVar("getcwd_0_0"), [], [])
              , Seq(
                  Match(Var("g_21"))
                , Seq(
                    Build(Var("h_21"))
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("abspath -- 1"), Op("Nil", [])))
                        , CallT(SVar("abspath_0_0"), [], [])
                        , Build(Anno(Str("/"), Op("Nil", [])))
                        , Build(Anno(Str("/"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("abspath -- 2"), Op("Nil", [])))
                          , CallT(SVar("abspath_0_0"), [], [])
                          , Build(Anno(Str("/bla"), Op("Nil", [])))
                          , Build(Anno(Str("/bla"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("abspath -- 3"), Op("Nil", [])))
                            , CallT(SVar("abspath_0_0"), [], [])
                            , Build(Anno(Str("bla"), Op("Nil", [])))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Var("g_21"), Anno(Str("/bla"), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , CallT(SVar("conc_strings_0_0"), [], [])
                              )
                            ]
                          , []
                          )
                        , CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("abspath -- 4"), Op("Nil", [])))
                            , CallT(SVar("abspath_0_0"), [], [])
                            , Build(Anno(Str("./bla"), Op("Nil", [])))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Var("g_21"), Anno(Str("/./bla"), Op("Nil", []))]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , CallT(SVar("conc_strings_0_0"), [], [])
                              )
                            ]
                          , []
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT("getcwd_0_0", [], [], PrimT("SSL_getcwd", [], []))
      , SDefT(
          "apply_test_3_0"
        , [ VarDec(
              "b_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "c_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("b_149"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("d_149"), [], [])]
                  , []
                  )
                , CallT(SVar("c_149"), [], [])
                )
              , Id
              , Seq(
                  Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "getcwd_tests_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_3_0")
          , [ Build(Anno(Str("getcwd -- 1"), Op("Nil", [])))
            , CallT(SVar("getcwd_0_0"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "at_suffix_rev_1_0"
        , [ VarDec(
              "f_128"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "g_128"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("g_128"), [], [])]
                  , []
                  )
                , Id
                , CallT(SVar("f_128"), [], [])
                )
              )
            ]
          , CallT(SVar("g_128"), [], [])
          )
        )
      , SDefT(
          "get_filename_0_0"
        , []
        , []
        , Scope(
            ["c_51"]
          , Seq(
              CallT(
                SVar("obsolete_1_0")
              , [Build(Anno(Str("get-filename; use base-filename"), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("explode_string_0_0"), [], [])
              , Seq(
                  CallT(
                    SVar("try_1_0")
                  , [ Seq(
                        CallT(
                          SVar("at_suffix_rev_1_0")
                        , [ Match(
                              Anno(
                                Op(
                                  "Cons"
                                , [Anno(Int("47"), Wld), Var("c_51")]
                                )
                              , Wld
                              )
                            )
                          ]
                        , []
                        )
                      , Build(Var("c_51"))
                      )
                    ]
                  , []
                  )
                , CallT(SVar("implode_string_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "get_filename_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("get-filename-test1"), Op("Nil", [])))
              , CallT(SVar("get_filename_0_0"), [], [])
              , Build(Anno(Str("/usr/local/bin/prog"), Op("Nil", [])))
              , Build(Anno(Str("prog"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("get-filename-test2"), Op("Nil", [])))
              , CallT(SVar("get_filename_0_0"), [], [])
              , Build(Anno(Str("prog"), Op("Nil", [])))
              , Build(Anno(Str("prog"), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "get_path_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("obsolete_1_0")
            , [Build(Anno(Str("get-path; use dirname"), Op("Nil", [])))]
            , []
            )
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                GuardedLChoice(
                  Let(
                    [ SDefT(
                        "x_125"
                      , []
                      , []
                      , GuardedLChoice(
                          CallT(
                            SVar("Cons_2_0")
                          , [Id, CallT(SVar("x_125"), [], [])]
                          , []
                          )
                        , Id
                        , CallT(
                            SVar("Cons_2_0")
                          , [ Match(Anno(Int("47"), Wld))
                            , Build(Anno(Op("Nil", []), Op("Nil", [])))
                            ]
                          , []
                          )
                        )
                      )
                    ]
                  , CallT(SVar("x_125"), [], [])
                  )
                , Id
                , Build(Anno(Op("Nil", []), Op("Nil", [])))
                )
              , CallT(SVar("implode_string_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "get_path_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("get-path-test1"), Op("Nil", [])))
              , CallT(SVar("get_path_0_0"), [], [])
              , Build(Anno(Str("/usr/local/bin/prog"), Op("Nil", [])))
              , Build(Anno(Str("/usr/local/bin/"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("get-path-test2"), Op("Nil", [])))
              , CallT(SVar("get_path_0_0"), [], [])
              , Build(Anno(Str("prog"), Op("Nil", [])))
              , Build(Anno(Str(""), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "base_filename_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("base-filename-test 1"), Op("Nil", [])))
              , CallT(SVar("base_filename_0_0"), [], [])
              , Build(Anno(Str("./number.r"), Op("Nil", [])))
              , Build(Anno(Str("number.r"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("base-filename-test 2"), Op("Nil", [])))
                , CallT(SVar("base_filename_0_0"), [], [])
                , Build(Anno(Str("./number"), Op("Nil", [])))
                , Build(Anno(Str("number"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("base-filename-test 3"), Op("Nil", [])))
                , CallT(SVar("base_filename_0_0"), [], [])
                , Build(Anno(Str("/usr/bin/number.str"), Op("Nil", [])))
                , Build(Anno(Str("number.str"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "basename_1_0"
        , [ VarDec(
              "r_125"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(
              SVar("obsolete_1_0")
            , [Build(Anno(Str("basename(ext); use test-extension(s); remove-extension"), Op("Nil", [])))]
            , []
            )
          , Seq(
              CallT(SVar("explode_string_0_0"), [], [])
            , Seq(
                CallT(
                  SVar("try_1_0")
                , [ Let(
                      [ SDefT(
                          "s_125"
                        , []
                        , []
                        , GuardedLChoice(
                            CallT(
                              SVar("Cons_2_0")
                            , [Id, CallT(SVar("s_125"), [], [])]
                            , []
                            )
                          , Id
                          , GuardedLChoice(
                              CallT(
                                SVar("Cons_2_0")
                              , [Match(Anno(Int("47"), Wld)), Id]
                              , []
                              )
                            , Id
                            , Seq(
                                CallT(
                                  SVar("Cons_2_0")
                                , [ Match(Anno(Int("46"), Wld))
                                  , CallT(SVar("r_125"), [], [])
                                  ]
                                , []
                                )
                              , Build(Anno(Op("Nil", []), Op("Nil", [])))
                              )
                            )
                          )
                        )
                      ]
                    , CallT(SVar("s_125"), [], [])
                    )
                  ]
                , []
                )
              , CallT(SVar("implode_string_0_0"), [], [])
              )
            )
          )
        )
      , SDefT(
          "fputs_0_0"
        , []
        , []
        , Scope(
            ["a_41", "b_41", "a_15", "b_15"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("a_41"), Anno(Op("Stream", [Var("b_41")]), Wld)]
                  )
                , Wld
                )
              )
            , Seq(
                PrimT("SSL_fputs", [], [Var("a_41"), Var("b_41")])
              , Seq(
                  Match(Var("b_15"))
                , Seq(
                    Match(Var("a_15"))
                  , Build(
                      Anno(
                        Op("Stream", [Var("a_15")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "stderr_stream_0_0"
        , []
        , []
        , Scope(
            ["q_15", "r_15"]
          , Seq(
              PrimT("SSL_stderr_stream", [], [])
            , Seq(
                Match(Var("r_15"))
              , Seq(
                  Match(Var("q_15"))
                , Build(
                    Anno(
                      Op("Stream", [Var("q_15")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "log_stream_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              Build(Anno(Str("log-stream"), Op("Nil", [])))
            , CallT(SVar("get_config_0_0"), [], [])
            )
          , Id
          , Seq(
              Build(Anno(Op("", []), Op("Nil", [])))
            , CallT(SVar("stderr_stream_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "log_puts_0_0"
        , []
        , []
        , Scope(
            ["d_209", "e_209", "g_209", "f_209"]
          , Seq(
              Seq(
                Match(Var("f_209"))
              , Seq(Match(Var("d_209")), Build(Var("f_209")))
              )
            , Seq(
                Match(Var("g_209"))
              , Seq(
                  Build(Anno(Op("", []), Op("Nil", [])))
                , Seq(
                    CallT(SVar("log_stream_0_0"), [], [])
                  , Seq(
                      Match(Var("e_209"))
                    , Seq(
                        Build(
                          Anno(
                            Op("", [Var("d_209"), Var("e_209")])
                          , Op("Nil", [])
                          )
                        )
                      , CallT(SVar("fputs_0_0"), [], [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "severity_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["r_208"]
            , Seq(
                Match(Anno(Op("Vomit", []), Wld))
              , Seq(
                  Match(Var("r_208"))
                , Build(Anno(Str("vomit"), Op("Nil", [])))
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["q_208"]
              , Seq(
                  Match(Anno(Op("Debug", []), Wld))
                , Seq(
                    Match(Var("q_208"))
                  , Build(Anno(Str("debug"), Op("Nil", [])))
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["p_208"]
                , Seq(
                    Match(Anno(Op("Notice", []), Wld))
                  , Seq(
                      Match(Var("p_208"))
                    , Build(Anno(Str("notice"), Op("Nil", [])))
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["o_208"]
                  , Seq(
                      Match(Anno(Op("Warning", []), Wld))
                    , Seq(
                        Match(Var("o_208"))
                      , Build(Anno(Str("warning"), Op("Nil", [])))
                      )
                    )
                  )
                , Id
                , GuardedLChoice(
                    Scope(
                      ["n_208"]
                    , Seq(
                        Match(Anno(Op("Info", []), Wld))
                      , Seq(
                          Match(Var("n_208"))
                        , Build(Anno(Str("info"), Op("Nil", [])))
                        )
                      )
                    )
                  , Id
                  , GuardedLChoice(
                      Scope(
                        ["m_208"]
                      , Seq(
                          Match(Anno(Op("Error", []), Wld))
                        , Seq(
                            Match(Var("m_208"))
                          , Build(Anno(Str("error"), Op("Nil", [])))
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Scope(
                          ["l_208"]
                        , Seq(
                            Match(Anno(Op("Critical", []), Wld))
                          , Seq(
                              Match(Var("l_208"))
                            , Build(Anno(Str("critical"), Op("Nil", [])))
                            )
                          )
                        )
                      , Id
                      , GuardedLChoice(
                          Scope(
                            ["k_208"]
                          , Seq(
                              Match(Anno(Op("Alert", []), Wld))
                            , Seq(
                                Match(Var("k_208"))
                              , Build(Anno(Str("alert"), Op("Nil", [])))
                              )
                            )
                          )
                        , Id
                        , Scope(
                            ["j_208"]
                          , Seq(
                              Match(Anno(Op("Emergency", []), Wld))
                            , Seq(
                                Match(Var("j_208"))
                              , Build(Anno(Str("emergency"), Op("Nil", [])))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Last_0_0"
        , []
        , []
        , Scope(
            ["l_56", "r_164"]
          , Seq(
              Match(
                Anno(
                  Op(
                    "Cons"
                  , [Var("l_56"), Anno(Op("Nil", []), Wld)]
                  )
                , Wld
                )
              )
            , Seq(Match(Var("r_164")), Build(Var("l_56")))
            )
          )
        )
      , SDefT(
          "last_0_0"
        , []
        , []
        , Let(
            [ SDefT(
                "e_127"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Last_0_0"), [], [])
                , Id
                , Seq(
                    CallT(SVar("Tl_0_0"), [], [])
                  , CallT(SVar("e_127"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("e_127"), [], [])
          )
        )
      , SDefT(
          "fetch_1_0"
        , [ VarDec(
              "j_129"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "k_129"
              , []
              , []
              , GuardedLChoice(
                  CallT(
                    SVar("Cons_2_0")
                  , [CallT(SVar("j_129"), [], []), Id]
                  , []
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("k_129"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("k_129"), [], [])
          )
        )
      , SDefT(
          "at_suffix_1_0"
        , [ VarDec(
              "d_128"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "e_128"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("d_128"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("e_128"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("e_128"), [], [])
          )
        )
      , SDefT(
          "split_fetch_1_0"
        , [ VarDec(
              "m_129"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_56", "b_164", "c_164"]
          , Seq(
              CallT(
                SVar("at_suffix_1_0")
              , [ Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [CallT(SVar("m_129"), [], []), Id]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("Cons_2_0")
                      , [Id, Match(Var("a_56"))]
                      , []
                      )
                    , Build(Anno(Op("Nil", []), Op("Nil", [])))
                    )
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("c_164"))
              , Seq(
                  Match(Var("b_164"))
                , Build(
                    Anno(
                      Op("", [Var("b_164"), Var("a_56")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "list_tokenize_1_0"
        , [ VarDec(
              "o_129"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            GuardedLChoice(
              CallT(
                SVar("split_fetch_1_0")
              , [CallT(SVar("o_129"), [], [])]
              , []
              )
            , Id
            , Scope(
                ["f_164", "g_164"]
              , Seq(
                  Match(Var("g_164"))
                , Seq(
                    Match(Var("f_164"))
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [Var("f_164"), Anno(Op("Nil", []), Op("Nil", []))]
                        )
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          , GuardedLChoice(
              Scope(
                ["h_164"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Op("Nil", []), Wld)
                        , Anno(Op("Nil", []), Wld)
                        ]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("h_164"))
                  , Build(Anno(Op("Nil", []), Op("Nil", [])))
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["f_56", "i_164"]
                , Seq(
                    Match(
                      Anno(
                        Op(
                          ""
                        , [ As(
                              Var("f_56")
                            , Anno(Op("Cons", [Wld, Wld]), Wld)
                            )
                          , Anno(Op("Nil", []), Wld)
                          ]
                        )
                      , Wld
                      )
                    )
                  , Seq(
                      Match(Var("i_164"))
                    , Build(
                        Anno(
                          Op(
                            "Cons"
                          , [Var("f_56"), Anno(Op("Nil", []), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["g_56", "k_164", "l_164", "j_164"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("Nil", []), Wld)
                            , As(
                                Var("g_56")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("j_164"))
                      , Seq(
                          Match(Var("l_164"))
                        , Seq(
                            Build(Var("g_56"))
                          , Seq(
                              CallT(
                                SVar("list_tokenize_1_0")
                              , [CallT(SVar("o_129"), [], [])]
                              , []
                              )
                            , Match(Var("k_164"))
                            )
                          )
                        )
                      )
                    )
                  )
                , Id
                , Scope(
                    ["h_56", "i_56", "n_164", "o_164", "m_164"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [ As(
                                Var("h_56")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            , As(
                                Var("i_56")
                              , Anno(Op("Cons", [Wld, Wld]), Wld)
                              )
                            ]
                          )
                        , Wld
                        )
                      )
                    , Seq(
                        Match(Var("m_164"))
                      , Seq(
                          Match(Var("o_164"))
                        , Seq(
                            Build(Var("i_56"))
                          , Seq(
                              CallT(
                                SVar("list_tokenize_1_0")
                              , [CallT(SVar("o_129"), [], [])]
                              , []
                              )
                            , Seq(
                                Match(Var("n_164"))
                              , Build(
                                  Anno(
                                    Op("Cons", [Var("h_56"), Var("n_164")])
                                  , Op("Nil", [])
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_1_0"
        , [ VarDec(
              "h_136"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(
                SVar("list_tokenize_1_0")
              , [CallT(SVar("h_136"), [], [])]
              , []
              )
            , CallT(
                SVar("map_1_0")
              , [CallT(SVar("implode_string_0_0"), [], [])]
              , []
              )
            )
          )
        )
      , SDefT(
          "string_tokenize_0_1"
        , []
        , [VarDec("a_68", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("string_tokenize_1_0")
          , [ Scope(
                ["b_68"]
              , Seq(
                  Match(Var("b_68"))
                , Seq(
                    Build(Var("a_68"))
                  , CallT(SVar("fetch_1_0"), [Match(Var("b_68"))], [])
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "string_tokenize_0_0"
        , []
        , []
        , Scope(
            ["c_68", "z_178"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("c_68"), Var("z_178")])
                , Wld
                )
              )
            , Seq(
                Build(Var("z_178"))
              , CallT(SVar("string_tokenize_0_1"), [], [Var("c_68")])
              )
            )
          )
        )
      , SDefT(
          "base_filename_0_0"
        , []
        , []
        , Scope(
            ["g_158", "h_158"]
          , Seq(
              Match(Var("h_158"))
            , Seq(
                Match(Var("g_158"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("47"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        , Var("g_158")
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("string_tokenize_0_0"), [], [])
                  , CallT(SVar("last_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "whoami_0_0"
        , []
        , []
        , Seq(
            Build(Anno(Str("program"), Op("Nil", [])))
          , CallT(SVar("get_config_0_0"), [], [])
          )
        )
      , SDefT(
          "log_src_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("whoami_0_0"), [], [])
            , CallT(SVar("base_filename_0_0"), [], [])
            )
          , Id
          , Build(Anno(Str("identity crisis"), Op("Nil", [])))
          )
        )
      , SDefT(
          "write_to_string_0_0"
        , []
        , []
        , Scope(
            ["v_46"]
          , Seq(
              Match(Var("v_46"))
            , PrimT("SSL_write_term_to_string", [], [Var("v_46")])
            )
          )
        )
      , SDefT(
          "is_string_0_0"
        , []
        , []
        , Scope(
            ["s_69"]
          , Seq(
              Match(Var("s_69"))
            , PrimT("SSL_is_string", [], [Var("s_69")])
            )
          )
        )
      , SDefT(
          "map_1_0"
        , [ VarDec(
              "b_129"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "c_129"
              , []
              , []
              , GuardedLChoice(
                  CallT(SVar("Nil_0_0"), [], [])
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [ CallT(SVar("b_129"), [], [])
                    , CallT(SVar("c_129"), [], [])
                    ]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("c_129"), [], [])
          )
        )
      , SDefT(
          "is_list_0_0"
        , []
        , []
        , GuardedLChoice(
            Match(Anno(Op("Nil", []), Wld))
          , Id
          , Match(Anno(Op("Cons", [Wld, Wld]), Wld))
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["z_75", "a_76", "n_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_75"), Var("a_76")])
                , Wld
                )
              )
            , Seq(
                Match(Var("n_1"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("z_75"), Var("a_76")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("z_75"), Var("a_76")])
                  )
                , Build(Var("n_1"))
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["f_76"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("f_76"), Var("f_76")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "hashtable_get_0_1"
        , []
        , [VarDec("d_83", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["e_83"]
          , Seq(
              Match(Anno(Op("Hashtable", [Var("e_83")]), Wld))
            , PrimT("SSL_hashtable_get", [], [Var("e_83"), Var("d_83")])
            )
          )
        )
      , SDefT(
          "hashtable_put_0_2"
        , []
        , [ VarDec("a_83", ConstType(Sort("ATerm", [])))
          , VarDec("b_83", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["c_83", "r_192", "s_192"]
          , Seq(
              Match(Anno(Op("Hashtable", [Var("c_83")]), Wld))
            , Seq(
                PrimT(
                  "SSL_hashtable_put"
                , []
                , [Var("c_83"), Var("a_83"), Var("b_83")]
                )
              , Seq(
                  Match(Var("s_192"))
                , Seq(
                    Match(Var("r_192"))
                  , Build(
                      Anno(
                        Op("Hashtable", [Var("r_192")])
                      , Op("Nil", [])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "new_hashtable_0_2"
        , []
        , [ VarDec("k_83", ConstType(Sort("ATerm", [])))
          , VarDec("l_83", ConstType(Sort("ATerm", [])))
          ]
        , Scope(
            ["z_192", "a_193"]
          , Seq(
              PrimT("SSL_hashtable_create", [], [Var("k_83"), Var("l_83")])
            , Seq(
                Match(Var("a_193"))
              , Seq(
                  Match(Var("z_192"))
                , Build(
                    Anno(
                      Op("Hashtable", [Var("z_192")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "new_hashtable_0_0"
        , []
        , []
        , Scope(
            ["v_192", "w_192", "y_192", "x_192"]
          , Seq(
              Seq(
                Match(Var("x_192"))
              , Seq(
                  Build(Anno(Int("117"), Op("Nil", [])))
                , Seq(Match(Var("v_192")), Build(Var("x_192")))
                )
              )
            , Seq(
                Match(Var("y_192"))
              , Seq(
                  Build(Anno(Int("75"), Op("Nil", [])))
                , Seq(
                    Match(Var("w_192"))
                  , Seq(
                      Build(Var("y_192"))
                    , CallT(
                        SVar("new_hashtable_0_2")
                      , []
                      , [Var("v_192"), Var("w_192")]
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "table_create_0_0"
        , []
        , []
        , Scope(
            ["p_78", "q_78", "s_78", "r_78"]
          , Seq(
              Match(Var("p_78"))
            , Seq(
                Seq(
                  Match(Var("r_78"))
                , Seq(
                    CallT(SVar("new_hashtable_0_0"), [], [])
                  , Seq(Match(Var("q_78")), Build(Var("r_78")))
                  )
                )
              , Seq(
                  Match(Var("s_78"))
                , Seq(
                    CallT(SVar("table_hashtable_0_0"), [], [])
                  , Seq(
                      CallT(
                        SVar("hashtable_put_0_2")
                      , []
                      , [Var("p_78"), Var("q_78")]
                      )
                    , Build(Var("s_78"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "table_hashtable_0_0"
        , []
        , []
        , Scope(
            ["n_189", "o_189"]
          , Seq(
              PrimT("SSL_table_hashtable", [], [])
            , Seq(
                Match(Var("o_189"))
              , Seq(
                  Match(Var("n_189"))
                , Build(
                    Anno(
                      Op("Hashtable", [Var("n_189")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "lookup_table_0_1"
        , []
        , [VarDec("n_78", ConstType(Sort("ATerm", [])))]
        , Seq(
            CallT(SVar("table_hashtable_0_0"), [], [])
          , GuardedLChoice(
              CallT(SVar("hashtable_get_0_1"), [], [Var("n_78")])
            , Id
            , Scope(
                ["o_78"]
              , Seq(
                  Match(Var("o_78"))
                , Seq(
                    Build(Var("n_78"))
                  , Seq(
                      CallT(SVar("table_create_0_0"), [], [])
                    , Seq(
                        Build(Var("o_78"))
                      , CallT(SVar("hashtable_get_0_1"), [], [Var("n_78")])
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "table_get_0_0"
        , []
        , []
        , Scope(
            ["a_79", "b_79"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("a_79"), Var("b_79")])
                , Wld
                )
              )
            , Seq(
                CallT(SVar("lookup_table_0_1"), [], [Var("a_79")])
              , CallT(SVar("hashtable_get_0_1"), [], [Var("b_79")])
              )
            )
          )
        )
      , SDefT(
          "get_config_0_0"
        , []
        , []
        , Scope(
            ["m_17", "n_17"]
          , Seq(
              Match(Var("n_17"))
            , Seq(
                Match(Var("m_17"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Anno(Str("config"), Op("Nil", [])), Var("m_17")]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("table_get_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "verbosity_0_0"
        , []
        , []
        , GuardedLChoice(
            Seq(
              Build(Anno(Str("--verbose"), Op("Nil", [])))
            , CallT(SVar("get_config_0_0"), [], [])
            )
          , Id
          , Build(Anno(Int("1"), Op("Nil", [])))
          )
        )
      , SDefT(
          "if_verbose_1_1"
        , [ VarDec(
              "k_118"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , [VarDec("i_43", ConstType(Sort("ATerm", [])))]
        , GuardedLChoice(
            Scope(
              ["j_43", "e_18", "f_18"]
            , Seq(
                Match(Var("j_43"))
              , Seq(
                  Match(Var("f_18"))
                , Seq(
                    Build(Anno(Op("", []), Op("Nil", [])))
                  , Seq(
                      CallT(SVar("verbosity_0_0"), [], [])
                    , Seq(
                        Match(Var("e_18"))
                      , Seq(
                          Build(
                            Anno(
                              Op("", [Var("e_18"), Var("i_43")])
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("geq_0_0"), [], [])
                          , Build(Var("j_43"))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , CallT(SVar("k_118"), [], [])
          , Id
          )
        )
      , SDefT(
          "verbose_level_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["i_208"]
            , Seq(
                Match(Anno(Op("Vomit", []), Wld))
              , Seq(
                  Match(Var("i_208"))
                , Build(Anno(Int("10"), Op("Nil", [])))
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["h_208"]
              , Seq(
                  Match(Anno(Op("Debug", []), Wld))
                , Seq(
                    Match(Var("h_208"))
                  , Build(Anno(Int("4"), Op("Nil", [])))
                  )
                )
              )
            , Id
            , GuardedLChoice(
                Scope(
                  ["g_208"]
                , Seq(
                    Match(Anno(Op("Notice", []), Wld))
                  , Seq(
                      Match(Var("g_208"))
                    , Build(Anno(Int("2"), Op("Nil", [])))
                    )
                  )
                )
              , Id
              , GuardedLChoice(
                  Scope(
                    ["f_208"]
                  , Seq(
                      Match(Anno(Op("Info", []), Wld))
                    , Seq(
                        Match(Var("f_208"))
                      , Build(Anno(Int("1"), Op("Nil", [])))
                      )
                    )
                  )
                , Id
                , GuardedLChoice(
                    Scope(
                      ["e_208"]
                    , Seq(
                        Match(Anno(Op("Warning", []), Wld))
                      , Seq(
                          Match(Var("e_208"))
                        , Build(Anno(Int("1"), Op("Nil", [])))
                        )
                      )
                    )
                  , Id
                  , GuardedLChoice(
                      Scope(
                        ["d_208"]
                      , Seq(
                          Match(Anno(Op("Error", []), Wld))
                        , Seq(
                            Match(Var("d_208"))
                          , Build(Anno(Int("0"), Op("Nil", [])))
                          )
                        )
                      )
                    , Id
                    , GuardedLChoice(
                        Scope(
                          ["c_208"]
                        , Seq(
                            Match(Anno(Op("Critical", []), Wld))
                          , Seq(
                              Match(Var("c_208"))
                            , Build(Anno(Int("-2"), Op("Nil", [])))
                            )
                          )
                        )
                      , Id
                      , GuardedLChoice(
                          Scope(
                            ["b_208"]
                          , Seq(
                              Match(Anno(Op("Alert", []), Wld))
                            , Seq(
                                Match(Var("b_208"))
                              , Build(Anno(Int("-5"), Op("Nil", [])))
                              )
                            )
                          )
                        , Id
                        , Scope(
                            ["a_208"]
                          , Seq(
                              Match(Anno(Op("Emergency", []), Wld))
                            , Seq(
                                Match(Var("a_208"))
                              , Build(Anno(Int("-10"), Op("Nil", [])))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "if_log_severity_1_1"
        , [ VarDec(
              "o_145"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , [VarDec("e_95", ConstType(Sort("ATerm", [])))]
        , Scope(
            ["v_209", "w_209", "x_209", "y_209"]
          , Seq(
              Match(Var("w_209"))
            , Seq(
                Match(Var("y_209"))
              , Seq(
                  Build(Var("e_95"))
                , Seq(
                    CallT(SVar("verbose_level_0_0"), [], [])
                  , Seq(
                      Match(Var("x_209"))
                    , Seq(
                        Match(Var("v_209"))
                      , Seq(
                          Build(Var("w_209"))
                        , CallT(
                            SVar("if_verbose_1_1")
                          , [CallT(SVar("o_145"), [], [])]
                          , [Var("v_209")]
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "log_0_2"
        , []
        , [ VarDec("b_95", ConstType(Sort("Severity", [])))
          , VarDec("c_95", ConstType(Sort("ATerm", [])))
          ]
        , CallT(
            SVar("if_log_severity_1_1")
          , [ Scope(
                ["d_95", "p_209", "q_209", "r_209", "u_209", "t_209", "s_209"]
              , Seq(
                  Match(Var("d_95"))
                , Seq(
                    Build(Var("c_95"))
                  , Seq(
                      Seq(
                        CallT(
                          SVar("try_1_0")
                        , [ Scope(
                              ["n_209", "o_209"]
                            , Seq(
                                GuardedLChoice(CallT(SVar("is_list_0_0"), [], []), Fail, Id)
                              , Seq(
                                  Match(Var("o_209"))
                                , Seq(
                                    Match(Var("n_209"))
                                  , Build(
                                      Anno(
                                        Op(
                                          "Cons"
                                        , [Var("n_209"), Anno(Op("Nil", []), Op("Nil", []))]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("map_1_0")
                          , [ GuardedLChoice(
                                CallT(SVar("is_string_0_0"), [], [])
                              , Id
                              , CallT(SVar("write_to_string_0_0"), [], [])
                              )
                            ]
                          , []
                          )
                        , Seq(
                            Seq(
                              Match(Var("s_209"))
                            , Seq(
                                CallT(SVar("log_src_0_0"), [], [])
                              , Seq(Match(Var("p_209")), Build(Var("s_209")))
                              )
                            )
                          , Seq(
                              Match(Var("t_209"))
                            , Seq(
                                Build(Var("b_95"))
                              , Seq(
                                  CallT(SVar("severity_string_0_0"), [], [])
                                , Seq(
                                    Match(Var("q_209"))
                                  , Seq(
                                      Build(Var("t_209"))
                                    , Seq(
                                        Match(Var("u_209"))
                                      , Seq(
                                          Match(Var("r_209"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op(
                                                  "Cons"
                                                , [ Anno(Str("[ "), Op("Nil", []))
                                                  , Anno(
                                                      Op(
                                                        "Cons"
                                                      , [ Var("p_209")
                                                        , Anno(
                                                            Op(
                                                              "Cons"
                                                            , [ Anno(Str(" | "), Op("Nil", []))
                                                              , Anno(
                                                                  Op(
                                                                    "Cons"
                                                                  , [ Var("q_209")
                                                                    , Anno(
                                                                        Op(
                                                                          "Cons"
                                                                        , [Anno(Str(" ] "), Op("Nil", [])), Var("r_209")]
                                                                        )
                                                                      , Op("Nil", [])
                                                                      )
                                                                    ]
                                                                  )
                                                                , Op("Nil", [])
                                                                )
                                                              ]
                                                            )
                                                          , Op("Nil", [])
                                                          )
                                                        ]
                                                      )
                                                    , Op("Nil", [])
                                                    )
                                                  ]
                                                )
                                              , Op("Nil", [])
                                              )
                                            )
                                          , Seq(
                                              CallT(SVar("concat_strings_0_0"), [], [])
                                            , Seq(
                                                CallT(SVar("log_puts_0_0"), [], [])
                                              , Seq(
                                                  Build(Anno(Str("\n"), Op("Nil", [])))
                                                , CallT(SVar("log_puts_0_0"), [], [])
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("d_95"))
                    )
                  )
                )
              )
            ]
          , [Var("b_95")]
          )
        )
      , SDefT(
          "obsolete_1_0"
        , [ VarDec(
              "l_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["z_151", "a_152", "c_152", "d_152", "e_152", "f_152", "g_152", "b_152"]
          , Seq(
              Seq(
                Match(Var("b_152"))
              , Seq(
                  Build(Anno(Op("Warning", []), Op("Nil", [])))
                , Seq(Match(Var("z_151")), Build(Var("b_152")))
                )
              )
            , Seq(
                Match(Var("c_152"))
              , Seq(
                  Match(Var("e_152"))
                , Seq(
                    Match(Var("g_152"))
                  , Seq(
                      Build(Anno(Op("", []), Op("Nil", [])))
                    , Seq(
                        CallT(SVar("l_124"), [], [])
                      , Seq(
                          Match(Var("f_152"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Str("program uses obsolete strategy "), Op("Nil", [])), Var("f_152")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("conc_strings_0_0"), [], [])
                            , Seq(
                                Match(Var("d_152"))
                              , Seq(
                                  Match(Var("a_152"))
                                , Seq(
                                    Build(Var("c_152"))
                                  , CallT(
                                      SVar("log_0_2")
                                    , []
                                    , [Var("z_151"), Var("a_152")]
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "basename_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("obsolete_1_0")
            , [Build(Anno(Str("basename; use remove-extension"), Op("Nil", [])))]
            , []
            )
          , CallT(SVar("basename_1_0"), [Id], [])
          )
        )
      , SDefT(
          "basename_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("basename-test 1"), Op("Nil", [])))
              , CallT(SVar("basename_0_0"), [], [])
              , Build(Anno(Str("./number.r"), Op("Nil", [])))
              , Build(Anno(Str("./number"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("basename-test 2"), Op("Nil", [])))
                , CallT(SVar("basename_0_0"), [], [])
                , Build(Anno(Str("./number"), Op("Nil", [])))
                , Build(Anno(Str("./number"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("basename-test 3"), Op("Nil", [])))
                , CallT(SVar("basename_0_0"), [], [])
                , Build(Anno(Str("/usr/bin/number.str"), Op("Nil", [])))
                , Build(Anno(Str("/usr/bin/number"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "access_0_0"
        , []
        , []
        , Scope(
            ["s_40", "t_40"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("s_40"), Var("t_40")])
                , Wld
                )
              )
            , PrimT("SSL_access", [], [Var("s_40"), Var("t_40")])
            )
          )
        )
      , SDefT(
          "can_write_file_0_0"
        , []
        , []
        , Scope(
            ["m_158", "n_158"]
          , Seq(
              Match(Var("n_158"))
            , Seq(
                Match(Var("m_158"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [ Var("m_158")
                        , Anno(
                            Op(
                              "Cons"
                            , [ Anno(Op("W_OK", []), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("access_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "can_create_file_0_0"
        , []
        , []
        , Scope(
            ["a_52"]
          , Seq(
              Match(Var("a_52"))
            , Seq(
                CallT(SVar("dirname_0_0"), [], [])
              , Seq(
                  CallT(SVar("can_write_file_0_0"), [], [])
                , Build(Var("a_52"))
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "l_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "m_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "n_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("l_149"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("n_149"), [], [])]
                  , []
                  )
                , GuardedLChoice(CallT(SVar("m_149"), [], []), Fail, Id)
                )
              , Id
              , Seq(
                  Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "i_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "j_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "k_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("i_149"), [], [])
            , CallT(SVar("j_149"), [], [])
            , CallT(SVar("k_149"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "file_props_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_and_fail_3_0")
            , [ Build(Anno(Str("create? -- 1"), Op("Nil", [])))
              , CallT(SVar("can_create_file_0_0"), [], [])
              , Build(Anno(Str("/root/bla.txt"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("create? -- 2"), Op("Nil", [])))
              , CallT(SVar("can_create_file_0_0"), [], [])
              , Build(Anno(Str("/tmp/bla.txt"), Op("Nil", [])))
              , Build(Anno(Str("/tmp/bla.txt"), Op("Nil", [])))
              ]
            , []
            )
          )
        )
      , SDefT(
          "split_init_last_0_0"
        , []
        , []
        , Scope(
            ["n_55", "i_163", "j_163"]
          , Seq(
              CallT(
                SVar("at_last_1_0")
              , [ Seq(
                    Match(
                      Anno(
                        Op(
                          "Cons"
                        , [Var("n_55"), Anno(Op("Nil", []), Wld)]
                        )
                      , Wld
                      )
                    )
                  , Build(Anno(Op("Nil", []), Op("Nil", [])))
                  )
                ]
              , []
              )
            , Seq(
                Match(Var("j_163"))
              , Seq(
                  Match(Var("i_163"))
                , Build(
                    Anno(
                      Op("", [Var("i_163"), Var("n_55")])
                    , Op("Nil", [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "repeat_1_0"
        , [ VarDec(
              "s_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("try_1_0")
          , [ Seq(
                CallT(SVar("s_116"), [], [])
              , CallT(
                  SVar("repeat_1_0")
                , [CallT(SVar("s_116"), [], [])]
                , []
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["c_62", "d_62", "s_171"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("d_62"), Var("c_62")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("s_171")), Build(Var("d_62")))
            )
          )
        )
      , SDefT(
          "Tl_0_0"
        , []
        , []
        , Scope(
            ["k_56", "q_164"]
          , Seq(
              Match(
                Anno(Op("Cons", [Wld, Var("k_56")]), Wld)
              )
            , Seq(Match(Var("q_164")), Build(Var("k_56")))
            )
          )
        )
      , SDefT(
          "Cons_2_0"
        , [ VarDec(
              "a_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["v_1", "o_1", "p_1", "w_1", "x_1"]
          , Seq(
              Match(
                Anno(
                  Op("Cons", [Var("o_1"), Var("p_1")])
                , Var("v_1")
                )
              )
            , Seq(
                Build(Var("o_1"))
              , Seq(
                  CallT(SVar("a_105"), [], [])
                , Seq(
                    Match(Var("w_1"))
                  , Seq(
                      Build(Var("p_1"))
                    , Seq(
                        CallT(SVar("b_105"), [], [])
                      , Seq(
                          Match(Var("x_1"))
                        , Build(
                            Anno(
                              Op("Cons", [Var("w_1"), Var("x_1")])
                            , Var("v_1")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "at_last_1_0"
        , [ VarDec(
              "h_128"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "i_128"
              , []
              , []
              , GuardedLChoice(
                  Seq(
                    CallT(
                      SVar("Cons_2_0")
                    , [Id, CallT(SVar("Nil_0_0"), [], [])]
                    , []
                    )
                  , CallT(SVar("h_128"), [], [])
                  )
                , Id
                , CallT(
                    SVar("Cons_2_0")
                  , [Id, CallT(SVar("i_128"), [], [])]
                  , []
                  )
                )
              )
            ]
          , CallT(SVar("i_128"), [], [])
          )
        )
      , SDefT(
          "init_0_0"
        , []
        , []
        , CallT(
            SVar("at_last_1_0")
          , [CallT(SVar("Tl_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "g_116"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("g_116"), [], []), Id, Id)
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["u_69"]
          , Seq(
              Match(Var("u_69"))
            , PrimT("SSL_explode_string", [], [Var("u_69")])
            )
          )
        )
      , SDefT(
          "string_as_chars_1_0"
        , [ VarDec(
              "h_137"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("explode_string_0_0"), [], [])
          , Seq(
              CallT(SVar("h_137"), [], [])
            , CallT(SVar("implode_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "dirname_0_0"
        , []
        , []
        , CallT(
            SVar("string_as_chars_1_0")
          , [ Seq(
                CallT(
                  SVar("try_1_0")
                , [ Scope(
                      ["a_158"]
                    , Seq(
                        CallT(SVar("split_init_last_0_0"), [], [])
                      , Seq(
                          Match(
                            Anno(
                              Op(
                                ""
                              , [Var("a_158"), Anno(Int("47"), Wld)]
                              )
                            , Wld
                            )
                          )
                        , Build(Var("a_158"))
                        )
                      )
                    )
                  ]
                , []
                )
              , GuardedLChoice(
                  Match(Anno(Op("Nil", []), Wld))
                , Build(
                    Anno(
                      Op(
                        "Cons"
                      , [ Anno(Int("47"), Op("Nil", []))
                        , Anno(Op("Nil", []), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("init_0_0"), [], [])
                  , Seq(
                      CallT(
                        SVar("repeat_1_0")
                      , [ Seq(
                            CallT(SVar("split_init_last_0_0"), [], [])
                          , Seq(
                              CallT(
                                SVar("_2_0")
                              , [Id, GuardedLChoice(Match(Anno(Int("47"), Wld)), Fail, Id)]
                              , []
                              )
                            , CallT(SVar("Fst_0_0"), [], [])
                            )
                          )
                        ]
                      , []
                      )
                    , GuardedLChoice(
                        Match(Anno(Op("Nil", []), Wld))
                      , Build(
                          Anno(
                            Op(
                              "Cons"
                            , [ Anno(Int("46"), Op("Nil", []))
                              , Anno(Op("Nil", []), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(
                            SVar("repeat_1_0")
                          , [ Scope(
                                ["b_158"]
                              , Seq(
                                  CallT(SVar("split_init_last_0_0"), [], [])
                                , Seq(
                                    Match(
                                      Anno(
                                        Op(
                                          ""
                                        , [Var("b_158"), Anno(Int("47"), Wld)]
                                        )
                                      , Wld
                                      )
                                    )
                                  , Build(Var("b_158"))
                                  )
                                )
                              )
                            ]
                          , []
                          )
                        , GuardedLChoice(
                            Match(Anno(Op("Nil", []), Wld))
                          , Build(
                              Anno(
                                Op(
                                  "Cons"
                                , [ Anno(Int("47"), Op("Nil", []))
                                  , Anno(Op("Nil", []), Op("Nil", []))
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Id
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "print_failure_0_1"
        , []
        , [VarDec("f_98", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("debug_1_0")
          , [Seq(
               Build(Var("f_98"))
             , CallT(SVar("sunit_failure_string_0_0"), [], [])
             )]
          , []
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "j_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("j_148"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["q_69"]
          , Seq(
              Match(Var("q_69"))
            , PrimT("SSL_concat_strings", [], [Var("q_69")])
            )
          )
        )
      , SDefT(
          "sunit_color_plain_0_0"
        , []
        , []
        , Scope(
            ["x_212", "y_212"]
          , Seq(
              Match(Var("y_212"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("x_212"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("x_212"), Anno(Str("[m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["o_69", "p_69"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("o_69"), Var("p_69")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("o_69"), Var("p_69")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["n_69"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("n_69"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("n_69"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["t_69"]
          , Seq(
              Match(Var("t_69"))
            , PrimT("SSL_implode_string", [], [Var("t_69")])
            )
          )
        )
      , SDefT(
          "sunit_color_red_0_0"
        , []
        , []
        , Scope(
            ["v_212", "w_212"]
          , Seq(
              Match(Var("w_212"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("v_212"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("v_212"), Anno(Str("[01;31m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "getenv_0_0"
        , []
        , []
        , Scope(
            ["n_50"]
          , Seq(
              Match(Var("n_50"))
            , PrimT("SSL_getenv", [], [Var("n_50")])
            )
          )
        )
      , SDefT(
          "sunit_failure_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["e_98"]
            , Seq(
                Match(Var("e_98"))
              , Seq(
                  Build(Anno(Str("ENABLE_COLORS"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("getenv_0_0"), [], [])
                  , Seq(
                      Match(Anno(Str("true"), Wld))
                    , Build(Var("e_98"))
                    )
                  )
                )
              )
            )
          , Scope(
              ["p_212", "q_212", "r_212", "u_212", "t_212"]
            , Seq(
                Scope(
                  ["s_212"]
                , Seq(
                    Match(Var("s_212"))
                  , Seq(
                      CallT(SVar("sunit_color_red_0_0"), [], [])
                    , Seq(Match(Var("p_212")), Build(Var("s_212")))
                    )
                  )
                )
              , Seq(
                  Seq(
                    Seq(
                      Match(Var("t_212"))
                    , Seq(Match(Var("q_212")), Build(Var("t_212")))
                    )
                  , Seq(
                      Match(Var("u_212"))
                    , Seq(
                        CallT(SVar("sunit_color_plain_0_0"), [], [])
                      , Seq(
                          Match(Var("r_212"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Var("p_212")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("q_212")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("r_212"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "print_failure_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("sunit_failure_string_0_0"), [], [])
          , CallT(SVar("debug_0_0"), [], [])
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "i_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["y_45"]
          , Seq(
              Match(Var("y_45"))
            , Seq(
                CallT(SVar("i_124"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("y_45"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "i_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("i_148"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["z_74", "a_75"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_74"), Var("a_75")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("z_74"), Var("a_75")])
              , Id
              , PrimT("SSL_addr", [], [Var("z_74"), Var("a_75")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["x_187", "y_187"]
          , Seq(
              Match(Var("y_187"))
            , Seq(
                Match(Var("x_187"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("x_187"), Anno(Int("1"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("add_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["c_46", "h_152", "i_152"]
          , Seq(
              Match(Var("c_46"))
            , Seq(
                Match(Var("i_152"))
              , Seq(
                  Match(Var("h_152"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Op("stderr", []), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [Var("h_152"), Anno(Op("Nil", []), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("printnl_0_0"), [], [])
                    , Build(Var("c_46"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "k_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["g_98"]
          , Seq(
              Match(Var("g_98"))
            , Seq(
                CallT(SVar("k_148"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("g_98"))
                  , GuardedLChoice(
                      Scope(
                        ["h_98"]
                      , Seq(
                          Match(Var("h_98"))
                        , Seq(
                            CallT(SVar("l_148"), [], [])
                          , Seq(
                              Build(Var("h_98"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "x_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_149"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_99", "b_99"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("x_148"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("z_148"), [], [])]
                      , []
                      )
                    , CallT(SVar("y_148"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("a_99"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("a_149"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("b_99"))
                      , GuardedLChoice(
                          Seq(Build(Var("b_99")), Match(Var("a_99")))
                        , Id
                        , Scope(
                            ["b_213", "c_213", "z_212", "a_213"]
                          , Seq(
                              Build(Var("a_99"))
                            , Seq(
                                Match(Var("a_213"))
                              , Seq(
                                  Build(Anno(Str("  result not equal : "), Op("Nil", [])))
                                , Seq(
                                    Match(Var("z_212"))
                                  , Seq(
                                      Build(Var("a_213"))
                                    , Seq(
                                        CallT(SVar("print_failure_0_1"), [], [Var("z_212")])
                                      , Seq(
                                          Build(Var("b_99"))
                                        , Seq(
                                            Match(Var("c_213"))
                                          , Seq(
                                              Build(Anno(Str("  expected         : "), Op("Nil", [])))
                                            , Seq(
                                                Match(Var("b_213"))
                                              , Seq(
                                                  Build(Var("c_213"))
                                                , Seq(
                                                    CallT(SVar("print_failure_0_1"), [], [Var("b_213")])
                                                  , Fail
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "dirname_tests_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("dirname -- 1"), Op("Nil", [])))
              , CallT(SVar("dirname_0_0"), [], [])
              , Build(Anno(Str("/"), Op("Nil", [])))
              , Build(Anno(Str("/"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("dirname -- 2"), Op("Nil", [])))
                , CallT(SVar("dirname_0_0"), [], [])
                , Build(Anno(Str("bla"), Op("Nil", [])))
                , Build(Anno(Str("."), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("dirname -- 3"), Op("Nil", [])))
                  , CallT(SVar("dirname_0_0"), [], [])
                  , Build(Anno(Str("bla/"), Op("Nil", [])))
                  , Build(Anno(Str("."), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("dirname -- 4"), Op("Nil", [])))
                    , CallT(SVar("dirname_0_0"), [], [])
                    , Build(Anno(Str("/bla"), Op("Nil", [])))
                    , Build(Anno(Str("/"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("dirname -- 5"), Op("Nil", [])))
                      , CallT(SVar("dirname_0_0"), [], [])
                      , Build(Anno(Str("/bla/"), Op("Nil", [])))
                      , Build(Anno(Str("/"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("dirname -- 6"), Op("Nil", [])))
                        , CallT(SVar("dirname_0_0"), [], [])
                        , Build(Anno(Str("foo/bla"), Op("Nil", [])))
                        , Build(Anno(Str("foo"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("dirname -- 7"), Op("Nil", [])))
                          , CallT(SVar("dirname_0_0"), [], [])
                          , Build(Anno(Str("foo/bla/"), Op("Nil", [])))
                          , Build(Anno(Str("foo"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("dirname -- 8"), Op("Nil", [])))
                            , CallT(SVar("dirname_0_0"), [], [])
                            , Build(Anno(Str("/foo/bla"), Op("Nil", [])))
                            , Build(Anno(Str("/foo"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("dirname -- 9"), Op("Nil", [])))
                            , CallT(SVar("dirname_0_0"), [], [])
                            , Build(Anno(Str("/foo/bla/"), Op("Nil", [])))
                            , Build(Anno(Str("/foo"), Op("Nil", [])))
                            ]
                          , []
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "f_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "g_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_2", "y_1", "z_1", "b_2", "c_2"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("y_1"), Var("z_1")])
                , Var("a_2")
                )
              )
            , Seq(
                Build(Var("y_1"))
              , Seq(
                  CallT(SVar("f_105"), [], [])
                , Seq(
                    Match(Var("b_2"))
                  , Seq(
                      Build(Var("z_1"))
                    , Seq(
                        CallT(SVar("g_105"), [], [])
                      , Seq(
                          Match(Var("c_2"))
                        , Build(
                            Anno(
                              Op("", [Var("b_2"), Var("c_2")])
                            , Var("a_2")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["k_46", "l_46", "m_46"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("k_46"), Var("l_46")])
                , Wld
                )
              )
            , Seq(
                Match(Var("m_46"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("k_46"), Var("l_46")])
                , Build(Var("m_46"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "r_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["d_46", "j_152", "k_152", "m_152", "l_152"]
          , Seq(
              Match(Var("d_46"))
            , Seq(
                Seq(
                  Match(Var("l_152"))
                , Seq(
                    CallT(SVar("r_124"), [], [])
                  , Seq(Match(Var("j_152")), Build(Var("l_152")))
                  )
                )
              , Seq(
                  Match(Var("m_152"))
                , Seq(
                    Match(Var("k_152"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Var("j_152")
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("k_152"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("d_46"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "v_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "w_148"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("v_148"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("w_148"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("file-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("dirname_tests_0_0"), [], [])
              , Seq(
                  CallT(SVar("file_props_tests_0_0"), [], [])
                , Seq(
                    CallT(SVar("basename_tests_0_0"), [], [])
                  , Seq(
                      CallT(SVar("base_filename_tests_0_0"), [], [])
                    , Seq(
                        CallT(SVar("get_path_tests_0_0"), [], [])
                      , Seq(
                          CallT(SVar("get_filename_tests_0_0"), [], [])
                        , Seq(
                            CallT(SVar("getcwd_tests_0_0"), [], [])
                          , Seq(
                              CallT(SVar("abspath_tests_0_0"), [], [])
                            , Seq(
                                CallT(SVar("is_abspath_tests_0_0"), [], [])
                              , CallT(SVar("file_extension_tests_0_0"), [], [])
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
