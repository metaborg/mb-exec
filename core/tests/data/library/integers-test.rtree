Specification(
  [ Signature(
      [ Constructors(
          [ OpDecl("stderr", ConstType(Sort("FileLoc", [])))
          , OpDecl(
              ""
            , ConstType(Sort("Tuple", [Sort("Nil", [])]))
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [Sort("Cons", [SortVar("a"), Sort("Nil", [])])]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort("Cons", [SortVar("b"), Sort("Nil", [])])
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ConstType(SortVar("a")), ConstType(SortVar("b")), ConstType(SortVar("c"))]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort("Cons", [SortVar("c"), Sort("Nil", [])])
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort("Cons", [SortVar("d"), Sort("Nil", [])])
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort("Cons", [SortVar("e"), Sort("Nil", [])])
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort("Cons", [SortVar("f"), Sort("Nil", [])])
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort("Cons", [SortVar("g"), Sort("Nil", [])])
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort("Cons", [SortVar("h"), Sort("Nil", [])])
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort("Cons", [SortVar("i"), Sort("Nil", [])])
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort("Cons", [SortVar("j"), Sort("Nil", [])])
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort("Cons", [SortVar("k"), Sort("Nil", [])])
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort("Cons", [SortVar("l"), Sort("Nil", [])])
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort("Cons", [SortVar("m"), Sort("Nil", [])])
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort("Cons", [SortVar("n"), Sort("Nil", [])])
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort("Cons", [SortVar("o"), Sort("Nil", [])])
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort("Cons", [SortVar("p"), Sort("Nil", [])])
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort("Cons", [SortVar("q"), Sort("Nil", [])])
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl(
              ""
            , FunType(
                [ ConstType(SortVar("a"))
                , ConstType(SortVar("b"))
                , ConstType(SortVar("c"))
                , ConstType(SortVar("d"))
                , ConstType(SortVar("e"))
                , ConstType(SortVar("f"))
                , ConstType(SortVar("g"))
                , ConstType(SortVar("h"))
                , ConstType(SortVar("i"))
                , ConstType(SortVar("j"))
                , ConstType(SortVar("k"))
                , ConstType(SortVar("l"))
                , ConstType(SortVar("m"))
                , ConstType(SortVar("n"))
                , ConstType(SortVar("o"))
                , ConstType(SortVar("p"))
                , ConstType(SortVar("q"))
                , ConstType(SortVar("r"))
                ]
              , ConstType(
                  Sort(
                    "Tuple"
                  , [ Sort(
                        "Cons"
                      , [ SortVar("a")
                        , Sort(
                            "Cons"
                          , [ SortVar("b")
                            , Sort(
                                "Cons"
                              , [ SortVar("c")
                                , Sort(
                                    "Cons"
                                  , [ SortVar("d")
                                    , Sort(
                                        "Cons"
                                      , [ SortVar("e")
                                        , Sort(
                                            "Cons"
                                          , [ SortVar("f")
                                            , Sort(
                                                "Cons"
                                              , [ SortVar("g")
                                                , Sort(
                                                    "Cons"
                                                  , [ SortVar("h")
                                                    , Sort(
                                                        "Cons"
                                                      , [ SortVar("i")
                                                        , Sort(
                                                            "Cons"
                                                          , [ SortVar("j")
                                                            , Sort(
                                                                "Cons"
                                                              , [ SortVar("k")
                                                                , Sort(
                                                                    "Cons"
                                                                  , [ SortVar("l")
                                                                    , Sort(
                                                                        "Cons"
                                                                      , [ SortVar("m")
                                                                        , Sort(
                                                                            "Cons"
                                                                          , [ SortVar("n")
                                                                            , Sort(
                                                                                "Cons"
                                                                              , [ SortVar("o")
                                                                                , Sort(
                                                                                    "Cons"
                                                                                  , [ SortVar("p")
                                                                                    , Sort(
                                                                                        "Cons"
                                                                                      , [ SortVar("q")
                                                                                        , Sort("Cons", [SortVar("r"), Sort("Nil", [])])
                                                                                        ]
                                                                                      )
                                                                                    ]
                                                                                  )
                                                                                ]
                                                                              )
                                                                            ]
                                                                          )
                                                                        ]
                                                                      )
                                                                    ]
                                                                  )
                                                                ]
                                                              )
                                                            ]
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                )
              )
            )
          , OpDecl("Nil", ConstType(Sort("List", [SortVar("a")])))
          , OpDecl(
              "Cons"
            , FunType(
                [ConstType(SortVar("a")), ConstType(Sort("List", [SortVar("a")]))]
              , ConstType(Sort("List", [SortVar("a")]))
              )
            )
          ]
        )
      ]
    )
  , Strategies(
      [ SDefT("DYNAMIC_CALLS_0_0", [], [], Fail)
      , SDefT(
          "bin_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["p_155", "q_155"]
          , Seq(
              Match(Var("q_155"))
            , Seq(
                Match(Var("p_155"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("p_155"), Anno(Int("2"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("generic_string_to_int_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "bin_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("bin-string-test-0a"), Op("Nil", [])))
              , CallT(SVar("bin_string_to_int_0_0"), [], [])
              , Build(Anno(Str("0"), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("bin-string-test-0b"), Op("Nil", [])))
                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                , Build(Anno(Str("00"), Op("Nil", [])))
                , Build(Anno(Int("0"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("bin-string-test-0c"), Op("Nil", [])))
                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                  , Build(Anno(Str("000"), Op("Nil", [])))
                  , Build(Anno(Int("0"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("bin-string-test-0d"), Op("Nil", [])))
                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                    , Build(Anno(Str("0000"), Op("Nil", [])))
                    , Build(Anno(Int("0"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("bin-string-test-0e"), Op("Nil", [])))
                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                      , Build(Anno(Str("00000"), Op("Nil", [])))
                      , Build(Anno(Int("0"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("bin-string-test-0f"), Op("Nil", [])))
                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                        , Build(Anno(Str("00000000000000"), Op("Nil", [])))
                        , Build(Anno(Int("0"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("bin-string-test-1a"), Op("Nil", [])))
                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                          , Build(Anno(Str("1"), Op("Nil", [])))
                          , Build(Anno(Int("1"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("bin-string-test-1b"), Op("Nil", [])))
                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                            , Build(Anno(Str("01"), Op("Nil", [])))
                            , Build(Anno(Int("1"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("bin-string-test-1c"), Op("Nil", [])))
                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                              , Build(Anno(Str("001"), Op("Nil", [])))
                              , Build(Anno(Int("1"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("bin-string-test-1d"), Op("Nil", [])))
                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                , Build(Anno(Str("0001"), Op("Nil", [])))
                                , Build(Anno(Int("1"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("bin-string-test-1e"), Op("Nil", [])))
                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("00001"), Op("Nil", [])))
                                  , Build(Anno(Int("1"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ Build(Anno(Str("bin-string-test-1f"), Op("Nil", [])))
                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                    , Build(Anno(Str("0000000000000001"), Op("Nil", [])))
                                    , Build(Anno(Int("1"), Op("Nil", [])))
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ Build(Anno(Str("bin-string-test-2a"), Op("Nil", [])))
                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                      , Build(Anno(Str("11"), Op("Nil", [])))
                                      , Build(Anno(Int("3"), Op("Nil", [])))
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ Build(Anno(Str("bin-string-test-2b"), Op("Nil", [])))
                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                        , Build(Anno(Str("111"), Op("Nil", [])))
                                        , Build(Anno(Int("7"), Op("Nil", [])))
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ Build(Anno(Str("bin-string-test-2c"), Op("Nil", [])))
                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                          , Build(Anno(Str("1111"), Op("Nil", [])))
                                          , Build(Anno(Int("15"), Op("Nil", [])))
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ Build(Anno(Str("bin-string-test-2d"), Op("Nil", [])))
                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                            , Build(Anno(Str("11111"), Op("Nil", [])))
                                            , Build(Anno(Int("31"), Op("Nil", [])))
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("bin-string-test-2e"), Op("Nil", [])))
                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                              , Build(Anno(Str("111111"), Op("Nil", [])))
                                              , Build(Anno(Int("63"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          , Seq(
                                              CallT(
                                                SVar("apply_test_4_0")
                                              , [ Build(Anno(Str("bin-string-test-2f"), Op("Nil", [])))
                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                , Build(Anno(Str("1111111"), Op("Nil", [])))
                                                , Build(Anno(Int("127"), Op("Nil", [])))
                                                ]
                                              , []
                                              )
                                            , Seq(
                                                CallT(
                                                  SVar("apply_test_4_0")
                                                , [ Build(Anno(Str("bin-string-test-2g"), Op("Nil", [])))
                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                  , Build(Anno(Str("11111111"), Op("Nil", [])))
                                                  , Build(Anno(Int("255"), Op("Nil", [])))
                                                  ]
                                                , []
                                                )
                                              , Seq(
                                                  CallT(
                                                    SVar("apply_test_4_0")
                                                  , [ Build(Anno(Str("bin-string-test-2h"), Op("Nil", [])))
                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                    , Build(Anno(Str("111111111"), Op("Nil", [])))
                                                    , Build(Anno(Int("511"), Op("Nil", [])))
                                                    ]
                                                  , []
                                                  )
                                                , Seq(
                                                    CallT(
                                                      SVar("apply_test_4_0")
                                                    , [ Build(Anno(Str("bin-string-test-2i"), Op("Nil", [])))
                                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                      , Build(Anno(Str("1111111111"), Op("Nil", [])))
                                                      , Build(Anno(Int("1023"), Op("Nil", [])))
                                                      ]
                                                    , []
                                                    )
                                                  , Seq(
                                                      CallT(
                                                        SVar("apply_test_4_0")
                                                      , [ Build(Anno(Str("bin-string-test-2j"), Op("Nil", [])))
                                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                        , Build(Anno(Str("11111111111"), Op("Nil", [])))
                                                        , Build(Anno(Int("2047"), Op("Nil", [])))
                                                        ]
                                                      , []
                                                      )
                                                    , Seq(
                                                        CallT(
                                                          SVar("apply_test_4_0")
                                                        , [ Build(Anno(Str("bin-string-test-2k"), Op("Nil", [])))
                                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                          , Build(Anno(Str("10"), Op("Nil", [])))
                                                          , Build(Anno(Int("2"), Op("Nil", [])))
                                                          ]
                                                        , []
                                                        )
                                                      , Seq(
                                                          CallT(
                                                            SVar("apply_test_4_0")
                                                          , [ Build(Anno(Str("bin-string-test-2l"), Op("Nil", [])))
                                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                            , Build(Anno(Str("100"), Op("Nil", [])))
                                                            , Build(Anno(Int("4"), Op("Nil", [])))
                                                            ]
                                                          , []
                                                          )
                                                        , Seq(
                                                            CallT(
                                                              SVar("apply_test_4_0")
                                                            , [ Build(Anno(Str("bin-string-test-2m"), Op("Nil", [])))
                                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                              , Build(Anno(Str("1000"), Op("Nil", [])))
                                                              , Build(Anno(Int("8"), Op("Nil", [])))
                                                              ]
                                                            , []
                                                            )
                                                          , Seq(
                                                              CallT(
                                                                SVar("apply_test_4_0")
                                                              , [ Build(Anno(Str("bin-string-test-2n"), Op("Nil", [])))
                                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                , Build(Anno(Str("10000"), Op("Nil", [])))
                                                                , Build(Anno(Int("16"), Op("Nil", [])))
                                                                ]
                                                              , []
                                                              )
                                                            , Seq(
                                                                CallT(
                                                                  SVar("apply_test_4_0")
                                                                , [ Build(Anno(Str("bin-string-test-2o"), Op("Nil", [])))
                                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                  , Build(Anno(Str("100000"), Op("Nil", [])))
                                                                  , Build(Anno(Int("32"), Op("Nil", [])))
                                                                  ]
                                                                , []
                                                                )
                                                              , Seq(
                                                                  CallT(
                                                                    SVar("apply_test_4_0")
                                                                  , [ Build(Anno(Str("bin-string-test-2p"), Op("Nil", [])))
                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                    , Build(Anno(Str("1000000"), Op("Nil", [])))
                                                                    , Build(Anno(Int("64"), Op("Nil", [])))
                                                                    ]
                                                                  , []
                                                                  )
                                                                , Seq(
                                                                    CallT(
                                                                      SVar("apply_test_4_0")
                                                                    , [ Build(Anno(Str("bin-string-test-2q"), Op("Nil", [])))
                                                                      , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                      , Build(Anno(Str("10000000"), Op("Nil", [])))
                                                                      , Build(Anno(Int("128"), Op("Nil", [])))
                                                                      ]
                                                                    , []
                                                                    )
                                                                  , Seq(
                                                                      CallT(
                                                                        SVar("apply_test_4_0")
                                                                      , [ Build(Anno(Str("bin-string-test-2r"), Op("Nil", [])))
                                                                        , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                        , Build(Anno(Str("100000000"), Op("Nil", [])))
                                                                        , Build(Anno(Int("256"), Op("Nil", [])))
                                                                        ]
                                                                      , []
                                                                      )
                                                                    , Seq(
                                                                        CallT(
                                                                          SVar("apply_test_4_0")
                                                                        , [ Build(Anno(Str("bin-string-test-2s"), Op("Nil", [])))
                                                                          , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                          , Build(Anno(Str("1000000000"), Op("Nil", [])))
                                                                          , Build(Anno(Int("512"), Op("Nil", [])))
                                                                          ]
                                                                        , []
                                                                        )
                                                                      , Seq(
                                                                          CallT(
                                                                            SVar("apply_test_4_0")
                                                                          , [ Build(Anno(Str("bin-string-test-2t"), Op("Nil", [])))
                                                                            , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                            , Build(Anno(Str("10000000000"), Op("Nil", [])))
                                                                            , Build(Anno(Int("1024"), Op("Nil", [])))
                                                                            ]
                                                                          , []
                                                                          )
                                                                        , Seq(
                                                                            CallT(
                                                                              SVar("apply_test_4_0")
                                                                            , [ Build(Anno(Str("bin-string-test-2u"), Op("Nil", [])))
                                                                              , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                              , Build(Anno(Str("100000000000"), Op("Nil", [])))
                                                                              , Build(Anno(Int("2048"), Op("Nil", [])))
                                                                              ]
                                                                            , []
                                                                            )
                                                                          , Seq(
                                                                              CallT(
                                                                                SVar("apply_test_4_0")
                                                                              , [ Build(Anno(Str("bin-string-test-a"), Op("Nil", [])))
                                                                                , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                , Build(Anno(Str("1010"), Op("Nil", [])))
                                                                                , Build(Anno(Int("10"), Op("Nil", [])))
                                                                                ]
                                                                              , []
                                                                              )
                                                                            , Seq(
                                                                                CallT(
                                                                                  SVar("apply_test_4_0")
                                                                                , [ Build(Anno(Str("bin-string-test-c"), Op("Nil", [])))
                                                                                  , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                  , Build(Anno(Str("10110000"), Op("Nil", [])))
                                                                                  , Build(Anno(Int("176"), Op("Nil", [])))
                                                                                  ]
                                                                                , []
                                                                                )
                                                                              , Seq(
                                                                                  CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ Build(Anno(Str("bin-string-test-b"), Op("Nil", [])))
                                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                    , Build(Anno(Str("111100011"), Op("Nil", [])))
                                                                                    , Build(Anno(Int("483"), Op("Nil", [])))
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                , CallT(
                                                                                    SVar("apply_test_4_0")
                                                                                  , [ Build(Anno(Str("bin-string-test-d"), Op("Nil", [])))
                                                                                    , CallT(SVar("bin_string_to_int_0_0"), [], [])
                                                                                    , Build(Anno(Str("101010101"), Op("Nil", [])))
                                                                                    , Build(Anno(Int("341"), Op("Nil", [])))
                                                                                    ]
                                                                                  , []
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "hex_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["j_155", "k_155"]
          , Seq(
              Match(Var("k_155"))
            , Seq(
                Match(Var("j_155"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("j_155"), Anno(Int("16"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("generic_string_to_int_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "hex_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("hex-string-test-a"), Op("Nil", [])))
              , CallT(SVar("hex_string_to_int_0_0"), [], [])
              , Build(Anno(Str("0"), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("hex-string-test-b"), Op("Nil", [])))
                , CallT(SVar("hex_string_to_int_0_0"), [], [])
                , Build(Anno(Str("1"), Op("Nil", [])))
                , Build(Anno(Int("1"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("hex-string-test-c"), Op("Nil", [])))
                  , CallT(SVar("hex_string_to_int_0_0"), [], [])
                  , Build(Anno(Str("2"), Op("Nil", [])))
                  , Build(Anno(Int("2"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("hex-string-test-d"), Op("Nil", [])))
                    , CallT(SVar("hex_string_to_int_0_0"), [], [])
                    , Build(Anno(Str("3"), Op("Nil", [])))
                    , Build(Anno(Int("3"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("hex-string-test-e"), Op("Nil", [])))
                      , CallT(SVar("hex_string_to_int_0_0"), [], [])
                      , Build(Anno(Str("4"), Op("Nil", [])))
                      , Build(Anno(Int("4"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("hex-string-test-f"), Op("Nil", [])))
                        , CallT(SVar("hex_string_to_int_0_0"), [], [])
                        , Build(Anno(Str("5"), Op("Nil", [])))
                        , Build(Anno(Int("5"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("hex-string-test-g"), Op("Nil", [])))
                          , CallT(SVar("hex_string_to_int_0_0"), [], [])
                          , Build(Anno(Str("6"), Op("Nil", [])))
                          , Build(Anno(Int("6"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("hex-string-test-h"), Op("Nil", [])))
                            , CallT(SVar("hex_string_to_int_0_0"), [], [])
                            , Build(Anno(Str("7"), Op("Nil", [])))
                            , Build(Anno(Int("7"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("hex-string-test-i"), Op("Nil", [])))
                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                              , Build(Anno(Str("8"), Op("Nil", [])))
                              , Build(Anno(Int("8"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("hex-string-test-j"), Op("Nil", [])))
                                , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                , Build(Anno(Str("9"), Op("Nil", [])))
                                , Build(Anno(Int("9"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("hex-string-test-k"), Op("Nil", [])))
                                  , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("A"), Op("Nil", [])))
                                  , Build(Anno(Int("10"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , Seq(
                                  CallT(
                                    SVar("apply_test_4_0")
                                  , [ Build(Anno(Str("hex-string-test-l"), Op("Nil", [])))
                                    , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                    , Build(Anno(Str("B"), Op("Nil", [])))
                                    , Build(Anno(Int("11"), Op("Nil", [])))
                                    ]
                                  , []
                                  )
                                , Seq(
                                    CallT(
                                      SVar("apply_test_4_0")
                                    , [ Build(Anno(Str("hex-string-test-m"), Op("Nil", [])))
                                      , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                      , Build(Anno(Str("C"), Op("Nil", [])))
                                      , Build(Anno(Int("12"), Op("Nil", [])))
                                      ]
                                    , []
                                    )
                                  , Seq(
                                      CallT(
                                        SVar("apply_test_4_0")
                                      , [ Build(Anno(Str("hex-string-test-n"), Op("Nil", [])))
                                        , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                        , Build(Anno(Str("D"), Op("Nil", [])))
                                        , Build(Anno(Int("13"), Op("Nil", [])))
                                        ]
                                      , []
                                      )
                                    , Seq(
                                        CallT(
                                          SVar("apply_test_4_0")
                                        , [ Build(Anno(Str("hex-string-test-o"), Op("Nil", [])))
                                          , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                          , Build(Anno(Str("E"), Op("Nil", [])))
                                          , Build(Anno(Int("14"), Op("Nil", [])))
                                          ]
                                        , []
                                        )
                                      , Seq(
                                          CallT(
                                            SVar("apply_test_4_0")
                                          , [ Build(Anno(Str("hex-string-test-p"), Op("Nil", [])))
                                            , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                            , Build(Anno(Str("F"), Op("Nil", [])))
                                            , Build(Anno(Int("15"), Op("Nil", [])))
                                            ]
                                          , []
                                          )
                                        , Seq(
                                            CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("hex-string-test-q"), Op("Nil", [])))
                                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                              , Build(Anno(Str("FF"), Op("Nil", [])))
                                              , Build(Anno(Int("255"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          , CallT(
                                              SVar("apply_test_4_0")
                                            , [ Build(Anno(Str("hex-string-test-r"), Op("Nil", [])))
                                              , CallT(SVar("hex_string_to_int_0_0"), [], [])
                                              , Build(Anno(Str("FFFF"), Op("Nil", [])))
                                              , Build(Anno(Int("65535"), Op("Nil", [])))
                                              ]
                                            , []
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "Snd_0_0"
        , []
        , []
        , Scope(
            ["b_35", "c_35", "d_35", "n_17"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op(
                        "Cons"
                      , [ Var("b_35")
                        , Anno(
                            Op("Cons", [Var("d_35"), Var("c_35")])
                          , Wld
                          )
                        ]
                      )
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("n_17")), Build(Var("d_35")))
            )
          )
        )
      , SDefT(
          "subt_0_0"
        , []
        , []
        , Scope(
            ["f_44", "g_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("f_44"), Var("g_44")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_subti", [], [Var("f_44"), Var("g_44")])
              , Id
              , PrimT("SSL_subtr", [], [Var("f_44"), Var("g_44")])
              )
            )
          )
        )
      , SDefT(
          "is_num_0_0"
        , []
        , []
        , Scope(
            ["x_71", "r_179", "s_179"]
          , Seq(
              Match(Var("x_71"))
            , Seq(
                Match(Var("s_179"))
              , Seq(
                  Match(Var("r_179"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("48"), Op("Nil", []))
                          , Var("r_179")
                          , Anno(Int("57"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("leq_leq_0_0"), [], [])
                    , Build(Var("x_71"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "char_to_digit_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["c_42", "x_156", "y_156", "z_156", "a_157", "w_156"]
            , Seq(
                Match(
                  Anno(
                    Op(
                      ""
                    , [Var("c_42"), Anno(Int("16"), Wld)]
                    )
                  , Wld
                  )
                )
              , Seq(
                  Seq(
                    Match(Var("w_156"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Int("65"), Op("Nil", []))
                            , Var("c_42")
                            , Anno(Int("70"), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(Var("w_156"))
                      )
                    )
                  )
                , Seq(
                    Match(Var("y_156"))
                  , Seq(
                      Match(Var("a_157"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [Var("c_42"), Anno(Int("65"), Op("Nil", []))]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("subt_0_0"), [], [])
                        , Seq(
                            Match(Var("z_156"))
                          , Seq(
                              Build(
                                Anno(
                                  Op(
                                    ""
                                  , [Anno(Int("10"), Op("Nil", [])), Var("z_156")]
                                  )
                                , Op("Nil", [])
                                )
                              )
                            , Seq(
                                CallT(SVar("add_0_0"), [], [])
                              , Match(Var("x_156"))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          , Id
          , GuardedLChoice(
              Scope(
                ["b_42", "s_156", "t_156", "u_156", "v_156", "r_156"]
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Var("b_42"), Anno(Int("16"), Wld)]
                      )
                    , Wld
                    )
                  )
                , Seq(
                    Seq(
                      Match(Var("r_156"))
                    , Seq(
                        Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("97"), Op("Nil", []))
                              , Var("b_42")
                              , Anno(Int("102"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      , Seq(
                          CallT(SVar("leq_leq_0_0"), [], [])
                        , Build(Var("r_156"))
                        )
                      )
                    )
                  , Seq(
                      Match(Var("t_156"))
                    , Seq(
                        Match(Var("v_156"))
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [Var("b_42"), Anno(Int("97"), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("subt_0_0"), [], [])
                          , Seq(
                              Match(Var("u_156"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op(
                                      ""
                                    , [Anno(Int("10"), Op("Nil", [])), Var("u_156")]
                                    )
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("add_0_0"), [], [])
                                , Match(Var("s_156"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            , Id
            , Scope(
                ["y_41", "z_41", "a_42", "q_156"]
              , Seq(
                  Match(
                    Anno(
                      Op("", [Var("y_41"), Var("a_42")])
                    , Wld
                    )
                  )
                , Seq(
                    Match(Var("q_156"))
                  , Seq(
                      Build(Var("y_41"))
                    , Seq(
                        CallT(SVar("is_num_0_0"), [], [])
                      , Seq(
                          Build(
                            Anno(
                              Op(
                                ""
                              , [Var("y_41"), Anno(Int("48"), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          )
                        , Seq(
                            CallT(SVar("subt_0_0"), [], [])
                          , Seq(
                              Match(Var("z_41"))
                            , Seq(
                                Build(
                                  Anno(
                                    Op("", [Var("z_41"), Var("a_42")])
                                  , Op("Nil", [])
                                  )
                                )
                              , Seq(
                                  CallT(SVar("lt_0_0"), [], [])
                                , Build(Var("z_41"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "FoldL_1_0"
        , [ VarDec(
              "q_122"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["t_39", "u_39", "v_39", "o_152", "p_152", "n_152"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("u_39"), Var("t_39")])
                      , Wld
                      )
                    , Var("v_39")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("n_152"))
              , Seq(
                  Match(Var("p_152"))
                , Seq(
                    Build(
                      Anno(
                        Op("", [Var("u_39"), Var("v_39")])
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("q_122"), [], [])
                    , Seq(
                        Match(Var("o_152"))
                      , Build(
                          Anno(
                            Op("", [Var("t_39"), Var("o_152")])
                          , Op("Nil", [])
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "foldl_1_0"
        , [ VarDec(
              "v_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Let(
            [ SDefT(
                "w_121"
              , []
              , []
              , GuardedLChoice(
                  Scope(
                    ["x_37", "u_20"]
                  , Seq(
                      Match(
                        Anno(
                          Op(
                            ""
                          , [Anno(Op("Nil", []), Wld), Var("x_37")]
                          )
                        , Wld
                        )
                      )
                    , Seq(Match(Var("u_20")), Build(Var("x_37")))
                    )
                  )
                , Id
                , Seq(
                    CallT(
                      SVar("FoldL_1_0")
                    , [CallT(SVar("v_121"), [], [])]
                    , []
                    )
                  , CallT(SVar("w_121"), [], [])
                  )
                )
              )
            ]
          , CallT(SVar("w_121"), [], [])
          )
        )
      , SDefT(
          "pos_chars_to_int_0_0"
        , []
        , []
        , Scope(
            ["v_41", "w_41", "x_41", "g_156", "h_156"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op("Cons", [Var("w_41"), Var("v_41")])
                      , Wld
                      )
                    , Var("x_41")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("h_156"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("w_41"), Var("x_41")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("char_to_digit_0_0"), [], [])
                  , Seq(
                      Match(Var("g_156"))
                    , Seq(
                        Build(
                          Anno(
                            Op("", [Var("v_41"), Var("g_156")])
                          , Op("Nil", [])
                          )
                        )
                      , CallT(
                          SVar("foldl_1_0")
                        , [ Scope(
                              ["i_156", "j_156", "n_156", "o_156", "p_156", "k_156", "l_156", "m_156"]
                            , Seq(
                                Match(Var("k_156"))
                              , Seq(
                                  Match(Var("m_156"))
                                , Seq(
                                    CallT(SVar("Fst_0_0"), [], [])
                                  , Seq(
                                      Match(Var("l_156"))
                                    , Seq(
                                        Build(
                                          Anno(
                                            Op("", [Var("l_156"), Var("x_41")])
                                          , Op("Nil", [])
                                          )
                                        )
                                      , Seq(
                                          CallT(SVar("char_to_digit_0_0"), [], [])
                                        , Seq(
                                            Match(Var("i_156"))
                                          , Seq(
                                              Build(Var("k_156"))
                                            , Seq(
                                                Match(Var("n_156"))
                                              , Seq(
                                                  Match(Var("p_156"))
                                                , Seq(
                                                    CallT(SVar("Snd_0_0"), [], [])
                                                  , Seq(
                                                      Match(Var("o_156"))
                                                    , Seq(
                                                        Build(
                                                          Anno(
                                                            Op("", [Var("o_156"), Var("x_41")])
                                                          , Op("Nil", [])
                                                          )
                                                        )
                                                      , Seq(
                                                          CallT(SVar("mul_0_0"), [], [])
                                                        , Seq(
                                                            Match(Var("j_156"))
                                                          , Seq(
                                                              Build(
                                                                Anno(
                                                                  Op("", [Var("i_156"), Var("j_156")])
                                                                , Op("Nil", [])
                                                                )
                                                              )
                                                            , CallT(SVar("add_0_0"), [], [])
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          ]
                        , []
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "mul_0_0"
        , []
        , []
        , Scope(
            ["l_44", "m_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("l_44"), Var("m_44")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_muli", [], [Var("l_44"), Var("m_44")])
              , Id
              , PrimT("SSL_mulr", [], [Var("l_44"), Var("m_44")])
              )
            )
          )
        )
      , SDefT(
          "Nil_0_0"
        , []
        , []
        , Match(Anno(Op("Nil", []), Wld))
        )
      , SDefT(
          "foldr_3_0"
        , [ VarDec(
              "s_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "t_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "u_121"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            Seq(
              CallT(SVar("Nil_0_0"), [], [])
            , CallT(SVar("s_121"), [], [])
            )
          , Id
          , Scope(
              ["v_37", "w_37", "o_20", "p_20", "q_20", "r_20", "t_20", "s_20"]
            , Seq(
                Match(
                  Anno(
                    Op("Cons", [Var("v_37"), Var("w_37")])
                  , Wld
                  )
                )
              , Seq(
                  Scope(["n_20"], Match(Var("n_20")))
                , Seq(
                    Match(Var("p_20"))
                  , Seq(
                      Seq(
                        Seq(
                          Match(Var("s_20"))
                        , Seq(
                            Build(Var("v_37"))
                          , Seq(
                              CallT(SVar("u_121"), [], [])
                            , Seq(Match(Var("q_20")), Build(Var("s_20")))
                            )
                          )
                        )
                      , Seq(
                          Match(Var("t_20"))
                        , Seq(
                            Build(Var("w_37"))
                          , Seq(
                              CallT(
                                SVar("foldr_3_0")
                              , [ CallT(SVar("s_121"), [], [])
                                , CallT(SVar("t_121"), [], [])
                                , CallT(SVar("u_121"), [], [])
                                ]
                              , []
                              )
                            , Seq(
                                Match(Var("r_20"))
                              , Seq(
                                  Build(
                                    Anno(
                                      Op("", [Var("q_20"), Var("r_20")])
                                    , Op("Nil", [])
                                    )
                                  )
                                , Seq(
                                    CallT(SVar("t_121"), [], [])
                                  , Seq(Match(Var("o_20")), Build(Var("p_20")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    , Build(Var("o_20"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "length_0_0"
        , []
        , []
        , CallT(
            SVar("foldr_3_0")
          , [ Build(Anno(Int("0"), Op("Nil", [])))
            , CallT(SVar("add_0_0"), [], [])
            , Build(Anno(Int("1"), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "neg_chars_to_int_0_0"
        , []
        , []
        , Scope(
            ["t_41", "u_41", "c_156", "d_156", "e_156", "f_156", "z_155", "a_156", "b_156"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [ Anno(
                        Op(
                          "Cons"
                        , [Anno(Int("45"), Wld), Var("u_41")]
                        )
                      , Wld
                      )
                    , Var("t_41")
                    ]
                  )
                , Wld
                )
              )
            , Seq(
                Seq(
                  Match(Var("z_155"))
                , Seq(
                    Match(Var("b_156"))
                  , Seq(
                      Build(Var("u_41"))
                    , Seq(
                        CallT(SVar("length_0_0"), [], [])
                      , Seq(
                          Match(Var("a_156"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("a_156"), Anno(Int("0"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("gt_0_0"), [], [])
                            , Build(Var("z_155"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , Seq(
                  Match(Var("d_156"))
                , Seq(
                    Match(Var("f_156"))
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("u_41"), Var("t_41")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("pos_chars_to_int_0_0"), [], [])
                      , Seq(
                          Match(Var("e_156"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Anno(Int("-1"), Op("Nil", [])), Var("e_156")]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("mul_0_0"), [], [])
                            , Match(Var("c_156"))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "generic_chars_to_int_0_0"
        , []
        , []
        , GuardedLChoice(
            CallT(SVar("neg_chars_to_int_0_0"), [], [])
          , Id
          , CallT(SVar("pos_chars_to_int_0_0"), [], [])
          )
        )
      , SDefT(
          "explode_string_0_0"
        , []
        , []
        , Scope(
            ["e_78"]
          , Seq(
              Match(Var("e_78"))
            , PrimT("SSL_explode_string", [], [Var("e_78")])
            )
          )
        )
      , SDefT(
          "generic_string_to_int_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [CallT(SVar("explode_string_0_0"), [], []), Id]
            , []
            )
          , CallT(SVar("generic_chars_to_int_0_0"), [], [])
          )
        )
      , SDefT(
          "dec_string_to_int_0_0"
        , []
        , []
        , Scope(
            ["l_155", "m_155"]
          , Seq(
              Match(Var("m_155"))
            , Seq(
                Match(Var("l_155"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("l_155"), Anno(Int("10"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("generic_string_to_int_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "dec_string_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("dec-string-test-a"), Op("Nil", [])))
              , CallT(SVar("dec_string_to_int_0_0"), [], [])
              , Build(Anno(Str("0"), Op("Nil", [])))
              , Build(Anno(Int("0"), Op("Nil", [])))
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("dec-string-test-b"), Op("Nil", [])))
                , CallT(SVar("dec_string_to_int_0_0"), [], [])
                , Build(Anno(Str("1"), Op("Nil", [])))
                , Build(Anno(Int("1"), Op("Nil", [])))
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("dec-string-test-c"), Op("Nil", [])))
                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                  , Build(Anno(Str("10"), Op("Nil", [])))
                  , Build(Anno(Int("10"), Op("Nil", [])))
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_test_4_0")
                  , [ Build(Anno(Str("dec-string-test-d"), Op("Nil", [])))
                    , CallT(SVar("dec_string_to_int_0_0"), [], [])
                    , Build(Anno(Str("100"), Op("Nil", [])))
                    , Build(Anno(Int("100"), Op("Nil", [])))
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_test_4_0")
                    , [ Build(Anno(Str("dec-string-test-e"), Op("Nil", [])))
                      , CallT(SVar("dec_string_to_int_0_0"), [], [])
                      , Build(Anno(Str("101"), Op("Nil", [])))
                      , Build(Anno(Int("101"), Op("Nil", [])))
                      ]
                    , []
                    )
                  , Seq(
                      CallT(
                        SVar("apply_test_4_0")
                      , [ Build(Anno(Str("dec-string-test-f"), Op("Nil", [])))
                        , CallT(SVar("dec_string_to_int_0_0"), [], [])
                        , Build(Anno(Str("34673"), Op("Nil", [])))
                        , Build(Anno(Int("34673"), Op("Nil", [])))
                        ]
                      , []
                      )
                    , Seq(
                        CallT(
                          SVar("apply_test_4_0")
                        , [ Build(Anno(Str("dec-string-test-g"), Op("Nil", [])))
                          , CallT(SVar("dec_string_to_int_0_0"), [], [])
                          , Build(Anno(Str("-0"), Op("Nil", [])))
                          , Build(Anno(Int("-0"), Op("Nil", [])))
                          ]
                        , []
                        )
                      , Seq(
                          CallT(
                            SVar("apply_test_4_0")
                          , [ Build(Anno(Str("dec-string-test-h"), Op("Nil", [])))
                            , CallT(SVar("dec_string_to_int_0_0"), [], [])
                            , Build(Anno(Str("-1"), Op("Nil", [])))
                            , Build(Anno(Int("-1"), Op("Nil", [])))
                            ]
                          , []
                          )
                        , Seq(
                            CallT(
                              SVar("apply_test_4_0")
                            , [ Build(Anno(Str("dec-string-test-i"), Op("Nil", [])))
                              , CallT(SVar("dec_string_to_int_0_0"), [], [])
                              , Build(Anno(Str("-10"), Op("Nil", [])))
                              , Build(Anno(Int("-10"), Op("Nil", [])))
                              ]
                            , []
                            )
                          , Seq(
                              CallT(
                                SVar("apply_test_4_0")
                              , [ Build(Anno(Str("dec-string-test-j"), Op("Nil", [])))
                                , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                , Build(Anno(Str("-100"), Op("Nil", [])))
                                , Build(Anno(Int("-100"), Op("Nil", [])))
                                ]
                              , []
                              )
                            , Seq(
                                CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("dec-string-test-k"), Op("Nil", [])))
                                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("-101"), Op("Nil", [])))
                                  , Build(Anno(Int("-101"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              , CallT(
                                  SVar("apply_test_4_0")
                                , [ Build(Anno(Str("dec-string-test-l"), Op("Nil", [])))
                                  , CallT(SVar("dec_string_to_int_0_0"), [], [])
                                  , Build(Anno(Str("-34673"), Op("Nil", [])))
                                  , Build(Anno(Int("-34673"), Op("Nil", [])))
                                  ]
                                , []
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "leq_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("leq_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "lt_leq_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("lt_0_0"), [], [])
            , CallT(SVar("leq_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "comp_comp_2_0"
        , [ VarDec(
              "p_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "q_124"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["u_43", "v_43", "w_43", "x_43"]
          , Seq(
              Match(
                Anno(
                  Op(
                    ""
                  , [Var("u_43"), Var("v_43"), Var("w_43")]
                  )
                , Wld
                )
              )
            , Seq(
                Match(Var("x_43"))
              , Seq(
                  Build(
                    Anno(
                      Op("", [Var("u_43"), Var("v_43")])
                    , Op("Nil", [])
                    )
                  )
                , Seq(
                    CallT(SVar("p_124"), [], [])
                  , Seq(
                      Build(
                        Anno(
                          Op("", [Var("v_43"), Var("w_43")])
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("q_124"), [], [])
                      , Build(Var("x_43"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "lt_lt_0_0"
        , []
        , []
        , CallT(
            SVar("comp_comp_2_0")
          , [ CallT(SVar("lt_0_0"), [], [])
            , CallT(SVar("lt_0_0"), [], [])
            ]
          , []
          )
        )
      , SDefT(
          "lt_lt_test_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("x <= y <= z a"), Op("Nil", [])))
              , CallT(SVar("leq_leq_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Int("2"), Op("Nil", []))
                      , Anno(Int("3"), Op("Nil", []))
                      , Anno(Int("4"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Int("2"), Op("Nil", []))
                      , Anno(Int("3"), Op("Nil", []))
                      , Anno(Int("4"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("x <  y <  z b"), Op("Nil", [])))
                , CallT(SVar("lt_lt_0_0"), [], [])
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Int("2"), Op("Nil", []))
                        , Anno(Int("3"), Op("Nil", []))
                        , Anno(Int("4"), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                , Build(
                    Anno(
                      Op(
                        ""
                      , [ Anno(Int("2"), Op("Nil", []))
                        , Anno(Int("3"), Op("Nil", []))
                        , Anno(Int("4"), Op("Nil", []))
                        ]
                      )
                    , Op("Nil", [])
                    )
                  )
                ]
              , []
              )
            , Seq(
                CallT(
                  SVar("apply_test_4_0")
                , [ Build(Anno(Str("x <= y <= z c"), Op("Nil", [])))
                  , CallT(SVar("leq_leq_0_0"), [], [])
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          , Anno(Int("2"), Op("Nil", []))
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  ]
                , []
                )
              , Seq(
                  CallT(
                    SVar("apply_and_fail_3_0")
                  , [ Build(Anno(Str("x <  y <= z d"), Op("Nil", [])))
                    , CallT(SVar("lt_leq_0_0"), [], [])
                    , Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Int("2"), Op("Nil", []))
                            , Anno(Int("2"), Op("Nil", []))
                            , Anno(Int("2"), Op("Nil", []))
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    ]
                  , []
                  )
                , Seq(
                    CallT(
                      SVar("apply_and_fail_3_0")
                    , [ Build(Anno(Str("x <= y <= z e"), Op("Nil", [])))
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("2"), Op("Nil", []))
                              , Anno(Int("1"), Op("Nil", []))
                              , Anno(Int("2"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  , CallT(
                      SVar("apply_and_fail_3_0")
                    , [ Build(Anno(Str("x <= y <= z f"), Op("Nil", [])))
                      , CallT(SVar("leq_leq_0_0"), [], [])
                      , Build(
                          Anno(
                            Op(
                              ""
                            , [ Anno(Int("1"), Op("Nil", []))
                              , Anno(Int("2"), Op("Nil", []))
                              , Anno(Int("1"), Op("Nil", []))
                              ]
                            )
                          , Op("Nil", [])
                          )
                        )
                      ]
                    , []
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "geq_0_0"
        , []
        , []
        , Scope(
            ["f_45"]
          , GuardedLChoice(
              Match(
                Anno(
                  Op("", [Var("f_45"), Var("f_45")])
                , Wld
                )
              )
            , Id
            , CallT(SVar("gt_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "lt_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("geq_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "ltS_0_0"
        , []
        , []
        , Scope(
            ["l_43"]
          , Seq(
              Match(Var("l_43"))
            , Seq(
                CallT(
                  SVar("_2_0")
                , [ CallT(SVar("string_to_int_0_0"), [], [])
                  , CallT(SVar("string_to_int_0_0"), [], [])
                  ]
                , []
                )
              , Seq(
                  CallT(SVar("lt_0_0"), [], [])
                , Build(Var("l_43"))
                )
              )
            )
          )
        )
      , SDefT(
          "int_to_string_0_0"
        , []
        , []
        , Scope(
            ["d_42"]
          , Seq(
              Match(Var("d_42"))
            , PrimT("SSL_int_to_string", [], [Var("d_42")])
            )
          )
        )
      , SDefT(
          "string_to_int_0_0"
        , []
        , []
        , Scope(
            ["e_42"]
          , Seq(
              Match(Var("e_42"))
            , PrimT("SSL_string_to_int", [], [Var("e_42")])
            )
          )
        )
      , SDefT(
          "addS_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("_2_0")
            , [ CallT(SVar("string_to_int_0_0"), [], [])
              , CallT(SVar("string_to_int_0_0"), [], [])
              ]
            , []
            )
          , Seq(
              CallT(SVar("add_0_0"), [], [])
            , CallT(SVar("int_to_string_0_0"), [], [])
            )
          )
        )
      , SDefT(
          "test3_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test3"), Op("Nil", [])))
              , CallT(SVar("addS_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str("5"), Op("Nil", []))
                      , Anno(Str("3"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(Anno(Str("8"), Op("Nil", [])))
              ]
            , []
            )
          , CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test3"), Op("Nil", [])))
              , CallT(SVar("ltS_0_0"), [], [])
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str("3"), Op("Nil", []))
                      , Anno(Str("5"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Str("3"), Op("Nil", []))
                      , Anno(Str("5"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "Fst_0_0"
        , []
        , []
        , Scope(
            ["z_34", "a_35", "m_17"]
          , Seq(
              Match(
                Anno(
                  Explode(
                    Anno(Str(""), Wld)
                  , Anno(
                      Op("Cons", [Var("a_35"), Var("z_34")])
                    , Wld
                    )
                  )
                , Wld
                )
              )
            , Seq(Match(Var("m_17")), Build(Var("a_35")))
            )
          )
        )
      , SDefT(
          "try_1_0"
        , [ VarDec(
              "r_120"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(CallT(SVar("r_120"), [], []), Id, Id)
        )
      , SDefT(
          "repeat_1_0"
        , [ VarDec(
              "u_134"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("try_1_0")
          , [ Seq(
                CallT(SVar("u_134"), [], [])
              , CallT(
                  SVar("repeat_1_0")
                , [CallT(SVar("u_134"), [], [])]
                , []
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "log2_0_0"
        , []
        , []
        , Scope(
            ["d_159", "t_158", "u_158"]
          , Seq(
              Seq(
                Match(Var("u_158"))
              , Seq(
                  Match(Var("t_158"))
                , Build(
                    Anno(
                      Op(
                        ""
                      , [Var("t_158"), Anno(Int("0"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                )
              )
            , Seq(
                CallT(
                  SVar("repeat_1_0")
                , [ CallT(
                      SVar("_2_0")
                    , [ Scope(
                          ["v_158", "w_158", "a_159", "b_159", "c_159", "x_158", "y_158", "z_158"]
                        , Seq(
                            Seq(
                              Match(Var("x_158"))
                            , Seq(
                                Match(Var("z_158"))
                              , Seq(
                                  Match(Var("y_158"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op(
                                          ""
                                        , [Var("y_158"), Anno(Int("2"), Op("Nil", []))]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  , Seq(
                                      CallT(SVar("divi_0_0"), [], [])
                                    , Seq(Match(Var("v_158")), Build(Var("x_158")))
                                    )
                                  )
                                )
                              )
                            )
                          , Seq(
                              Match(Var("a_159"))
                            , Seq(
                                Match(Var("c_159"))
                              , Seq(
                                  Match(Var("b_159"))
                                , Seq(
                                    Build(
                                      Anno(
                                        Op(
                                          ""
                                        , [Var("b_159"), Anno(Int("2"), Op("Nil", []))]
                                        )
                                      , Op("Nil", [])
                                      )
                                    )
                                  , Seq(
                                      CallT(SVar("mod_0_0"), [], [])
                                    , Seq(
                                        Match(Anno(Int("0"), Wld))
                                      , Seq(
                                          Match(Var("w_158"))
                                        , Seq(
                                            Build(
                                              Anno(
                                                Op("", [Var("v_158"), Var("w_158")])
                                              , Op("Nil", [])
                                              )
                                            )
                                          , CallT(SVar("Fst_0_0"), [], [])
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      , CallT(SVar("inc_0_0"), [], [])
                      ]
                    , []
                    )
                  ]
                , []
                )
              , Seq(
                  Match(
                    Anno(
                      Op(
                        ""
                      , [Anno(Int("1"), Wld), Var("d_159")]
                      )
                    , Wld
                    )
                  )
                , Build(Var("d_159"))
                )
              )
            )
          )
        )
      , SDefT(
          "apply_and_fail_4_0"
        , [ VarDec(
              "a_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "c_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "d_114"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("do_test_2_0")
          , [ CallT(SVar("a_114"), [], [])
            , GuardedLChoice(
                Seq(
                  CallT(
                    SVar("sunit_create_input_1_0")
                  , [CallT(SVar("c_114"), [], [])]
                  , []
                  )
                , GuardedLChoice(CallT(SVar("b_114"), [], []), Fail, Id)
                )
              , Id
              , Seq(
                  Build(Anno(Str("  succeeded (should fail)"), Op("Nil", [])))
                , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "apply_and_fail_3_0"
        , [ VarDec(
              "x_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "y_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "z_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , CallT(
            SVar("apply_and_fail_4_0")
          , [ CallT(SVar("x_113"), [], [])
            , CallT(SVar("y_113"), [], [])
            , CallT(SVar("z_113"), [], [])
            , Build(Anno(Op("", []), Op("Nil", [])))
            ]
          , []
          )
        )
      , SDefT(
          "mod_0_0"
        , []
        , []
        , Scope(
            ["x_44", "y_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("x_44"), Var("y_44")])
                , Wld
                )
              )
            , PrimT("SSL_mod", [], [Var("x_44"), Var("y_44")])
            )
          )
        )
      , SDefT(
          "divi_0_0"
        , []
        , []
        , Scope(
            ["t_44", "u_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("t_44"), Var("u_44")])
                , Wld
                )
              )
            , PrimT("SSL_divi", [], [Var("t_44"), Var("u_44")])
            )
          )
        )
      , SDefT(
          "test2_0_0"
        , []
        , []
        , Seq(
            CallT(
              SVar("apply_test_4_0")
            , [ Build(Anno(Str("test2a"), Op("Nil", [])))
              , Scope(
                  ["a_0", "b_0", "f_0", "g_0", "h_0", "c_0", "d_0", "e_0"]
                , Seq(
                    Seq(
                      Match(Var("c_0"))
                    , Seq(
                        Match(Var("e_0"))
                      , Seq(
                          Match(Var("d_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("d_0"), Anno(Int("2"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("divi_0_0"), [], [])
                            , Seq(Match(Var("a_0")), Build(Var("c_0")))
                            )
                          )
                        )
                      )
                    )
                  , Seq(
                      Match(Var("f_0"))
                    , Seq(
                        Match(Var("h_0"))
                      , Seq(
                          Match(Var("g_0"))
                        , Seq(
                            Build(
                              Anno(
                                Op(
                                  ""
                                , [Var("g_0"), Anno(Int("2"), Op("Nil", []))]
                                )
                              , Op("Nil", [])
                              )
                            )
                          , Seq(
                              CallT(SVar("mod_0_0"), [], [])
                            , Seq(
                                Match(Anno(Int("0"), Wld))
                              , Seq(
                                  Match(Var("b_0"))
                                , Build(
                                    Anno(
                                      Op("", [Var("a_0"), Var("b_0")])
                                    , Op("Nil", [])
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              , Build(Anno(Int("16"), Op("Nil", [])))
              , Build(
                  Anno(
                    Op(
                      ""
                    , [ Anno(Int("8"), Op("Nil", []))
                      , Anno(Int("0"), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              ]
            , []
            )
          , Seq(
              CallT(
                SVar("apply_test_4_0")
              , [ Build(Anno(Str("test2b"), Op("Nil", [])))
                , CallT(SVar("log2_0_0"), [], [])
                , Build(Anno(Int("16"), Op("Nil", [])))
                , Build(Anno(Int("4"), Op("Nil", [])))
                ]
              , []
              )
            , CallT(
                SVar("apply_and_fail_3_0")
              , [ Build(Anno(Str("test2c"), Op("Nil", [])))
                , CallT(SVar("log2_0_0"), [], [])
                , Build(Anno(Int("6"), Op("Nil", [])))
                ]
              , []
              )
            )
          )
        )
      , SDefT(
          "gt_0_0"
        , []
        , []
        , Scope(
            ["z_44", "a_45", "w_0"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_44"), Var("a_45")])
                , Wld
                )
              )
            , Seq(
                Match(Var("w_0"))
              , Seq(
                  GuardedLChoice(
                    PrimT("SSL_gti", [], [Var("z_44"), Var("a_45")])
                  , Id
                  , PrimT("SSL_gtr", [], [Var("z_44"), Var("a_45")])
                  )
                , Build(Var("w_0"))
                )
              )
            )
          )
        )
      , SDefT(
          "leq_0_0"
        , []
        , []
        , GuardedLChoice(CallT(SVar("gt_0_0"), [], []), Fail, Id)
        )
      , SDefT(
          "print_failure_0_1"
        , []
        , [VarDec("g_21", ConstType(Sort("ATerm", [])))]
        , CallT(
            SVar("debug_1_0")
          , [Seq(
               Build(Var("g_21"))
             , CallT(SVar("sunit_failure_string_0_0"), [], [])
             )]
          , []
          )
        )
      , SDefT(
          "sunit_create_output_1_0"
        , [ VarDec(
              "y_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("y_112"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: output strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "concat_strings_0_0"
        , []
        , []
        , Scope(
            ["a_78"]
          , Seq(
              Match(Var("a_78"))
            , PrimT("SSL_concat_strings", [], [Var("a_78")])
            )
          )
        )
      , SDefT(
          "sunit_color_plain_0_0"
        , []
        , []
        , Scope(
            ["q_0", "r_0"]
          , Seq(
              Match(Var("r_0"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("q_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("q_0"), Anno(Str("[m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "strcat_0_0"
        , []
        , []
        , Scope(
            ["y_77", "z_77"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("y_77"), Var("z_77")])
                , Wld
                )
              )
            , PrimT("SSL_strcat", [], [Var("y_77"), Var("z_77")])
            )
          )
        )
      , SDefT(
          "conc_strings_0_0"
        , []
        , []
        , Scope(
            ["x_77"]
          , GuardedLChoice(
              Seq(
                Match(Anno(Op("", [Wld, Wld]), Wld))
              , CallT(SVar("strcat_0_0"), [], [])
              )
            , Id
            , Seq(
                Match(
                  Anno(
                    Explode(Anno(Str(""), Wld), Var("x_77"))
                  , Wld
                  )
                )
              , Seq(
                  Build(Var("x_77"))
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "implode_string_0_0"
        , []
        , []
        , Scope(
            ["d_78"]
          , Seq(
              Match(Var("d_78"))
            , PrimT("SSL_implode_string", [], [Var("d_78")])
            )
          )
        )
      , SDefT(
          "sunit_color_red_0_0"
        , []
        , []
        , Scope(
            ["o_0", "p_0"]
          , Seq(
              Match(Var("p_0"))
            , Seq(
                Build(
                  Anno(
                    Op(
                      "Cons"
                    , [ Anno(Int("27"), Op("Nil", []))
                      , Anno(Op("Nil", []), Op("Nil", []))
                      ]
                    )
                  , Op("Nil", [])
                  )
                )
              , Seq(
                  CallT(SVar("implode_string_0_0"), [], [])
                , Seq(
                    Match(Var("o_0"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [Var("o_0"), Anno(Str("[01;31m"), Op("Nil", []))]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , CallT(SVar("conc_strings_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "getenv_0_0"
        , []
        , []
        , Scope(
            ["w_78"]
          , Seq(
              Match(Var("w_78"))
            , PrimT("SSL_getenv", [], [Var("w_78")])
            )
          )
        )
      , SDefT(
          "sunit_failure_string_0_0"
        , []
        , []
        , GuardedLChoice(
            Scope(
              ["f_21"]
            , Seq(
                Match(Var("f_21"))
              , Seq(
                  Build(Anno(Str("ENABLE_COLORS"), Op("Nil", [])))
                , Seq(
                    CallT(SVar("getenv_0_0"), [], [])
                  , Seq(
                      Match(Anno(Str("true"), Wld))
                    , Build(Var("f_21"))
                    )
                  )
                )
              )
            )
          , Scope(
              ["i_0", "j_0", "k_0", "n_0", "m_0"]
            , Seq(
                Scope(
                  ["l_0"]
                , Seq(
                    Match(Var("l_0"))
                  , Seq(
                      CallT(SVar("sunit_color_red_0_0"), [], [])
                    , Seq(Match(Var("i_0")), Build(Var("l_0")))
                    )
                  )
                )
              , Seq(
                  Seq(
                    Seq(
                      Match(Var("m_0"))
                    , Seq(Match(Var("j_0")), Build(Var("m_0")))
                    )
                  , Seq(
                      Match(Var("n_0"))
                    , Seq(
                        CallT(SVar("sunit_color_plain_0_0"), [], [])
                      , Seq(
                          Match(Var("k_0"))
                        , Build(
                            Anno(
                              Op(
                                "Cons"
                              , [ Var("i_0")
                                , Anno(
                                    Op(
                                      "Cons"
                                    , [ Var("j_0")
                                      , Anno(
                                          Op(
                                            "Cons"
                                          , [Var("k_0"), Anno(Op("Nil", []), Op("Nil", []))]
                                          )
                                        , Op("Nil", [])
                                        )
                                      ]
                                    )
                                  , Op("Nil", [])
                                  )
                                ]
                              )
                            , Op("Nil", [])
                            )
                          )
                        )
                      )
                    )
                  )
                , CallT(SVar("concat_strings_0_0"), [], [])
                )
              )
            )
          , Id
          )
        )
      , SDefT(
          "print_failure_0_0"
        , []
        , []
        , Seq(
            CallT(SVar("sunit_failure_string_0_0"), [], [])
          , CallT(SVar("debug_0_0"), [], [])
          )
        )
      , SDefT(
          "say_1_0"
        , [ VarDec(
              "i_136"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_82"]
          , Seq(
              Match(Var("h_82"))
            , Seq(
                CallT(SVar("i_136"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Build(Var("h_82"))
                )
              )
            )
          )
        )
      , SDefT(
          "sunit_create_input_1_0"
        , [ VarDec(
              "x_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , GuardedLChoice(
            CallT(SVar("x_112"), [], [])
          , Id
          , Seq(
              CallT(
                SVar("say_1_0")
              , [Build(Anno(Str("error: input strategy for this test failed"), Op("Nil", [])))]
              , []
              )
            , Fail
            )
          )
        )
      , SDefT(
          "record_failure_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, CallT(SVar("inc_0_0"), [], [])]
          , []
          )
        )
      , SDefT(
          "add_0_0"
        , []
        , []
        , Scope(
            ["z_43", "a_44"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("z_43"), Var("a_44")])
                , Wld
                )
              )
            , GuardedLChoice(
                PrimT("SSL_addi", [], [Var("z_43"), Var("a_44")])
              , Id
              , PrimT("SSL_addr", [], [Var("z_43"), Var("a_44")])
              )
            )
          )
        )
      , SDefT(
          "inc_0_0"
        , []
        , []
        , Scope(
            ["p_158", "q_158"]
          , Seq(
              Match(Var("q_158"))
            , Seq(
                Match(Var("p_158"))
              , Seq(
                  Build(
                    Anno(
                      Op(
                        ""
                      , [Var("p_158"), Anno(Int("1"), Op("Nil", []))]
                      )
                    , Op("Nil", [])
                    )
                  )
                , CallT(SVar("add_0_0"), [], [])
                )
              )
            )
          )
        )
      , SDefT(
          "record_success_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [CallT(SVar("inc_0_0"), [], []), Id]
          , []
          )
        )
      , SDefT(
          "debug_0_0"
        , []
        , []
        , Scope(
            ["l_82", "t_191", "u_191"]
          , Seq(
              Match(Var("l_82"))
            , Seq(
                Match(Var("u_191"))
              , Seq(
                  Match(Var("t_191"))
                , Seq(
                    Build(
                      Anno(
                        Op(
                          ""
                        , [ Anno(Op("stderr", []), Op("Nil", []))
                          , Anno(
                              Op(
                                "Cons"
                              , [Var("t_191"), Anno(Op("Nil", []), Op("Nil", []))]
                              )
                            , Op("Nil", [])
                            )
                          ]
                        )
                      , Op("Nil", [])
                      )
                    )
                  , Seq(
                      CallT(SVar("printnl_0_0"), [], [])
                    , Build(Var("l_82"))
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "do_test_2_0"
        , [ VarDec(
              "z_112"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "a_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["h_21"]
          , Seq(
              Match(Var("h_21"))
            , Seq(
                CallT(SVar("z_112"), [], [])
              , Seq(
                  CallT(SVar("debug_0_0"), [], [])
                , Seq(
                    Build(Var("h_21"))
                  , GuardedLChoice(
                      Scope(
                        ["i_21"]
                      , Seq(
                          Match(Var("i_21"))
                        , Seq(
                            CallT(SVar("a_113"), [], [])
                          , Seq(
                              Build(Var("i_21"))
                            , CallT(SVar("record_success_0_0"), [], [])
                            )
                          )
                        )
                      )
                    , Id
                    , CallT(SVar("record_failure_0_0"), [], [])
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "apply_test_4_0"
        , [ VarDec(
              "m_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "n_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "o_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "p_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["b_22", "c_22"]
          , CallT(
              SVar("do_test_2_0")
            , [ CallT(SVar("m_113"), [], [])
              , Seq(
                  GuardedLChoice(
                    Seq(
                      CallT(
                        SVar("sunit_create_input_1_0")
                      , [CallT(SVar("o_113"), [], [])]
                      , []
                      )
                    , CallT(SVar("n_113"), [], [])
                    )
                  , Id
                  , Seq(
                      Build(Anno(Str("  strategy failed"), Op("Nil", [])))
                    , Seq(CallT(SVar("print_failure_0_0"), [], []), Fail)
                    )
                  )
                , Seq(
                    Match(Var("b_22"))
                  , Seq(
                      CallT(
                        SVar("sunit_create_output_1_0")
                      , [CallT(SVar("p_113"), [], [])]
                      , []
                      )
                    , Seq(
                        Match(Var("c_22"))
                      , GuardedLChoice(
                          Seq(Build(Var("c_22")), Match(Var("b_22")))
                        , Id
                        , Scope(
                            ["u_0", "v_0", "s_0", "t_0"]
                          , Seq(
                              Build(Var("b_22"))
                            , Seq(
                                Match(Var("t_0"))
                              , Seq(
                                  Build(Anno(Str("  result not equal : "), Op("Nil", [])))
                                , Seq(
                                    Match(Var("s_0"))
                                  , Seq(
                                      Build(Var("t_0"))
                                    , Seq(
                                        CallT(SVar("print_failure_0_1"), [], [Var("s_0")])
                                      , Seq(
                                          Build(Var("c_22"))
                                        , Seq(
                                            Match(Var("v_0"))
                                          , Seq(
                                              Build(Anno(Str("  expected         : "), Op("Nil", [])))
                                            , Seq(
                                                Match(Var("u_0"))
                                              , Seq(
                                                  Build(Var("v_0"))
                                                , Seq(
                                                    CallT(SVar("print_failure_0_1"), [], [Var("u_0")])
                                                  , Fail
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            , []
            )
          )
        )
      , SDefT(
          "test1_0_0"
        , []
        , []
        , CallT(
            SVar("apply_test_4_0")
          , [ Build(Anno(Str("test1"), Op("Nil", [])))
            , CallT(SVar("leq_0_0"), [], [])
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Int("5"), Op("Nil", []))
                    , Anno(Int("5"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            , Build(
                Anno(
                  Op(
                    ""
                  , [ Anno(Int("5"), Op("Nil", []))
                    , Anno(Int("5"), Op("Nil", []))
                    ]
                  )
                , Op("Nil", [])
                )
              )
            ]
          , []
          )
        )
      , SDefT(
          "check_for_failures_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [Id, Match(Anno(Int("0"), Wld))]
          , []
          )
        )
      , SDefT(
          "_2_0"
        , [ VarDec(
              "a_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "b_105"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["a_1", "y_0", "z_0", "c_1", "e_1"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("y_0"), Var("z_0")])
                , Var("a_1")
                )
              )
            , Seq(
                Build(Var("y_0"))
              , Seq(
                  CallT(SVar("a_105"), [], [])
                , Seq(
                    Match(Var("c_1"))
                  , Seq(
                      Build(Var("z_0"))
                    , Seq(
                        CallT(SVar("b_105"), [], [])
                      , Seq(
                          Match(Var("e_1"))
                        , Build(
                            Anno(
                              Op("", [Var("c_1"), Var("e_1")])
                            , Var("a_1")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "report_test_0_0"
        , []
        , []
        , CallT(
            SVar("_2_0")
          , [ CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("successes: "), Op("Nil", [])))]
              , []
              )
            , CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("failures: "), Op("Nil", [])))]
              , []
              )
            ]
          , []
          )
        )
      , SDefT(
          "init_record_0_0"
        , []
        , []
        , Build(
            Anno(
              Op(
                ""
              , [ Anno(Int("0"), Op("Nil", []))
                , Anno(Int("0"), Op("Nil", []))
                ]
              )
            , Op("Nil", [])
            )
          )
        )
      , SDefT(
          "printnl_0_0"
        , []
        , []
        , Scope(
            ["t_82", "u_82", "v_82"]
          , Seq(
              Match(
                Anno(
                  Op("", [Var("t_82"), Var("u_82")])
                , Wld
                )
              )
            , Seq(
                Match(Var("v_82"))
              , Seq(
                  PrimT("SSL_printnl", [], [Var("t_82"), Var("u_82")])
                , Build(Var("v_82"))
                )
              )
            )
          )
        )
      , SDefT(
          "debug_1_0"
        , [ VarDec(
              "r_136"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Scope(
            ["m_82", "v_191", "w_191", "y_191", "x_191"]
          , Seq(
              Match(Var("m_82"))
            , Seq(
                Seq(
                  Match(Var("x_191"))
                , Seq(
                    CallT(SVar("r_136"), [], [])
                  , Seq(Match(Var("v_191")), Build(Var("x_191")))
                  )
                )
              , Seq(
                  Match(Var("y_191"))
                , Seq(
                    Match(Var("w_191"))
                  , Seq(
                      Build(
                        Anno(
                          Op(
                            ""
                          , [ Anno(Op("stderr", []), Op("Nil", []))
                            , Anno(
                                Op(
                                  "Cons"
                                , [ Var("v_191")
                                  , Anno(
                                      Op(
                                        "Cons"
                                      , [Var("w_191"), Anno(Op("Nil", []), Op("Nil", []))]
                                      )
                                    , Op("Nil", [])
                                    )
                                  ]
                                )
                              , Op("Nil", [])
                              )
                            ]
                          )
                        , Op("Nil", [])
                        )
                      )
                    , Seq(
                        CallT(SVar("printnl_0_0"), [], [])
                      , Build(Var("m_82"))
                      )
                    )
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "test_suite_2_0"
        , [ VarDec(
              "k_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          , VarDec(
              "l_113"
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
          ]
        , []
        , Seq(
            CallT(SVar("k_113"), [], [])
          , Seq(
              CallT(
                SVar("debug_1_0")
              , [Build(Anno(Str("test suite: "), Op("Nil", [])))]
              , []
              )
            , Seq(
                CallT(SVar("init_record_0_0"), [], [])
              , Seq(
                  CallT(SVar("l_113"), [], [])
                , Seq(
                    CallT(SVar("report_test_0_0"), [], [])
                  , CallT(SVar("check_for_failures_0_0"), [], [])
                  )
                )
              )
            )
          )
        )
      , SDefT(
          "main_0_0"
        , []
        , []
        , CallT(
            SVar("test_suite_2_0")
          , [ Build(Anno(Str("integers-test"), Op("Nil", [])))
            , Seq(
                CallT(SVar("test1_0_0"), [], [])
              , Seq(
                  CallT(SVar("test2_0_0"), [], [])
                , Seq(
                    CallT(SVar("test3_0_0"), [], [])
                  , Seq(
                      CallT(SVar("lt_lt_test_0_0"), [], [])
                    , Seq(
                        CallT(SVar("dec_string_test_0_0"), [], [])
                      , Seq(
                          CallT(SVar("hex_string_test_0_0"), [], [])
                        , CallT(SVar("bin_string_test_0_0"), [], [])
                        )
                      )
                    )
                  )
                )
              )
            ]
          , []
          )
        )
      ]
    )
  ]
)
