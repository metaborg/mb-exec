/**
 * Signature for the Eclipse JDT Abstract Syntax Tree.
 *
 * Licensed under the GNU Lesser General Public License, v2.1
 *
 * @author Karl Trygve Kalleberg <karltk@ii.uib.no>
 */

module spoofax/bindings/eclipse/EclipseJava
signature
  sorts
   AbstractTypeDeclaration
   Annotation
   ASTNode
   BodyDeclaration
   Expression 
   Modifier
   Statement
   Type
   TypeParameter
   VariableDeclarationFragment
   Comment
   BodyDeclaration
  constructors
                                    : Expression -> ASTNode
                                    : Javadoc -> Comment
                                    : AbstractTypeDeclaration -> BodyDeclaration
    AnnotationTypeDeclaration       : Javadoc * Term * Term * Term -> AbstractTypeDeclaration
    AnnotationTypeMemberDeclaration : Javadoc * Term * Term * Term * Term -> Term
    AnonymousClassDeclaration       : Term -> ASTNode
    ArrayAccess                     : Expression * Expression -> Expression
    ArrayCreation                   : Term * Term * Term -> Expression
    ArrayInitializer                : Term -> Expression
    ArrayType                       : Type * Int * Type -> Type
    AssertStatement                 : Term * Term -> Statement
    Assignment                      : AssignmentOperator * Expression * Expression -> Expression
    BlockComment                    : Comment
    Block                           : List(Statement) -> Statement 
    BooleanLiteral                  : Term -> Expression
    BooleanType                     : Type
    BreakStatement                  : Term -> Statement
    ByteType                        : Type
    CastExpression                  : Term * Term -> Expression
    CatchClause                     : Term * Term -> ASTNode
    CharacterLiteral                : Term -> Expression
    ClassInstanceCreation           : Term * Term * Term * Term -> Expression
    CompilationUnit                 : PackageDeclaration * List(ImportDeclaration) * List(AbstractTypeDeclaration) -> ASTNode
    ConditionalExpression           : Term * Term * Term -> Expression
    ConstructorInvocation           : Term -> Statement
    ContinueStatement               : Term -> Statement
    DoStatement                     : Term * Term -> Statement
    DoubleType                      : Type
    EmptyStatement                  : Statement
    EnhancedForStatement            : Term * Term * Term -> Statement
    EnumConstantDeclaration         : Javadoc * Term * Term * Term * Term -> BodyDeclaration
    EnumDeclaration                 : Javadoc * Term * Term * Term * Term * Term -> AbstractTypeDeclaration
    ExpressionStatement             : Term -> Statement
    FieldAccess                     : Term * Term -> Expression
    FieldDeclaration                : Javadoc * List(Modifier) * Type * List(VariableDeclarationFragment) -> BodyDeclaration
    FloatType                       : Type
    ForStatement                    : Term * Term * Term * Term -> Statement
    IfStatement                     : Term * Term * Term -> Statement
    ImportDeclaration               : Term -> ASTNode 
    InfixExpression                 : String * Expression * Expression -> Expression
    Initializer                     : Term -> BodyDeclaration
    InstanceofExpression            : Term * Term -> Expression
    IntType                         : Type
    Javadoc                         : Term -> Comment
    LabeledStatement                : Term * Term -> Statement
    LineComment                     : Comment
    LongType                        : Type
    MarkerAnnotation                : Name -> Annotation
    MemberRef                       : Term * Term -> ASTNode
    MemberValuePair                 : Term * Term -> ASTNode
    MethodDeclaration               : Javadoc * List(Modifier) * Type * List(TypeParameter) * SimpleName * List(SingleVariableDeclaration) * List(Name) * Block -> BodyDeclaration
    MethodInvocation                : Expression * Name * List(Type) * List(Expression) -> Expression
    MethodRef                       : Term * Term * Term -> ASTNode
    MethodRefParameter              : Type * SimpleName -> ASTNode
    Modifier                        : Term -> Modifier
    ModifierKeyword                 : Term -> ModifierKeyword
/*    Name                            : Term -> Term*/
    NormalAnnotation                : Term * Term -> Annotation
    NullLiteral                     : Expression
    NumberLiteral                   : String -> Expression
    PackageDeclaration              : Javadoc * List(Annotation) * Name -> ASTNode
    ParameterizedType               : Term * Term -> Term
    ParenthesizedExpression         : Term -> Expression
    Plus                            : Term * Term -> Term 
    PostfixExpression               : Term * Term -> Term
    PostfixExpressionOperator       : Term -> Term
    PrefixExpression                : Term * Term -> Expression
    PrefixExpressionOperator        : Term -> Term
    PrimitiveType                   : Term -> Term
    QualifiedName                   : Term * Term -> Term
    QualifiedType                   : Term * Term -> Term
    ReturnStatement                 : Expression -> Statement
    SimpleName                      : Term -> Term 
    SimpleType                      : Term -> Term
    SingleMemberAnnotation          : Term * Term -> Term
    SingleVariableDeclaration       : List(Modifier) * Type * SimpleName * Int * Expression -> SingleVariableDeclaration
    StringLiteral                   : Term -> Term 
    SuperConstructorInvocation      : Term * Term * Term -> Term
    SuperFieldAccess                : Term * Term -> Term
    SuperMethodInvocation           : Term * Term * Term * Term -> Term
    SwitchCase                      : Term -> Term
    SwitchStatement                 : Term * Term -> Term
    SynchronizedStatement           : Term * Term -> Term
    TagElement                      : Term * Term -> Term
    TextElement                     : Term -> Term
    ThisExpression                  : Term -> Expression
    ThrowStatement                  : Term -> Statement
    Times                           : Term * Term -> Term
    TryStatement                    : Term * Term * Term -> Statement
    TypeDeclaration                 : Javadoc * List(Modifier) * Name * List(TypeParameter) * Type * List(Type) * List(BodyDeclaration) * Int -> AbstractTypeDeclaration
    TypeDeclarationStatement        : Term -> Term
    TypeLiteral                     : Term -> Term
    TypeParameter                   : Term * Term -> Term
    VariableDeclarationExpression   : Term * Term * Term -> Term
    VariableDeclarationFragment     : Term * Term * Term -> Term 
    VariableDeclarationStatement    : Term * Term * Term -> Term 
    WhileStatement                  : Term * Term -> Term
    WildcardType                    : Term -> Type
  
