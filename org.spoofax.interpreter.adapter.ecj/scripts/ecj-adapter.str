module ecj-adapter
imports
  stratego-lib
  EclipseJava
  
signature
  constructors
  FILE : Term -> FILE
  
  Project : Term -> Project
    
strategies

  ecj-parse-only = ?FILE(name) ; prim("ECJ_parse_only", name)

  ecj-open-project = ?path ; prim("ECJ_open_project", path)
  
  ecj-create-project = ?path ; prim("ECJ_create_project", path)

  ecj-add-source-folder(|project) = ?path ; prim("ECJ_add_source_folder", project, path)
  
  ecj-add-jar(|project) = ?path ; prim("ECJ_add_jar", path, project)
    
  ecj-parse-and-resolve(|project) = ?FILE(name) ; prim("ECJ_parse_and_resolve", project, name) 
  
  ecj-type-of =
     ecj-is-Name
   ; ?name
   ; prim("ECJ_binding_of_name", name)
   
  ecj-type-of = 
     ecj-is-TypeDeclaration
   ; ?type
   ; prim("ECJ_type_of_typedecl", type)

  ecj-type-of =
     ?TypeDeclarationStatement(_)
   ; ?stmt
   ; prim("ECJ_type_of_typedeclstmt", stmt)
  
  ecj-type-of =
     ?TypeParameter(_,_)
   ; ?param
   ; prim("ECJ_type_of_typeparameter", param)
   
  ecj-type-of =
      ecj-is-Expression
    ; ?expr
    ; prim("ECJ_type_of_expr", expr)

  ecj-type-of =
      ecj-is-Type
    ; ?expr
    ; prim("ECJ_type_of_type", expr)

strategies

  ecj-is-cast-compatible(|target) =
     ?source
   ; prim("ECJ_is_cast_compatible", target, source)

  ecj-is-subtype-compatible(|target) =
     ?source
   ; prim("ECJ_is_subtype_compatible", target, source)

    
strategies

  ecj-method-of =
      ?MethodInvocation(_, _, _, _)
    ; ?meth
    ; prim("ECJ_method_of_methodinvoc", meth)

  ecj-method-of =
      ?SuperMethodInvocation(_, _, _, _)
    ; ?meth
    ; prim("ECJ_method_of_supermethodinvoc", meth)

  ecj-method-of =
      ?SuperConstructorInvocation(_, _, _)
    ; ?meth
    ; prim("ECJ_method_of_superctorinvoc", meth)
    
strategies

  ecj-is-TypeDeclaration = 
      ?AnnotationTypeDeclaration(_, _, _, _)
    + ?EnumDeclaration(_, _, _, _, _, _)
    + ?TypeDeclaration(_, _, _, _, _, _ ,_)
      
  ecj-is-Type = 
      ?ArrayType(_, _, _)
    + ?ParameterizedType(_, _)
    + ?PrimitiveType(_)
    + ?QualifiedType(_, _)
    + ?SimpleType(_)
    + ?WildcardType

  ecj-is-Name =
      ?SimpleName(_)
    ; ?QualifiedName(_, _)
   
  ecj-is-Expression =
      ?MarkerAnnotation(_)
    + ?NormalAnnotation(_,_)
    + ?SingleMemberAnnotation(_,_)
    + ?ArrayAccess(_, _)
    + ?ArrayCreation(_, _, _)
    + ?ArrayInitializer(_)
    + ?Assignment(_, _)
    + ?BooleanLiteral(_)
    + ?CastExpression(_, _)
    + ?CharacterLiteral(_)
    + ?ClassInstanceCreation(_, _, _, _)
    + ?ConditionalExpression(_, _, _)
    + ?FieldAccess(_, _)
    + ?InfixExpression(_, _, _)
    + ?InstanceofExpression(_, _)
    + ?MethodInvocation(_, _, _, _)
    + ?QualifiedName(_, _)
    + ?SimpleName(_)
    + ?NullLiteral()
    + ?NumberLiteral(_)
    + ?ParenthesizedExpression(_)
    + ?PostfixExpression(_, _)
    + ?StringLiteral(_)
    + ?SuperFieldAccess(_, _)
    + ?SuperMethodInvocation(_, _, _, _)
    + ?ThisExpression(_)
    + ?TypeLiteral(_)
    + ?VariableDeclarationExpression(_, _, _)
     
  