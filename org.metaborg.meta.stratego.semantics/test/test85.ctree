Specification([Signature([Constructors([ExtOpDecl("Nil",ConstType(Sort("List",[SortVar("a")]))),ExtOpDecl("",FunType([ConstType(SortVar("a")),ConstType(SortVar("b"))],ConstType(Sort("Tuple",[Sort("Cons",[SortVar("a"),Sort("Cons",[SortVar("b"),Sort("Nil",[])])])]))))])]),Strategies([SDefT("main_0_0",[],[],CallT(SVar("test_suite_2_0"),[Build(Anno(Str("switch construct testsuite"),Op("Nil",[]))),Seq(CallT(SVar("test_woow_0_0"),[],[]),Seq(CallT(SVar("test_wow_0_0"),[],[]),Seq(CallT(SVar("test_failbranch_0_0"),[],[]),CallT(SVar("test_nested_0_0"),[],[]))))],[])),SDefT("test_woow_0_0",[],[],Scope(["v_0","w_0","x_0","y_0","z_0","a_1"],Seq(Match(Var("y_0")),Seq(Seq(Seq(Build(Anno(Str("switch-woow int"),Op("Nil",[]))),Seq(Match(Var("v_0")),Seq(Build(Var("y_0")),Seq(Match(Var("z_0")),Seq(Build(Anno(Int("3"),Op("Nil",[]))),Seq(Match(Var("w_0")),Seq(Build(Var("z_0")),Seq(Match(Var("a_1")),Seq(Build(Anno(Int("101"),Op("Nil",[]))),Seq(Match(Var("x_0")),Build(Var("a_1")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_woow_0_0"),[],[])],[Var("v_0"),Var("w_0"),Var("x_0")])),Scope(["b_1","c_1","d_1","e_1","f_1","g_1"],Seq(Match(Var("e_1")),Seq(Seq(Seq(Build(Anno(Str("switch-woow string"),Op("Nil",[]))),Seq(Match(Var("b_1")),Seq(Build(Var("e_1")),Seq(Match(Var("f_1")),Seq(Build(Anno(Str("three"),Op("Nil",[]))),Seq(Match(Var("c_1")),Seq(Build(Var("f_1")),Seq(Match(Var("g_1")),Seq(Build(Anno(Str("string case failed"),Op("Nil",[]))),Seq(Match(Var("d_1")),Build(Var("g_1")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_woow_0_0"),[],[])],[Var("b_1"),Var("c_1"),Var("d_1")])),Scope(["h_1","i_1","j_1","k_1"],Seq(Match(Var("j_1")),Seq(Seq(Build(Anno(Str("switch-woow real"),Op("Nil",[]))),Seq(Match(Var("h_1")),Seq(Build(Var("j_1")),Seq(Match(Var("k_1")),Seq(Build(Anno(Real("3.5"),Op("Nil",[]))),Seq(Match(Var("i_1")),Build(Var("k_1")))))))),CallT(SVar("apply_and_fail_1_2"),[CallT(SVar("switch_woow_0_0"),[],[])],[Var("h_1"),Var("i_1")]))))))))))),SDefT("test_wow_0_0",[],[],Scope(["l_1","m_1","n_1","o_1","p_1","q_1"],Seq(Match(Var("o_1")),Seq(Seq(Seq(Build(Anno(Str("switch-wow int"),Op("Nil",[]))),Seq(Match(Var("l_1")),Seq(Build(Var("o_1")),Seq(Match(Var("p_1")),Seq(Build(Anno(Int("3"),Op("Nil",[]))),Seq(Match(Var("m_1")),Seq(Build(Var("p_1")),Seq(Match(Var("q_1")),Seq(Build(Anno(Int("101"),Op("Nil",[]))),Seq(Match(Var("n_1")),Build(Var("q_1")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_wow_0_0"),[],[])],[Var("l_1"),Var("m_1"),Var("n_1")])),Scope(["r_1","s_1","t_1","u_1","v_1","w_1"],Seq(Match(Var("u_1")),Seq(Seq(Seq(Build(Anno(Str("switch-wow string"),Op("Nil",[]))),Seq(Match(Var("r_1")),Seq(Build(Var("u_1")),Seq(Match(Var("v_1")),Seq(Build(Anno(Str("three"),Op("Nil",[]))),Seq(Match(Var("s_1")),Seq(Build(Var("v_1")),Seq(Match(Var("w_1")),Seq(Build(Anno(Str("string case failed"),Op("Nil",[]))),Seq(Match(Var("t_1")),Build(Var("w_1")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_wow_0_0"),[],[])],[Var("r_1"),Var("s_1"),Var("t_1")])),Scope(["x_1","y_1","z_1","a_2","b_2","c_2"],Seq(Match(Var("a_2")),Seq(Seq(Build(Anno(Str("switch-wow real"),Op("Nil",[]))),Seq(Match(Var("x_1")),Seq(Build(Var("a_2")),Seq(Match(Var("b_2")),Seq(Build(Anno(Real("3.5"),Op("Nil",[]))),Seq(Match(Var("y_1")),Seq(Build(Var("b_2")),Seq(Match(Var("c_2")),Seq(Build(Anno(Str("otherwise case"),Op("Nil",[]))),Seq(Match(Var("z_1")),Build(Var("c_2")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_wow_0_0"),[],[])],[Var("x_1"),Var("y_1"),Var("z_1")]))))))))))),SDefT("test_failbranch_0_0",[],[],Scope(["d_2","e_2","f_2","g_2"],Seq(Match(Var("f_2")),Seq(Seq(Seq(Build(Anno(Str("switch-intfail int"),Op("Nil",[]))),Seq(Match(Var("d_2")),Seq(Build(Var("f_2")),Seq(Match(Var("g_2")),Seq(Build(Anno(Int("3"),Op("Nil",[]))),Seq(Match(Var("e_2")),Build(Var("g_2")))))))),CallT(SVar("apply_and_fail_1_2"),[CallT(SVar("switch_intfail_0_0"),[],[])],[Var("d_2"),Var("e_2")])),Scope(["h_2","i_2","j_2","k_2","l_2","m_2"],Seq(Match(Var("k_2")),Seq(Seq(Seq(Build(Anno(Str("switch-intfail string"),Op("Nil",[]))),Seq(Match(Var("h_2")),Seq(Build(Var("k_2")),Seq(Match(Var("l_2")),Seq(Build(Anno(Str("three"),Op("Nil",[]))),Seq(Match(Var("i_2")),Seq(Build(Var("l_2")),Seq(Match(Var("m_2")),Seq(Build(Anno(Str("string case failed"),Op("Nil",[]))),Seq(Match(Var("j_2")),Build(Var("m_2")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_intfail_0_0"),[],[])],[Var("h_2"),Var("i_2"),Var("j_2")])),Scope(["n_2","o_2","p_2","q_2","r_2","s_2"],Seq(Match(Var("q_2")),Seq(Seq(Build(Anno(Str("switch-intfail real"),Op("Nil",[]))),Seq(Match(Var("n_2")),Seq(Build(Var("q_2")),Seq(Match(Var("r_2")),Seq(Build(Anno(Real("3.5"),Op("Nil",[]))),Seq(Match(Var("o_2")),Seq(Build(Var("r_2")),Seq(Match(Var("s_2")),Seq(Build(Anno(Str("otherwise case"),Op("Nil",[]))),Seq(Match(Var("p_2")),Build(Var("s_2")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_intfail_0_0"),[],[])],[Var("n_2"),Var("o_2"),Var("p_2")]))))))))))),SDefT("test_nested_0_0",[],[],Scope(["t_2","u_2","v_2","w_2","x_2","y_2"],Seq(Match(Var("w_2")),Seq(Seq(Seq(Build(Anno(Str("switch-nested int"),Op("Nil",[]))),Seq(Match(Var("t_2")),Seq(Build(Var("w_2")),Seq(Match(Var("x_2")),Seq(Build(Anno(Int("3"),Op("Nil",[]))),Seq(Match(Var("u_2")),Seq(Build(Var("x_2")),Seq(Match(Var("y_2")),Seq(Build(Anno(Int("101"),Op("Nil",[]))),Seq(Match(Var("v_2")),Build(Var("y_2")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_nested_0_0"),[],[])],[Var("t_2"),Var("u_2"),Var("v_2")])),Scope(["z_2","a_3","b_3","c_3","d_3","e_3"],Seq(Match(Var("c_3")),Seq(Seq(Build(Anno(Str("switch-nested string"),Op("Nil",[]))),Seq(Match(Var("z_2")),Seq(Build(Var("c_3")),Seq(Match(Var("d_3")),Seq(Build(Anno(Str("three"),Op("Nil",[]))),Seq(Match(Var("a_3")),Seq(Build(Var("d_3")),Seq(Match(Var("e_3")),Seq(Build(Anno(Str("otherwise case"),Op("Nil",[]))),Seq(Match(Var("b_3")),Build(Var("e_3")))))))))))),CallT(SVar("apply_test_1_3"),[CallT(SVar("switch_nested_0_0"),[],[])],[Var("z_2"),Var("a_3"),Var("b_3")])))))))),SDefT("switch_woow_0_0",[],[],Scope(["f_3","g_3","h_3"],Seq(Match(Var("f_3")),Seq(Build(Anno(Int("100"),Op("Nil",[]))),Seq(Match(Var("h_3")),Seq(Build(Var("f_3")),Seq(Match(Var("g_3")),Seq(Build(Var("h_3")),GuardedLChoice(Scope(["i_3"],Seq(Match(Var("i_3")),Seq(Build(Var("g_3")),Seq(CallT(SVar("is_int_0_0"),[],[]),Build(Var("i_3")))))),GuardedLChoice(Scope(["k_3","l_3"],Seq(Match(Var("l_3")),Seq(Match(Var("k_3")),Seq(Build(Var("l_3")),Seq(Build(Anno(Op("",[Var("k_3"),Anno(Int("1"),Op("Nil",[]))]),Op("Nil",[]))),CallT(SVar("add_0_0"),[],[])))))),Id,Build(Anno(Int("-1"),Op("Nil",[])))),Scope(["j_3"],Seq(Match(Var("j_3")),Seq(Build(Var("g_3")),Seq(CallT(SVar("is_string_0_0"),[],[]),Seq(Build(Var("j_3")),GuardedLChoice(Scope(["m_3","n_3"],Seq(Match(Var("n_3")),Seq(Match(Var("m_3")),Seq(Build(Var("n_3")),Seq(Build(Anno(Op("",[Var("m_3"),Anno(Str("should fail"),Op("Nil",[]))]),Op("Nil",[]))),CallT(SVar("strcat_0_0"),[],[])))))),Id,Build(Anno(Str("string case failed"),Op("Nil",[])))))))))))))))))),SDefT("switch_wow_0_0",[],[],Scope(["o_3","p_3","q_3"],Seq(Match(Var("o_3")),Seq(Build(Anno(Int("100"),Op("Nil",[]))),Seq(Match(Var("q_3")),Seq(Build(Var("o_3")),Seq(Match(Var("p_3")),Seq(Build(Var("q_3")),GuardedLChoice(Scope(["r_3"],Seq(Match(Var("r_3")),Seq(Build(Var("p_3")),Seq(CallT(SVar("is_int_0_0"),[],[]),Build(Var("r_3")))))),GuardedLChoice(Scope(["t_3","u_3"],Seq(Match(Var("u_3")),Seq(Match(Var("t_3")),Seq(Build(Var("u_3")),Seq(Build(Anno(Op("",[Var("t_3"),Anno(Int("1"),Op("Nil",[]))]),Op("Nil",[]))),CallT(SVar("add_0_0"),[],[])))))),Id,Build(Anno(Int("-1"),Op("Nil",[])))),GuardedLChoice(Scope(["s_3"],Seq(Match(Var("s_3")),Seq(Build(Var("p_3")),Seq(CallT(SVar("is_string_0_0"),[],[]),Build(Var("s_3")))))),GuardedLChoice(Scope(["v_3","w_3"],Seq(Match(Var("w_3")),Seq(Match(Var("v_3")),Seq(Build(Var("w_3")),Seq(Build(Anno(Op("",[Var("v_3"),Anno(Str("should fail"),Op("Nil",[]))]),Op("Nil",[]))),CallT(SVar("strcat_0_0"),[],[])))))),Id,Build(Anno(Str("string case failed"),Op("Nil",[])))),Build(Anno(Str("otherwise case"),Op("Nil",[]))))))))))))),SDefT("switch_intfail_0_0",[],[],Scope(["x_3","y_3","z_3"],Seq(Match(Var("x_3")),Seq(Build(Anno(Int("100"),Op("Nil",[]))),Seq(Match(Var("z_3")),Seq(Build(Var("x_3")),Seq(Match(Var("y_3")),Seq(Build(Var("z_3")),GuardedLChoice(Scope(["a_4"],Seq(Match(Var("a_4")),Seq(Build(Var("y_3")),Seq(CallT(SVar("is_int_0_0"),[],[]),Build(Var("a_4")))))),Fail,GuardedLChoice(Scope(["b_4"],Seq(Match(Var("b_4")),Seq(Build(Var("y_3")),Seq(CallT(SVar("is_string_0_0"),[],[]),Build(Var("b_4")))))),GuardedLChoice(Scope(["c_4","d_4"],Seq(Match(Var("d_4")),Seq(Match(Var("c_4")),Seq(Build(Var("d_4")),Seq(Build(Anno(Op("",[Var("c_4"),Anno(Str("should fail"),Op("Nil",[]))]),Op("Nil",[]))),CallT(SVar("strcat_0_0"),[],[])))))),Id,Build(Anno(Str("string case failed"),Op("Nil",[])))),Build(Anno(Str("otherwise case"),Op("Nil",[]))))))))))))),SDefT("switch_nested_0_0",[],[],Scope(["e_4","f_4","g_4"],Seq(Match(Var("e_4")),Seq(Build(Anno(Int("100"),Op("Nil",[]))),Seq(Match(Var("g_4")),Seq(Build(Var("e_4")),Seq(Match(Var("f_4")),Seq(Build(Var("g_4")),GuardedLChoice(Scope(["h_4","i_4","j_4"],Seq(Match(Var("h_4")),Seq(Build(Var("f_4")),Seq(Match(Var("j_4")),Seq(Build(Anno(Str("foo"),Op("Nil",[]))),Seq(Match(Var("i_4")),Seq(Build(Var("j_4")),Seq(GuardedLChoice(Scope(["k_4"],Seq(Match(Var("k_4")),Seq(Build(Var("i_4")),Seq(CallT(SVar("is_int_0_0"),[],[]),Build(Var("k_4")))))),Fail,Scope(["l_4"],Seq(Match(Var("l_4")),Seq(Build(Var("i_4")),Seq(CallT(SVar("is_string_0_0"),[],[]),Seq(Build(Var("l_4")),Fail)))))),Build(Var("h_4")))))))))),Build(Anno(Str("nested case condition"),Op("Nil",[]))),GuardedLChoice(Scope(["m_4"],Seq(Match(Var("m_4")),Seq(Build(Var("f_4")),Seq(CallT(SVar("is_int_0_0"),[],[]),Build(Var("m_4")))))),GuardedLChoice(Scope(["n_4","o_4"],Seq(Match(Var("o_4")),Seq(Match(Var("n_4")),Seq(Build(Var("o_4")),Seq(Build(Anno(Op("",[Var("n_4"),Anno(Int("1"),Op("Nil",[]))]),Op("Nil",[]))),CallT(SVar("add_0_0"),[],[])))))),Id,Build(Anno(Int("-1"),Op("Nil",[])))),Build(Anno(Str("otherwise case"),Op("Nil",[]))))))))))))),ExtSDef("test_suite_2_0",[VarDec("d_6",FunType([ConstType(Sort("ATerm",[]))],ConstType(Sort("ATerm",[])))),VarDec("e_6",FunType([ConstType(Sort("ATerm",[]))],ConstType(Sort("ATerm",[]))))],[]),ExtSDef("apply_test_1_3",[VarDec("d_7",FunType([ConstType(Sort("ATerm",[]))],ConstType(Sort("ATerm",[]))))],[VarDec("a_7",ConstType(Sort("ATerm",[]))),VarDec("b_7",ConstType(Sort("ATerm",[]))),VarDec("c_7",ConstType(Sort("ATerm",[])))]),ExtSDef("apply_and_fail_1_2",[VarDec("n_7",FunType([ConstType(Sort("ATerm",[]))],ConstType(Sort("ATerm",[]))))],[VarDec("l_7",ConstType(Sort("ATerm",[]))),VarDec("m_7",ConstType(Sort("ATerm",[])))]),ExtSDef("is_string_0_0",[],[]),ExtSDef("strcat_0_0",[],[]),ExtSDef("is_int_0_0",[],[]),ExtSDef("add_0_0",[],[])])])