module stratego-signatures

signature
  
  sorts
    Strategy
    STerm
    Def
    SVar
    Typedid
    Type
    Decl
    Module
    Opdecl
    Sdecl
    Sort
    Anno
    PreTerm
    Var
    Wld
    StrategyDef
    ConstType
    FunType
  
  constructors
    __PreTerm2STerm__  : PreTerm -> STerm {implicit}
    __Var2PreTerm__    : Var -> PreTerm {implicit}
    __Wld2PreTerm__    : Wld -> PreTerm {implicit}
    __StrategyDef2Def__: StrategyDef -> Def {implicit}
    __ConstType2Type__ : ConstType -> Type  {implicit}
    __FunType2Type__: FunType -> Type {implicit}
  
  constructors
    Signature                : List(Sdecl) -> Decl
    Strategies               : List(Def) -> Decl
    Specification            : List(Decl) -> Module
    VarDec                   : String * Type -> Typedid
    FunType                  : List(Type) * Type -> FunType
    SDefT                    : String * List(Typedid) * List(Typedid) * Strategy -> StrategyDef
    ExtSDef                  : String * List(Typedid) * List(Typedid) -> StrategyDef
    LChoice                  : Strategy * Strategy -> Strategy
    Call                     : SVar * List(Strategy) -> Strategy
    All                      : Strategy -> Strategy
    One                      : Strategy -> Strategy
    Some                     : Strategy -> Strategy
    PrimT                    : String * List(Strategy) * List(STerm) -> Strategy
    GuardedLChoice           : Strategy * Strategy * Strategy -> Strategy
    Seq                      : Strategy * Strategy -> Strategy
    Scope                    : List(String) * Strategy -> Strategy
    Build                    : STerm -> Strategy
    Match                    : STerm -> Strategy
    Id                       : Strategy
    Fail                     : Strategy
    CallDynamic              : STerm * List(Strategy) * List(STerm) -> Strategy
    CallT                    : SVar * List(Strategy) * List(STerm) -> Strategy
    Let                      : List(Def) * Strategy -> Strategy
    ImportTerm               : String -> Strategy
    SVar                     : String -> SVar
    ExtOpDeclInj             : Type -> Opdecl
    ExtOpDeclQ               : String * Type -> Opdecl
    ExtOpDecl                : String * Type -> Opdecl
    OpDeclInj                : Type -> Opdecl
    OpDeclQ                  : String * Type -> Opdecl
    OpDecl                   : String * Type -> Opdecl
    Constructors             : List(Opdecl) -> Sdecl
    Wld                      : Wld
    As                       : Var * PreTerm -> PreTerm
    Explode                  : STerm * STerm -> PreTerm
    Op                       : String * List(STerm) -> PreTerm
    Str                      : String -> PreTerm
    Int                      : String -> PreTerm
    Real                     : String -> PreTerm
    NoAnnoList               : PreTerm -> STerm
    Anno                     : PreTerm * PreTerm -> PreTerm
    Var                      : String -> Var
    Sort                     : String * List(Sort) -> Sort
    ConstType                : Sort -> ConstType
    SortVar                  : String -> Sort
    SortNoArgs               : String -> Sort
    AnnoDef                  : List(Anno) * StrategyDef -> Def
    Internal                 : Anno
    Override                 : Anno
    Extend                   : Anno
    
  // constructors
    // RuleNames                : Term -> RuleNames
    //                          : List(Id) -> RuleNames
    // RDecT                    : Id * List(Typedid) * List(Typedid) -> RuleDec
    // RDec                     : Id * List(Typedid) -> RuleDec
    // RDecNoArgs               : Id -> RuleDec
    // DynRuleScopeId           : Id -> DynRuleScopeId
    // LabeledDynRuleScopeId    : Id * Term -> DynRuleScopeId
    // DynRuleId                : RuleDec -> DynRuleId
    // AddLabelDynRuleId        : RuleDec * Term -> DynRuleId
    // LabeledDynRuleId         : RuleDec * Term -> DynRuleId
    // SetDynRuleDepends        : DynRuleId * Rule * Term -> DynRuleDef
    // DynRuleAssignAdd         : DynRuleId * Term -> DynRuleDef
    // DynRuleAssign            : DynRuleId * Term -> DynRuleDef
    // SetDynRuleMatch          : DynRuleId * Term -> DynRuleDef
    // AddDynRule               : DynRuleId * Rule -> DynRuleDef
    // SetDynRule               : DynRuleId * Rule -> DynRuleDef
    // UndefineDynRule          : DynRuleId * Term -> DynRuleDef
    // AddScopeLabel            : Id * Term -> DynRuleDef
    // ScopeLabels              : Term -> ScopeLabels
    //                          : List(DynRuleScopeId) -> ScopeLabels
    // Overlay                  : Id * List(Id) * Term -> Overlay
    // OverlayNoArgs            : Id * Term -> Overlay
    // SwitchCase               : Strategy * Strategy -> SwitchCase
    // StrategyCurly            : Strategy -> StrategyCurly
    //                          : Strategy -> StrategyAngle
    // WithClause               : Strategy -> RuleCond
    // WhereClause              : Strategy -> RuleCond
    // Rule                     : Term * Term * List(RuleCond) -> Rule
    // Rule                     : Term * Term * Strategy -> Rule
    // RuleNoCond               : Term * Term -> Rule
    // RDefT                    : Id * List(Typedid) * List(Typedid) * Rule -> RuleDef
    // RDef                     : Id * List(Typedid) * Rule -> RuleDef
    // RDefNoArgs               : Id * Rule -> RuleDef
    // ListVar                  : LId -> LID
    //                          : String -> Char
    //                          : String -> Padding
    // QBr                      : String -> StringQuotedPart4
    // QDollar                  : String -> StringQuotedPart4
    // QStr                     : String -> StringQuotedPart4
    // StringEscape4            : Padding * Term -> StringQuotedPart4
    // QBr                      : String -> StringQuotedPart3
    // QDollar                  : String -> StringQuotedPart3
    // QStr                     : String -> StringQuotedPart3
    // StringEscape3            : Padding * Term -> StringQuotedPart3
    // QBr                      : String -> StringQuotedPart2
    // QDollar                  : String -> StringQuotedPart2
    // QStr                     : String -> StringQuotedPart2
    // StringEscape2            : Padding * Term -> StringQuotedPart2
    // QBr                      : String -> StringQuotedPart1
    // QDollar                  : String -> StringQuotedPart1
    // QStr                     : String -> StringQuotedPart1
    // StringEscape1            : Padding * Term -> StringQuotedPart1
    // StringQuotation4         : Padding * List(StringQuotedPart4) -> StringQuotation
    // StringQuotation3         : Padding * List(StringQuotedPart3) -> StringQuotation
    // StringQuotation2         : Padding * List(StringQuotedPart2) -> StringQuotation
    // StringQuotation1         : Padding * List(StringQuotedPart1) -> StringQuotation
    // ImportWildcard           : ModName -> ImportModName
    // Import                   : ModName -> ImportModName
    // Overlays                 : List(Overlay) -> Decl
    // Rules                    : List(Def) -> Decl
    // Imports                  : List(ImportModName) -> Decl
    // Module                   : ModName * List(Decl) -> Module
    //                          : Strategy -> StrategyMid
    // ParenStrat               : Strategy -> StrategyParen
    // DefaultVarDec            : String -> Typedid
    //                          : String -> EmptyId
    // SDef                     : Id * List(Typedid) * Strategy -> StrategyDef
    // SDefNoArgs               : Id * Strategy -> StrategyDef
    // ExtSDef                  : EmptyId * List(Typedid) * List(Typedid) -> StrategyDef
    // ExtSDefInl               : Id * List(Typedid) * List(Typedid) * Strategy -> StrategyDef
    // DynRuleIntersectUnion    : Strategy * RuleNames * RuleNames * Strategy -> Strategy
    // DynRuleUnion             : Strategy * RuleNames * Strategy -> Strategy
    // DynRuleIntersect         : Strategy * RuleNames * Strategy -> Strategy
    // DynRuleIntersectUnionFix : RuleNames * RuleNames * Strategy -> Strategy
    // DynRuleUnionFix          : RuleNames * Strategy -> Strategy
    // DynRuleIntersectFix      : RuleNames * Strategy -> Strategy
    // GenDynRules              : List(DynRuleDef) -> Strategy
    // DynRuleScope             : ScopeLabels * Strategy -> Strategy
    // SwitchChoice             : Strategy * List(SwitchCase) * Strategy -> Strategy
    // SwitchChoiceNoOtherwise  : Strategy * List(SwitchCase) -> Strategy
    // IfThen                   : Strategy * Strategy -> Strategy
    // CondChoice               : Strategy * Strategy * Strategy -> Strategy
    // Proceed                  : List(Strategy) -> Strategy
    // RChoice                  : Strategy * Strategy -> Strategy
    // Choice                   : Strategy * Strategy -> Strategy
    // SRule                    : Rule -> Strategy
    // LRule                    : Rule -> Strategy
    // CallNoArgs               : SVar -> Strategy
    // AnnoCong                 : Strategy * Strategy -> Strategy
    // Assign                   : Term * Term -> Strategy
    // AM                       : Strategy * Term -> Strategy
    // ExplodeCong              : Strategy * StrategyParen -> Strategy
    // ListCong                 : List(Strategy) * Strategy -> Strategy
    // ListCongNoTail           : List(Strategy) -> Strategy
    // TupleCong                : Strategy * List(Strategy) -> Strategy
    // EmptyTupleCong           : Strategy
    // CongQ                    : String * List(Strategy) -> Strategy
    // CharCong                 : Char -> Strategy
    // RealCong                 : Real -> Strategy
    // IntCong                  : Int -> Strategy
    // StrCong                  : String -> Strategy
    // Prim                     : String * List(Term) -> Strategy
    // PrimNoArgs               : String -> Strategy
    // Test                     : Strategy -> Strategy
    // With                     : Strategy -> Strategy
    // Where                    : Strategy -> Strategy
    // Not                      : Strategy -> Strategy
    // Rec                      : Id * Strategy -> Strategy
    // BA                       : StrategyAngle * Term -> Strategy
    // ScopeDefault             : Strategy -> Strategy
    // ProceedNoArgs            : Strategy
    // ProceedT                 : List(Strategy) * List(Term) -> Strategy
    //                          : RuleDef -> Def
    // AnnoDef                  : List(Anno) * RuleDef -> Def
    // SortTuple                : List(Sort) -> Sort
    // SortListTl               : List(Sort) * Sort -> Sort
    // SortList                 : List(Sort) -> Sort
    
    // Sorts                    : List(Sort) -> Sdec
   
    // BuildDefaultPT           : PreTerm -> PreTerm
    // ListTail                 : List(Term) * Term -> PreTerm
    // List                     : List(Term) -> PreTerm
    // Tuple                    : List(Term) -> PreTerm
    // RootApp                  : StrategyAngle -> PreTerm
    // App                      : Strategy * Term -> PreTerm
    // Char                     : Char -> PreTerm
    //                          : StringQuotation -> PreTerm
    // OpQ                      : String * List(Term) -> PreTerm
    // Real                     : Real -> PreTerm
    // RootApp                  : StrategyAngle -> Term
    // App                      : Strategy * Term -> Term
    // AnnoList                 : PreTerm * List(Term) -> Term
    // BuildDefault             : Term -> Term
    // As                       : Var * Term -> Term
    //                          : Wld -> Term
    //                          : Var -> Term
                             // : LID -> ID
    // Var                      : LID -> Var
    //                          : String -> String
    //                          : String -> Real
    //                          : String -> Int
    //                          : String -> UCID
    //                          : String -> LCID
    //                          : String -> LId
    //                          : String -> ModName
