module definitions

imports
  shared
  stratego-signatures
  state

signature
  internal-sorts
    LetHelper

  internal-constructors
    letEval : List(Def) * Strategy -> LetHelper

  arrows
    LetHelper -leteval-> Value

rules // let - in - end

  SEnv d |- Let(sdefs, s) --> v
  where
    sdefNames(sdefs) -exid-> snames,
    (SParAlloc(snames), SEnv d) -salloc-> (_, SEnv d'),
    SEnv d' |- letEval(sdefs, s) -leteval-> v
  
  letEval([], in_s) -leteval-> v
  where
    in_s --> v
  
  VEnv e, SEnv d |- letEval([SDefT(sname, ss, ts, s) | sdefs], in_s) -leteval-> v
  where
    typedIds(ss) -exid-> ss',
    typedIds(ts) -exid-> ts',
    (SUpdate(sname, Thunk(sname, ss', ts', s, e, d)), SEnv d) -salloc-> (_, SEnv d'),
    VEnv e, SEnv d' |- letEval(sdefs, in_s) -leteval-> v
    
signature
  internal-sorts
    Allocator
    AllocatorResult
    
  internal-constructors
    allocDefs : List(Def) -> Allocator
    allocdDefs : List(Def) -> AllocatorResult 
    storeDefs : List(Def) -> Allocator

  arrows
    Module -allocmodule-> Unit
    Allocator -allocsdefs-> AllocatorResult
    Allocator -storesdefs-> Unit

rules // strategy definitions
  
  Specification([_, Strategies(ss)]) -allocmodule-> U()
  where
    allocDefs(ss) -allocsdefs-> allocdDefs(ss'),
    storeDefs(ss') -storesdefs-> _
  
  allocDefs([]) -allocsdefs-> allocdDefs([])
  
  allocDefs([AnnoDef(_, sdef') | sdefs]) -allocsdefs-> ad
  where
    allocDefs([sdef' | sdefs]) -allocsdefs-> ad
  
  allocDefs([ExtSDef(sname, _, _) | sdefs]) -allocsdefs-> ad
  where
    SSoftAlloc(sname) -salloc-> _,
    allocDefs(sdefs) -allocsdefs-> ad
  
  allocDefs([sdef@SDefT(sname, _, _, _) | sdefs]) -allocsdefs-> allocdDefs([sdef | sdefs'])
  where
    SAlloc(sname) -salloc-> _,
    allocDefs(sdefs) -allocsdefs-> allocdDefs(sdefs')
  
  storeDefs([]) -storesdefs-> U()
  
  VEnv e |- (storeDefs([SDefT(sname, ss, ts, s) | sdefs]),  SEnv d) -storesdefs-> (U(),  SEnv d'')
  where
    typedIds(ss) -exid-> ss',
    typedIds(ts) -exid-> ts',
    (SUpdate(sname, Thunk(sname, ss', ts', s, e, d)), SEnv d) -salloc-> (_, SEnv d'),
    VEnv e |- (storeDefs(sdefs), SEnv d') -storesdefs-> (_, SEnv d'')
  
signature
  internal-sorts
    NameExtractor

  arrows
    NameExtractor -exid-> List(String)
    
  internal-constructors
    typedIds: List(Typedid) -> NameExtractor
    sdefNames: List(Def) -> NameExtractor
    
rules // typedid name extractor

  typedIds([]) -exid-> []
 
  typedIds([VarDec(x, _) | xs]) -exid-> [ x | xs' ]
  where
    typedIds(xs) -exid-> xs'

rules // SDefT name extractor

  sdefNames([]) -exid-> []
  
  sdefNames([SDefT(sname, _, _, _) | sdefs]) -exid-> [sname | snames]
  where
    sdefNames(sdefs) -exid-> snames

rules // TODO store constructor declarations




