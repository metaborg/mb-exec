module org/spoofax/compiler/fastpack
imports
  libstrc 
  libstratego-lib 
  libstratego-sglr

strategies

  main =
     debug
   ; ?[file, path, lib]
   ; if	!lib => "1" then
       <set-config> ("--library", ())
     end
   ; where (<set-config> ("program", "jstrc"))
   ; !(file, <string-tokenize(|[':'])> path)
   ; debug(!"pack ")
   ; jstratego-pack-stratego

  stratego-file-to-term =
     ?file
   ; prim("JSGLR_parse_stratego", file)

  get-module-trm =
      ?(mod, <id>)
    ; (fetch-elem(
               <concat-strings> [<id>,"/",mod,".rtree"]
             ; file-exists
             ; debug(!"ReadFromFile: ")
             ; ReadFromFile
           <+
               <concat-strings> [<id>,"/",mod,".str"]
             ; file-exists
             ; debug(!"Parse file: ")
             ; stratego-file-to-term
             ; implode-asfix
           )
       <+
          fatal-err(|<concat-strings> ["Cannot find module: ", mod]))

  jstratego-pack-stratego =
        ?(mod, path)
      ; <dirname> mod => dir
      ; <base-filename> mod
      ; if get-extension => "str" then
          remove-extension
        else if get-extension => "rtree" then
          remove-extension
        end end
      ; <pack> ([<id>], [dir|path], [], [])
      ; map(
           ?Specification(<id>)
          <+
           ?Module(_, <id>)
         ; filter(not(?Imports(_))))
      ; !Specification(<concat>)


  pack =
    ?([], _, _, <id>)

  pack =
        ?([mod|mods], path, done, packed)
        ; <get-module-trm> (mod, path) => parsed
        ; get-imports
        ; <diff> (<id>, done)
        ; <concat> [<id>, mods]
        ; <pack> (<id>, path, [mod|done], [parsed|packed])

  get-imports =
      ?Module(_, <filter(?Imports(<map(?Import(<id>))>)); concat>)

  get-imports =
      ?Specification(_); ![]
