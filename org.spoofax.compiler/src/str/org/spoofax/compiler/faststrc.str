module org/spoofax/compiler/faststrc
imports
  libstrc 
  libstratego-lib 
  libstratego-sglr

strategies

  main =
      ?[<id>]
    ; ReadFromFile
    ; fast-compile-spec
    
  fast-compile-spec = 
      ?Specification(<map(FastCompileSections)>)
    ; !Specification(<id>)
    
  FastCompileSections: 
    Signature(a) -> Signature(a)
  
  FastCompileSections:
    Strategies(s) -> Strategies(s')
  where
      s'  := <topdown(try(FastCompileDown))
            ; bottomup(try(FastCompile))> s

  FastCompile:
    SDefNoArgs(n, b) -> SDefT(<fast-normalize-name(|0,0)> n, [], [], b)
  
  FastCompile:
    SDefT(n, s, t, b) -> SDefT(<fast-normalize-name(|<length> s, <length> t)> n, s, t, b)
    
  FastCompileDown:
    SDefT(n, s, t, b) -> SDefT(n, <map(FastCompileSArgs)> s, <map(FastCompileTArgs)> t, b)

  FastCompileDown:
    ExtSDef(n, s, t) -> ExtSDef(n, <map(FastCompileSArgs)> s, <map(FastCompileTArgs)> t)
  
  FastCompileTArgs:
    DefaultVarDec(n) -> VarDec(n, ConstType(Sort("ATerm", [])))
  
  FastCompileSArgs:
    DefaultVarDec(n) -> VarDec(
              <fast-normalize-name(|0,0)> n
            , FunType(
                [ConstType(Sort("ATerm", []))]
              , ConstType(Sort("ATerm", []))
              )
            )
  
  fast-build-term = 
      ?t
    ; vn := Var(<new>)
    ; e  := Seq(Build(t), Match(vn))
    ; !(vn, e)
  
  FastCompile:
    BA(s,t) -> Seq(Build(t), s)
    
  FastCompile:
    NoAnnoList(t) -> Anno(t, Op("Nil", []))

  FastCompile:
    Call(SVar(n), sargs) -> CallT(SVar(<fast-normalize-name(|<length> sargs,0)> n), sargs, [])
    
  FastCompile:
    CallNoArgs(SVar(n)) -> CallT(SVar(<fast-normalize-name(|0,0)> n), [], [])
    
  FastCompile:
    CallT(SVar(n), sargs, targs) -> asgn
  where
      n'     := <fast-normalize-name(|<length> sargs, <length> targs)> n
    ; sargs' := sargs 
    ; debug(!"sargs ")
    ; builds := <map(fast-build-term)> targs
    ; debug(!"builds ")
    ; targs' := <map(Fst)> builds
    ; call   := CallT(SVar(n'), sargs', targs')
    ; asgn   := <map(Snd) ; foldr(!call, \ (x,y) -> Seq(x,y) \)> builds
        
  fast-normalize-name(|sn, tn) = 
      string-replace(|"-", "_")
    ; <concat-strings> [<id>, "_", <int-to-string> sn, "_", <int-to-string> tn]
 
    