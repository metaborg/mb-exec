/*
 * Copyright (c) 2005, Karl Trygve Kalleberg <karltk@ii.uib.no>
 * 
 * Licensed under the GNU General Public License, v2.0
 */
module spoofax/transformlet/common
imports
  spoofax/core/aterm
  
strategies

  /**
   * Return the path of the transformlet repository.
   *
   * @type Interpreter -> String
   */
  xlet-get-repo-path = prim("SPX_get_repo_path")

  /**
   * Download and install Transformlet into local repository.
   *
   * @param Interpreter itp - handle for interpreter
   * @type URL -> URL
   */
  xlet-fetch-xlet(|itp) = prim("SPX_fetch_xlet")

  /**
   * Lookup path to transformlet.
   *
   * @type Name -> FILE
   */  
  xlet-lookup-xlet(|itp) = prim("SPX_lookup_xlet", itp, <id>)
  
  xlet-process-meta-info = unimpl
  
  xlet-list-xlets(|itp) = prim("SPX_list_xlets")
  
  xlet-interpreter-current = spoofax-interpreter-current
  
  /**
   * Load a transformlet by name into the given interpreter.
   *
   * @param itp - handle to the interpreter
   * @type FILE -> FILE
   */
  xlet-load-xlet(|itp) = 
      ?name
    ; <path-concat> [ <xlet-get-repo-path>(), name, ".xlet" ]
    ; aterm-read 
    ; xlet-split => (meta-info, spec)
    ; <xlet-process-meta-info> meta-info
    ; spoofax-interpreter-current => itp
    ; <spoofax-interpreter-load-ctree(|itp)> spec
    ; <spoofax-interpreter-invoke(|itp)> "meta-main" => xlet'
    ; xlet-interpreter-current => xlet-itp
    ; <spoofax-interpreter-invoke(|xlet-itp)> "register-actions"
    ; <spoofax-interpreter-remove-sdefs(|xlet-itp)> [ "meta-main", "register-actions" ]
    
strategies

  xlet-split = \ XLet(package-desc, spec) -> (package-desc, spec) \ 